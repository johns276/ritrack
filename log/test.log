  [1m[36m (243.3ms)[0m  [1mDROP DATABASE IF EXISTS "ritrack_test"[0m
  [1m[35m (0.7ms)[0m  CREATE DATABASE "ritrack_test" ENCODING = 'unicode'
PG::InsufficientPrivilege: ERROR:  permission denied to create database
: CREATE DATABASE "ritrack_test" ENCODING = 'unicode'
  [1m[36m (227.0ms)[0m  [1mDROP DATABASE IF EXISTS "ritrack_test"[0m
  [1m[35m (0.7ms)[0m  CREATE DATABASE "ritrack_test" ENCODING = 'unicode'
PG::InsufficientPrivilege: ERROR:  permission denied to create database
: CREATE DATABASE "ritrack_test" ENCODING = 'unicode'
  [1m[36m (0.3ms)[0m  [1mDROP DATABASE IF EXISTS "ritrack_test"[0m
  [1m[35m (791.0ms)[0m  CREATE DATABASE "ritrack_test" ENCODING = 'unicode'
  [1m[36mSQL (1.6ms)[0m  [1mCREATE EXTENSION IF NOT EXISTS "plpgsql"[0m
  [1m[35m (111.4ms)[0m  CREATE TABLE "users" ("id" serial primary key, "first_name" character varying(255), "last_name_string" character varying(255), "nick_name" character varying(255), "login_name" character varying(255), "notes" text, "created_at" timestamp, "updated_at" timestamp, "start_date" date, "end_date" date) 
  [1m[36m (4.3ms)[0m  [1mCREATE TABLE "schema_migrations" ("version" character varying(255) NOT NULL) [0m
  [1m[35m (62.9ms)[0m  CREATE UNIQUE INDEX "unique_schema_migrations" ON "schema_migrations" ("version")
  [1m[36m (0.8ms)[0m  [1mSELECT version FROM "schema_migrations"[0m
  [1m[35m (6.2ms)[0m  INSERT INTO "schema_migrations" (version) VALUES ('20130811195620')
  [1m[36m (8.3ms)[0m  [1mINSERT INTO "schema_migrations" (version) VALUES ('20130811193133')[0m
  [1m[35m (7.9ms)[0m  INSERT INTO "schema_migrations" (version) VALUES ('20130811195557')
  [1m[36mActiveRecord::SchemaMigration Load (0.5ms)[0m  [1mSELECT "schema_migrations".* FROM "schema_migrations"[0m
  [1m[35mActiveRecord::SchemaMigration Load (0.4ms)[0m  SELECT "schema_migrations".* FROM "schema_migrations"
  [1m[36m (0.6ms)[0m  [1mALTER TABLE "users" DISABLE TRIGGER ALL;ALTER TABLE "schema_migrations" DISABLE TRIGGER ALL[0m
  [1m[35m (0.2ms)[0m  BEGIN
  [1m[36mFixture Delete (0.4ms)[0m  [1mDELETE FROM "users"[0m
  [1m[35mFixture Insert (0.8ms)[0m  INSERT INTO "users" ("id", "first_name", "last_name_string", "nick_name", "login_name", "start_date", "end_date", "notes", "created_at", "updated_at") VALUES (1, 'Michael', 'Orsted', 'Mike', 'orstedma', '2012-02-04', NULL, 'This user lives in Chicago.', '2013-08-11 21:10:33', '2013-08-11 21:10:33')
  [1m[36mFixture Insert (0.4ms)[0m  [1mINSERT INTO "users" ("id", "first_name", "last_name_string", "nick_name", "login_name", "start_date", "end_date", "notes", "created_at", "updated_at") VALUES (2, 'Frederick', 'Free-Loader', 'Frederick', 'freelofw', '2012-03-04', NULL, 'This user is completely useless', '2013-08-11 21:10:33', '2013-08-11 21:10:33')[0m
  [1m[35m (13.0ms)[0m  COMMIT
  [1m[36m (0.3ms)[0m  [1mALTER TABLE "users" ENABLE TRIGGER ALL;ALTER TABLE "schema_migrations" ENABLE TRIGGER ALL[0m
  [1m[35m (0.2ms)[0m  BEGIN
----------------------------------------------------------
UserTest: test: User should require first_name to be set. 
----------------------------------------------------------
  [1m[36m (0.2ms)[0m  [1mROLLBACK[0m
  [1m[36m (226.5ms)[0m  [1mDROP DATABASE IF EXISTS "ritrack_test"[0m
  [1m[35m (774.4ms)[0m  CREATE DATABASE "ritrack_test" ENCODING = 'unicode'
  [1m[36mSQL (1.6ms)[0m  [1mCREATE EXTENSION IF NOT EXISTS "plpgsql"[0m
  [1m[35m (110.9ms)[0m  CREATE TABLE "users" ("id" serial primary key, "first_name" character varying(255), "last_name_string" character varying(255), "nick_name" character varying(255), "login_name" character varying(255), "notes" text, "created_at" timestamp, "updated_at" timestamp, "start_date" date, "end_date" date) 
  [1m[36m (4.6ms)[0m  [1mCREATE TABLE "schema_migrations" ("version" character varying(255) NOT NULL) [0m
  [1m[35m (62.0ms)[0m  CREATE UNIQUE INDEX "unique_schema_migrations" ON "schema_migrations" ("version")
  [1m[36m (0.8ms)[0m  [1mSELECT version FROM "schema_migrations"[0m
  [1m[35m (6.3ms)[0m  INSERT INTO "schema_migrations" (version) VALUES ('20130811195620')
  [1m[36m (8.0ms)[0m  [1mINSERT INTO "schema_migrations" (version) VALUES ('20130811193133')[0m
  [1m[35m (7.9ms)[0m  INSERT INTO "schema_migrations" (version) VALUES ('20130811195557')
  [1m[36mActiveRecord::SchemaMigration Load (0.4ms)[0m  [1mSELECT "schema_migrations".* FROM "schema_migrations"[0m
  [1m[35mActiveRecord::SchemaMigration Load (0.4ms)[0m  SELECT "schema_migrations".* FROM "schema_migrations"
  [1m[36m (0.6ms)[0m  [1mALTER TABLE "users" DISABLE TRIGGER ALL;ALTER TABLE "schema_migrations" DISABLE TRIGGER ALL[0m
  [1m[35m (0.2ms)[0m  BEGIN
  [1m[36mFixture Delete (0.6ms)[0m  [1mDELETE FROM "users"[0m
  [1m[35mFixture Insert (0.6ms)[0m  INSERT INTO "users" ("id", "first_name", "last_name_string", "nick_name", "login_name", "start_date", "end_date", "notes", "created_at", "updated_at") VALUES (1, 'Michael', 'Orsted', 'Mike', 'orstedma', '2012-02-04', NULL, 'This user lives in Chicago.', '2013-08-11 21:18:55', '2013-08-11 21:18:55')
  [1m[36mFixture Insert (0.4ms)[0m  [1mINSERT INTO "users" ("id", "first_name", "last_name_string", "nick_name", "login_name", "start_date", "end_date", "notes", "created_at", "updated_at") VALUES (2, 'Frederick', 'Free-Loader', 'Frederick', 'freelofw', '2012-03-04', NULL, 'This user is completely useless', '2013-08-11 21:18:55', '2013-08-11 21:18:55')[0m
  [1m[35m (7.7ms)[0m  COMMIT
  [1m[36m (0.4ms)[0m  [1mALTER TABLE "users" ENABLE TRIGGER ALL;ALTER TABLE "schema_migrations" ENABLE TRIGGER ALL[0m
  [1m[35m (0.2ms)[0m  BEGIN
----------------------------------------------------------
UserTest: test: User should require first_name to be set. 
----------------------------------------------------------
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.2ms)[0m  BEGIN
---------------------------------------------------------
UserTest: test: User should require last_name to be set. 
---------------------------------------------------------
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.2ms)[0m  BEGIN
----------------------------------------------------------
UserTest: test: User should require login_name to be set. 
----------------------------------------------------------
  [1m[36m (0.2ms)[0m  [1mROLLBACK[0m
  [1m[36m (227.2ms)[0m  [1mDROP DATABASE IF EXISTS "ritrack_test"[0m
  [1m[35m (757.7ms)[0m  CREATE DATABASE "ritrack_test" ENCODING = 'unicode'
  [1m[36mSQL (1.6ms)[0m  [1mCREATE EXTENSION IF NOT EXISTS "plpgsql"[0m
  [1m[35m (117.9ms)[0m  CREATE TABLE "users" ("id" serial primary key, "first_name" character varying(255), "last_name_string" character varying(255), "nick_name" character varying(255), "login_name" character varying(255), "notes" text, "created_at" timestamp, "updated_at" timestamp, "start_date" date, "end_date" date) 
  [1m[36m (4.3ms)[0m  [1mCREATE TABLE "schema_migrations" ("version" character varying(255) NOT NULL) [0m
  [1m[35m (62.9ms)[0m  CREATE UNIQUE INDEX "unique_schema_migrations" ON "schema_migrations" ("version")
  [1m[36m (0.8ms)[0m  [1mSELECT version FROM "schema_migrations"[0m
  [1m[35m (6.3ms)[0m  INSERT INTO "schema_migrations" (version) VALUES ('20130811195620')
  [1m[36m (7.9ms)[0m  [1mINSERT INTO "schema_migrations" (version) VALUES ('20130811193133')[0m
  [1m[35m (7.9ms)[0m  INSERT INTO "schema_migrations" (version) VALUES ('20130811195557')
  [1m[36mActiveRecord::SchemaMigration Load (0.6ms)[0m  [1mSELECT "schema_migrations".* FROM "schema_migrations"[0m
  [1m[35mActiveRecord::SchemaMigration Load (0.4ms)[0m  SELECT "schema_migrations".* FROM "schema_migrations"
  [1m[36m (0.5ms)[0m  [1mALTER TABLE "users" DISABLE TRIGGER ALL;ALTER TABLE "schema_migrations" DISABLE TRIGGER ALL[0m
  [1m[35m (0.2ms)[0m  BEGIN
  [1m[36mFixture Delete (0.5ms)[0m  [1mDELETE FROM "users"[0m
  [1m[35mFixture Insert (0.7ms)[0m  INSERT INTO "users" ("id", "first_name", "last_name_string", "nick_name", "login_name", "start_date", "end_date", "notes", "created_at", "updated_at") VALUES (1, 'Michael', 'Orsted', 'Mike', 'orstedma', '2012-02-04', NULL, 'This user lives in Chicago.', '2013-08-11 21:20:01', '2013-08-11 21:20:01')
  [1m[36mFixture Insert (0.4ms)[0m  [1mINSERT INTO "users" ("id", "first_name", "last_name_string", "nick_name", "login_name", "start_date", "end_date", "notes", "created_at", "updated_at") VALUES (2, 'Frederick', 'Free-Loader', 'Frederick', 'freelofw', '2012-03-04', NULL, 'This user is completely useless', '2013-08-11 21:20:01', '2013-08-11 21:20:01')[0m
  [1m[35m (9.2ms)[0m  COMMIT
  [1m[36m (0.4ms)[0m  [1mALTER TABLE "users" ENABLE TRIGGER ALL;ALTER TABLE "schema_migrations" ENABLE TRIGGER ALL[0m
  [1m[35m (0.2ms)[0m  BEGIN
----------------------------------------------------------
UserTest: test: User should require first_name to be set. 
----------------------------------------------------------
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[36m (225.5ms)[0m  [1mDROP DATABASE IF EXISTS "ritrack_test"[0m
  [1m[35m (791.0ms)[0m  CREATE DATABASE "ritrack_test" ENCODING = 'unicode'
  [1m[36mSQL (1.6ms)[0m  [1mCREATE EXTENSION IF NOT EXISTS "plpgsql"[0m
  [1m[35m (101.4ms)[0m  CREATE TABLE "users" ("id" serial primary key, "first_name" character varying(255), "last_name_string" character varying(255), "nick_name" character varying(255), "login_name" character varying(255), "notes" text, "created_at" timestamp, "updated_at" timestamp, "start_date" date, "end_date" date) 
  [1m[36m (4.9ms)[0m  [1mCREATE TABLE "schema_migrations" ("version" character varying(255) NOT NULL) [0m
  [1m[35m (62.7ms)[0m  CREATE UNIQUE INDEX "unique_schema_migrations" ON "schema_migrations" ("version")
  [1m[36m (0.7ms)[0m  [1mSELECT version FROM "schema_migrations"[0m
  [1m[35m (7.1ms)[0m  INSERT INTO "schema_migrations" (version) VALUES ('20130811195620')
  [1m[36m (7.9ms)[0m  [1mINSERT INTO "schema_migrations" (version) VALUES ('20130811193133')[0m
  [1m[35m (7.9ms)[0m  INSERT INTO "schema_migrations" (version) VALUES ('20130811195557')
  [1m[36mActiveRecord::SchemaMigration Load (0.4ms)[0m  [1mSELECT "schema_migrations".* FROM "schema_migrations"[0m
  [1m[35mActiveRecord::SchemaMigration Load (0.3ms)[0m  SELECT "schema_migrations".* FROM "schema_migrations"
  [1m[36m (0.5ms)[0m  [1mALTER TABLE "users" DISABLE TRIGGER ALL;ALTER TABLE "schema_migrations" DISABLE TRIGGER ALL[0m
  [1m[35m (0.2ms)[0m  BEGIN
  [1m[36mFixture Delete (0.5ms)[0m  [1mDELETE FROM "users"[0m
  [1m[35mFixture Insert (0.6ms)[0m  INSERT INTO "users" ("id", "first_name", "last_name_string", "nick_name", "login_name", "start_date", "end_date", "notes", "created_at", "updated_at") VALUES (1, 'Michael', 'Orsted', 'Mike', 'orstedma', '2012-02-04', NULL, 'This user lives in Chicago.', '2013-08-11 21:21:02', '2013-08-11 21:21:02')
  [1m[36mFixture Insert (0.4ms)[0m  [1mINSERT INTO "users" ("id", "first_name", "last_name_string", "nick_name", "login_name", "start_date", "end_date", "notes", "created_at", "updated_at") VALUES (2, 'Frederick', 'Free-Loader', 'Frederick', 'freelofw', '2012-03-04', NULL, 'This user is completely useless', '2013-08-11 21:21:02', '2013-08-11 21:21:02')[0m
  [1m[35m (6.8ms)[0m  COMMIT
  [1m[36m (0.3ms)[0m  [1mALTER TABLE "users" ENABLE TRIGGER ALL;ALTER TABLE "schema_migrations" ENABLE TRIGGER ALL[0m
  [1m[35m (0.2ms)[0m  BEGIN
----------------------------------------------------------
UserTest: test: User should require first_name to be set. 
----------------------------------------------------------
  [1m[36m (0.2ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.2ms)[0m  BEGIN
---------------------------------------------------------
UserTest: test: User should require last_name to be set. 
---------------------------------------------------------
  [1m[36m (0.2ms)[0m  [1mROLLBACK[0m
  [1m[36m (333.1ms)[0m  [1mDROP DATABASE IF EXISTS "ritrack_test"[0m
  [1m[35m (782.7ms)[0m  CREATE DATABASE "ritrack_test" ENCODING = 'unicode'
  [1m[36mSQL (1.6ms)[0m  [1mCREATE EXTENSION IF NOT EXISTS "plpgsql"[0m
  [1m[35m (103.9ms)[0m  CREATE TABLE "users" ("id" serial primary key, "first_name" character varying(255), "last_name" character varying(255), "nick_name" character varying(255), "login_name" character varying(255), "notes" text, "created_at" timestamp, "updated_at" timestamp, "start_date" date, "end_date" date) 
  [1m[36m (4.4ms)[0m  [1mCREATE TABLE "schema_migrations" ("version" character varying(255) NOT NULL) [0m
  [1m[35m (62.1ms)[0m  CREATE UNIQUE INDEX "unique_schema_migrations" ON "schema_migrations" ("version")
  [1m[36m (0.8ms)[0m  [1mSELECT version FROM "schema_migrations"[0m
  [1m[35m (6.3ms)[0m  INSERT INTO "schema_migrations" (version) VALUES ('20130811212425')
  [1m[36m (7.9ms)[0m  [1mINSERT INTO "schema_migrations" (version) VALUES ('20130811195620')[0m
  [1m[35m (8.0ms)[0m  INSERT INTO "schema_migrations" (version) VALUES ('20130811193133')
  [1m[36m (8.0ms)[0m  [1mINSERT INTO "schema_migrations" (version) VALUES ('20130811195557')[0m
  [1m[35mActiveRecord::SchemaMigration Load (0.6ms)[0m  SELECT "schema_migrations".* FROM "schema_migrations"
  [1m[36mActiveRecord::SchemaMigration Load (0.4ms)[0m  [1mSELECT "schema_migrations".* FROM "schema_migrations"[0m
  [1m[35m (0.5ms)[0m  ALTER TABLE "users" DISABLE TRIGGER ALL;ALTER TABLE "schema_migrations" DISABLE TRIGGER ALL
  [1m[36m (0.1ms)[0m  [1mBEGIN[0m
  [1m[35mFixture Delete (0.5ms)[0m  DELETE FROM "users"
  [1m[36mFixture Insert (0.4ms)[0m  [1mINSERT INTO "users" ("id", "first_name", "last_name_string", "nick_name", "login_name", "start_date", "end_date", "notes", "created_at", "updated_at") VALUES (1, 'Michael', 'Orsted', 'Mike', 'orstedma', '2012-02-04', NULL, 'This user lives in Chicago.', '2013-08-11 21:25:38', '2013-08-11 21:25:38')[0m
PG::UndefinedColumn: ERROR:  column "last_name_string" of relation "users" does not exist
LINE 1: INSERT INTO "users" ("id", "first_name", "last_name_string",...
                                                 ^
: INSERT INTO "users" ("id", "first_name", "last_name_string", "nick_name", "login_name", "start_date", "end_date", "notes", "created_at", "updated_at") VALUES (1, 'Michael', 'Orsted', 'Mike', 'orstedma', '2012-02-04', NULL, 'This user lives in Chicago.', '2013-08-11 21:25:38', '2013-08-11 21:25:38')
  [1m[35m (0.1ms)[0m  ROLLBACK
  [1m[36m (0.2ms)[0m  [1mALTER TABLE "users" ENABLE TRIGGER ALL;ALTER TABLE "schema_migrations" ENABLE TRIGGER ALL[0m
  [1m[35m (0.2ms)[0m  ALTER TABLE "users" DISABLE TRIGGER ALL;ALTER TABLE "schema_migrations" DISABLE TRIGGER ALL
  [1m[36m (0.1ms)[0m  [1mBEGIN[0m
  [1m[35mFixture Delete (0.3ms)[0m  DELETE FROM "users"
  [1m[36mFixture Insert (0.4ms)[0m  [1mINSERT INTO "users" ("id", "first_name", "last_name_string", "nick_name", "login_name", "start_date", "end_date", "notes", "created_at", "updated_at") VALUES (1, 'Michael', 'Orsted', 'Mike', 'orstedma', '2012-02-04', NULL, 'This user lives in Chicago.', '2013-08-11 21:25:38', '2013-08-11 21:25:38')[0m
PG::UndefinedColumn: ERROR:  column "last_name_string" of relation "users" does not exist
LINE 1: INSERT INTO "users" ("id", "first_name", "last_name_string",...
                                                 ^
: INSERT INTO "users" ("id", "first_name", "last_name_string", "nick_name", "login_name", "start_date", "end_date", "notes", "created_at", "updated_at") VALUES (1, 'Michael', 'Orsted', 'Mike', 'orstedma', '2012-02-04', NULL, 'This user lives in Chicago.', '2013-08-11 21:25:38', '2013-08-11 21:25:38')
  [1m[35m (0.1ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mALTER TABLE "users" ENABLE TRIGGER ALL;ALTER TABLE "schema_migrations" ENABLE TRIGGER ALL[0m
  [1m[36m (327.5ms)[0m  [1mDROP DATABASE IF EXISTS "ritrack_test"[0m
  [1m[35m (782.6ms)[0m  CREATE DATABASE "ritrack_test" ENCODING = 'unicode'
  [1m[36mSQL (1.6ms)[0m  [1mCREATE EXTENSION IF NOT EXISTS "plpgsql"[0m
  [1m[35m (109.0ms)[0m  CREATE TABLE "users" ("id" serial primary key, "first_name" character varying(255), "last_name" character varying(255), "nick_name" character varying(255), "login_name" character varying(255), "notes" text, "created_at" timestamp, "updated_at" timestamp, "start_date" date, "end_date" date) 
  [1m[36m (4.6ms)[0m  [1mCREATE TABLE "schema_migrations" ("version" character varying(255) NOT NULL) [0m
  [1m[35m (53.6ms)[0m  CREATE UNIQUE INDEX "unique_schema_migrations" ON "schema_migrations" ("version")
  [1m[36m (0.8ms)[0m  [1mSELECT version FROM "schema_migrations"[0m
  [1m[35m (6.1ms)[0m  INSERT INTO "schema_migrations" (version) VALUES ('20130811212425')
  [1m[36m (8.3ms)[0m  [1mINSERT INTO "schema_migrations" (version) VALUES ('20130811195620')[0m
  [1m[35m (7.8ms)[0m  INSERT INTO "schema_migrations" (version) VALUES ('20130811193133')
  [1m[36m (8.2ms)[0m  [1mINSERT INTO "schema_migrations" (version) VALUES ('20130811195557')[0m
  [1m[35mActiveRecord::SchemaMigration Load (0.5ms)[0m  SELECT "schema_migrations".* FROM "schema_migrations"
  [1m[36mActiveRecord::SchemaMigration Load (0.4ms)[0m  [1mSELECT "schema_migrations".* FROM "schema_migrations"[0m
  [1m[35m (0.6ms)[0m  ALTER TABLE "users" DISABLE TRIGGER ALL;ALTER TABLE "schema_migrations" DISABLE TRIGGER ALL
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
  [1m[35mFixture Delete (0.5ms)[0m  DELETE FROM "users"
  [1m[36mFixture Insert (0.7ms)[0m  [1mINSERT INTO "users" ("id", "first_name", "last_name", "nick_name", "login_name", "start_date", "end_date", "notes", "created_at", "updated_at") VALUES (1, 'Michael', 'Orsted', 'Mike', 'orstedma', '2012-02-04', NULL, 'This user lives in Chicago.', '2013-08-11 21:27:14', '2013-08-11 21:27:14')[0m
  [1m[35mFixture Insert (0.4ms)[0m  INSERT INTO "users" ("id", "first_name", "last_name", "nick_name", "login_name", "start_date", "end_date", "notes", "created_at", "updated_at") VALUES (2, 'Frederick', 'Free-Loader', 'Frederick', 'freelofw', '2012-03-04', NULL, 'This user is completely useless', '2013-08-11 21:27:14', '2013-08-11 21:27:14')
  [1m[36m (3.4ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.3ms)[0m  ALTER TABLE "users" ENABLE TRIGGER ALL;ALTER TABLE "schema_migrations" ENABLE TRIGGER ALL
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
----------------------------------------------------------
UserTest: test: User should require first_name to be set. 
----------------------------------------------------------
  [1m[35m (0.3ms)[0m  ROLLBACK
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
---------------------------------------------------------
UserTest: test: User should require last_name to be set. 
---------------------------------------------------------
  [1m[35m (0.2ms)[0m  ROLLBACK
  [1m[36m (225.5ms)[0m  [1mDROP DATABASE IF EXISTS "ritrack_test"[0m
  [1m[35m (757.6ms)[0m  CREATE DATABASE "ritrack_test" ENCODING = 'unicode'
  [1m[36mSQL (1.6ms)[0m  [1mCREATE EXTENSION IF NOT EXISTS "plpgsql"[0m
  [1m[35m (109.0ms)[0m  CREATE TABLE "users" ("id" serial primary key, "first_name" character varying(255), "last_name" character varying(255), "nick_name" character varying(255), "login_name" character varying(255), "notes" text, "created_at" timestamp, "updated_at" timestamp, "start_date" date, "end_date" date) 
  [1m[36m (4.3ms)[0m  [1mCREATE TABLE "schema_migrations" ("version" character varying(255) NOT NULL) [0m
  [1m[35m (53.7ms)[0m  CREATE UNIQUE INDEX "unique_schema_migrations" ON "schema_migrations" ("version")
  [1m[36m (0.8ms)[0m  [1mSELECT version FROM "schema_migrations"[0m
  [1m[35m (6.3ms)[0m  INSERT INTO "schema_migrations" (version) VALUES ('20130811212425')
  [1m[36m (8.0ms)[0m  [1mINSERT INTO "schema_migrations" (version) VALUES ('20130811195620')[0m
  [1m[35m (8.0ms)[0m  INSERT INTO "schema_migrations" (version) VALUES ('20130811193133')
  [1m[36m (8.0ms)[0m  [1mINSERT INTO "schema_migrations" (version) VALUES ('20130811195557')[0m
  [1m[35mActiveRecord::SchemaMigration Load (0.6ms)[0m  SELECT "schema_migrations".* FROM "schema_migrations"
  [1m[36mActiveRecord::SchemaMigration Load (0.4ms)[0m  [1mSELECT "schema_migrations".* FROM "schema_migrations"[0m
  [1m[35m (0.5ms)[0m  ALTER TABLE "users" DISABLE TRIGGER ALL;ALTER TABLE "schema_migrations" DISABLE TRIGGER ALL
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
  [1m[35mFixture Delete (0.4ms)[0m  DELETE FROM "users"
  [1m[36mFixture Insert (0.7ms)[0m  [1mINSERT INTO "users" ("id", "first_name", "last_name", "nick_name", "login_name", "start_date", "end_date", "notes", "created_at", "updated_at") VALUES (1, 'Michael', 'Orsted', 'Mike', 'orstedma', '2012-02-04', NULL, 'This user lives in Chicago.', '2013-08-11 21:42:48', '2013-08-11 21:42:48')[0m
  [1m[35mFixture Insert (0.4ms)[0m  INSERT INTO "users" ("id", "first_name", "last_name", "nick_name", "login_name", "start_date", "end_date", "notes", "created_at", "updated_at") VALUES (2, 'Frederick', 'Free-Loader', 'Frederick', 'freelofw', '2012-03-04', NULL, 'This user is completely useless', '2013-08-11 21:42:48', '2013-08-11 21:42:48')
  [1m[36m (3.1ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.3ms)[0m  ALTER TABLE "users" ENABLE TRIGGER ALL;ALTER TABLE "schema_migrations" ENABLE TRIGGER ALL
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
----------------------------------------------------------
UserTest: test: User should require first_name to be set. 
----------------------------------------------------------
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35m (0.2ms)[0m  ROLLBACK
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
---------------------------------------------------------
UserTest: test: User should require last_name to be set. 
---------------------------------------------------------
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35m (0.2ms)[0m  ROLLBACK
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
----------------------------------------------------------
UserTest: test: User should require login_name to be set. 
----------------------------------------------------------
  [1m[35mUser Exists (0.5ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35m (0.2ms)[0m  ROLLBACK
  [1m[36m (329.1ms)[0m  [1mDROP DATABASE IF EXISTS "ritrack_test"[0m
  [1m[35m (607.7ms)[0m  CREATE DATABASE "ritrack_test" ENCODING = 'unicode'
  [1m[36mSQL (1.6ms)[0m  [1mCREATE EXTENSION IF NOT EXISTS "plpgsql"[0m
  [1m[35m (109.5ms)[0m  CREATE TABLE "users" ("id" serial primary key, "first_name" character varying(255), "last_name" character varying(255), "nick_name" character varying(255), "login_name" character varying(255), "notes" text, "created_at" timestamp, "updated_at" timestamp, "start_date" date, "end_date" date) 
  [1m[36m (5.6ms)[0m  [1mCREATE TABLE "schema_migrations" ("version" character varying(255) NOT NULL) [0m
  [1m[35m (53.5ms)[0m  CREATE UNIQUE INDEX "unique_schema_migrations" ON "schema_migrations" ("version")
  [1m[36m (0.8ms)[0m  [1mSELECT version FROM "schema_migrations"[0m
  [1m[35m (6.5ms)[0m  INSERT INTO "schema_migrations" (version) VALUES ('20130811212425')
  [1m[36m (7.9ms)[0m  [1mINSERT INTO "schema_migrations" (version) VALUES ('20130811195620')[0m
  [1m[35m (8.1ms)[0m  INSERT INTO "schema_migrations" (version) VALUES ('20130811193133')
  [1m[36m (7.9ms)[0m  [1mINSERT INTO "schema_migrations" (version) VALUES ('20130811195557')[0m
  [1m[35mActiveRecord::SchemaMigration Load (0.5ms)[0m  SELECT "schema_migrations".* FROM "schema_migrations"
  [1m[36mActiveRecord::SchemaMigration Load (0.3ms)[0m  [1mSELECT "schema_migrations".* FROM "schema_migrations"[0m
  [1m[35m (0.5ms)[0m  ALTER TABLE "users" DISABLE TRIGGER ALL;ALTER TABLE "schema_migrations" DISABLE TRIGGER ALL
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
  [1m[35mFixture Delete (0.6ms)[0m  DELETE FROM "users"
  [1m[36mFixture Insert (0.7ms)[0m  [1mINSERT INTO "users" ("id", "first_name", "last_name", "nick_name", "login_name", "start_date", "end_date", "notes", "created_at", "updated_at") VALUES (1, 'Michael', 'Orsted', 'Mike', 'orstedma', '2012-02-04', NULL, 'This user lives in Chicago.', '2013-08-11 21:43:27', '2013-08-11 21:43:27')[0m
  [1m[35mFixture Insert (0.3ms)[0m  INSERT INTO "users" ("id", "first_name", "last_name", "nick_name", "login_name", "start_date", "end_date", "notes", "created_at", "updated_at") VALUES (2, 'Frederick', 'Free-Loader', 'Frederick', 'freelofw', '2012-03-04', NULL, 'This user is completely useless', '2013-08-11 21:43:27', '2013-08-11 21:43:27')
  [1m[36m (10.4ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.3ms)[0m  ALTER TABLE "users" ENABLE TRIGGER ALL;ALTER TABLE "schema_migrations" ENABLE TRIGGER ALL
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
--------------------------------------------------------------------------------
UserTest: test: User should require case sensitive unique value for login_name. 
--------------------------------------------------------------------------------
  [1m[35mUser Load (0.9ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (1.0ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'orstedma' LIMIT 1[0m
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'orstedma' LIMIT 1
  [1m[36m (0.2ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.1ms)[0m  BEGIN
----------------------------------------------------------
UserTest: test: User should require first_name to be set. 
----------------------------------------------------------
  [1m[36mUser Exists (0.3ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.3ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.2ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.1ms)[0m  BEGIN
---------------------------------------------------------
UserTest: test: User should require last_name to be set. 
---------------------------------------------------------
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.3ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.2ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.1ms)[0m  BEGIN
----------------------------------------------------------
UserTest: test: User should require login_name to be set. 
----------------------------------------------------------
  [1m[36mUser Exists (0.5ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.2ms)[0m  [1mROLLBACK[0m
  [1m[36m (229.4ms)[0m  [1mDROP DATABASE IF EXISTS "ritrack_test"[0m
  [1m[35m (766.0ms)[0m  CREATE DATABASE "ritrack_test" ENCODING = 'unicode'
  [1m[36mSQL (1.6ms)[0m  [1mCREATE EXTENSION IF NOT EXISTS "plpgsql"[0m
  [1m[35m (109.5ms)[0m  CREATE TABLE "users" ("id" serial primary key, "first_name" character varying(255), "last_name" character varying(255), "nick_name" character varying(255), "login_name" character varying(255), "notes" text, "created_at" timestamp, "updated_at" timestamp, "start_date" date, "end_date" date) 
  [1m[36m (5.0ms)[0m  [1mCREATE TABLE "schema_migrations" ("version" character varying(255) NOT NULL) [0m
  [1m[35m (53.9ms)[0m  CREATE UNIQUE INDEX "unique_schema_migrations" ON "schema_migrations" ("version")
  [1m[36m (0.8ms)[0m  [1mSELECT version FROM "schema_migrations"[0m
  [1m[35m (6.3ms)[0m  INSERT INTO "schema_migrations" (version) VALUES ('20130811212425')
  [1m[36m (7.9ms)[0m  [1mINSERT INTO "schema_migrations" (version) VALUES ('20130811195620')[0m
  [1m[35m (8.0ms)[0m  INSERT INTO "schema_migrations" (version) VALUES ('20130811193133')
  [1m[36m (8.0ms)[0m  [1mINSERT INTO "schema_migrations" (version) VALUES ('20130811195557')[0m
  [1m[35mActiveRecord::SchemaMigration Load (0.5ms)[0m  SELECT "schema_migrations".* FROM "schema_migrations"
  [1m[36mActiveRecord::SchemaMigration Load (0.4ms)[0m  [1mSELECT "schema_migrations".* FROM "schema_migrations"[0m
  [1m[35m (0.6ms)[0m  ALTER TABLE "users" DISABLE TRIGGER ALL;ALTER TABLE "schema_migrations" DISABLE TRIGGER ALL
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
  [1m[35mFixture Delete (0.4ms)[0m  DELETE FROM "users"
  [1m[36mFixture Insert (0.7ms)[0m  [1mINSERT INTO "users" ("id", "first_name", "last_name", "nick_name", "login_name", "start_date", "end_date", "notes", "created_at", "updated_at") VALUES (1, 'Michael', 'Orsted', 'Mike', 'orstedma', '2012-02-04', NULL, 'This user lives in Chicago.', '2013-08-11 21:50:45', '2013-08-11 21:50:45')[0m
  [1m[35mFixture Insert (0.3ms)[0m  INSERT INTO "users" ("id", "first_name", "last_name", "nick_name", "login_name", "start_date", "end_date", "notes", "created_at", "updated_at") VALUES (2, 'Frederick', 'Free-Loader', 'Frederick', 'freelofw', '2012-03-04', NULL, 'This user is completely useless', '2013-08-11 21:50:45', '2013-08-11 21:50:45')
  [1m[36m (8.3ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.3ms)[0m  ALTER TABLE "users" ENABLE TRIGGER ALL;ALTER TABLE "schema_migrations" ENABLE TRIGGER ALL
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
--------------------------------------------------------------------------------
UserTest: test: User should require case sensitive unique value for login_name. 
--------------------------------------------------------------------------------
  [1m[35mUser Load (1.0ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (1.1ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'orstedma' LIMIT 1[0m
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'orstedma' LIMIT 1
  [1m[36m (0.2ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.1ms)[0m  BEGIN
----------------------------------------------------------
UserTest: test: User should require first_name to be set. 
----------------------------------------------------------
  [1m[36mUser Exists (0.3ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.3ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.1ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.1ms)[0m  BEGIN
---------------------------------------------------------
UserTest: test: User should require last_name to be set. 
---------------------------------------------------------
  [1m[36mUser Exists (0.5ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.5ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.2ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.2ms)[0m  BEGIN
----------------------------------------------------------
UserTest: test: User should require login_name to be set. 
----------------------------------------------------------
  [1m[36mUser Exists (0.5ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.5ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[36m (325.8ms)[0m  [1mDROP DATABASE IF EXISTS "ritrack_test"[0m
  [1m[35m (583.0ms)[0m  CREATE DATABASE "ritrack_test" ENCODING = 'unicode'
  [1m[36mSQL (1.6ms)[0m  [1mCREATE EXTENSION IF NOT EXISTS "plpgsql"[0m
  [1m[35m (100.9ms)[0m  CREATE TABLE "users" ("id" serial primary key, "first_name" character varying(255), "last_name" character varying(255), "nick_name" character varying(255), "login_name" character varying(255), "notes" text, "created_at" timestamp, "updated_at" timestamp, "start_date" date, "end_date" date) 
  [1m[36m (4.4ms)[0m  [1mCREATE TABLE "schema_migrations" ("version" character varying(255) NOT NULL) [0m
  [1m[35m (62.0ms)[0m  CREATE UNIQUE INDEX "unique_schema_migrations" ON "schema_migrations" ("version")
  [1m[36m (0.9ms)[0m  [1mSELECT version FROM "schema_migrations"[0m
  [1m[35m (6.3ms)[0m  INSERT INTO "schema_migrations" (version) VALUES ('20130811212425')
  [1m[36m (7.9ms)[0m  [1mINSERT INTO "schema_migrations" (version) VALUES ('20130811195620')[0m
  [1m[35m (8.0ms)[0m  INSERT INTO "schema_migrations" (version) VALUES ('20130811193133')
  [1m[36m (8.0ms)[0m  [1mINSERT INTO "schema_migrations" (version) VALUES ('20130811195557')[0m
  [1m[35mActiveRecord::SchemaMigration Load (0.5ms)[0m  SELECT "schema_migrations".* FROM "schema_migrations"
  [1m[36mActiveRecord::SchemaMigration Load (0.2ms)[0m  [1mSELECT "schema_migrations".* FROM "schema_migrations"[0m
  [1m[35m (0.5ms)[0m  ALTER TABLE "users" DISABLE TRIGGER ALL;ALTER TABLE "schema_migrations" DISABLE TRIGGER ALL
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
  [1m[35mFixture Delete (0.5ms)[0m  DELETE FROM "users"
  [1m[36mFixture Insert (0.6ms)[0m  [1mINSERT INTO "users" ("id", "first_name", "last_name", "nick_name", "login_name", "start_date", "end_date", "notes", "created_at", "updated_at") VALUES (1, 'Michael', 'Orsted', 'Mike', 'orstedma', '2012-02-04', NULL, 'This user lives in Chicago.', '2013-08-11 21:52:48', '2013-08-11 21:52:48')[0m
  [1m[35mFixture Insert (0.4ms)[0m  INSERT INTO "users" ("id", "first_name", "last_name", "nick_name", "login_name", "start_date", "end_date", "notes", "created_at", "updated_at") VALUES (2, 'Frederick', 'Free-Loader', 'Frederick', 'freelofw', '2012-03-04', NULL, 'This user is completely useless', '2013-08-11 21:52:48', '2013-08-11 21:52:48')
  [1m[36m (2.4ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.3ms)[0m  ALTER TABLE "users" ENABLE TRIGGER ALL;ALTER TABLE "schema_migrations" ENABLE TRIGGER ALL
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
---------------------------------------------------------------------
UserTest: test: User should allow first_name to be set to "Charles". 
---------------------------------------------------------------------
  [1m[35mUser Exists (0.6ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35m (0.3ms)[0m  ROLLBACK
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
--------------------------------------------------------------------------------
UserTest: test: User should require case sensitive unique value for login_name. 
--------------------------------------------------------------------------------
  [1m[35mUser Load (0.7ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (0.9ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'orstedma' LIMIT 1[0m
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'orstedma' LIMIT 1
  [1m[36m (0.2ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.2ms)[0m  BEGIN
----------------------------------------------------------
UserTest: test: User should require first_name to be set. 
----------------------------------------------------------
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.2ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.2ms)[0m  BEGIN
---------------------------------------------------------
UserTest: test: User should require last_name to be set. 
---------------------------------------------------------
  [1m[36mUser Exists (0.5ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.2ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.2ms)[0m  BEGIN
----------------------------------------------------------
UserTest: test: User should require login_name to be set. 
----------------------------------------------------------
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.2ms)[0m  [1mROLLBACK[0m
  [1m[36m (226.5ms)[0m  [1mDROP DATABASE IF EXISTS "ritrack_test"[0m
  [1m[35m (782.7ms)[0m  CREATE DATABASE "ritrack_test" ENCODING = 'unicode'
  [1m[36mSQL (1.6ms)[0m  [1mCREATE EXTENSION IF NOT EXISTS "plpgsql"[0m
  [1m[35m (117.4ms)[0m  CREATE TABLE "users" ("id" serial primary key, "first_name" character varying(255), "last_name" character varying(255), "nick_name" character varying(255), "login_name" character varying(255), "notes" text, "created_at" timestamp, "updated_at" timestamp, "start_date" date, "end_date" date) 
  [1m[36m (4.8ms)[0m  [1mCREATE TABLE "schema_migrations" ("version" character varying(255) NOT NULL) [0m
  [1m[35m (62.1ms)[0m  CREATE UNIQUE INDEX "unique_schema_migrations" ON "schema_migrations" ("version")
  [1m[36m (0.8ms)[0m  [1mSELECT version FROM "schema_migrations"[0m
  [1m[35m (6.3ms)[0m  INSERT INTO "schema_migrations" (version) VALUES ('20130811212425')
  [1m[36m (8.0ms)[0m  [1mINSERT INTO "schema_migrations" (version) VALUES ('20130811195620')[0m
  [1m[35m (8.0ms)[0m  INSERT INTO "schema_migrations" (version) VALUES ('20130811193133')
  [1m[36m (8.0ms)[0m  [1mINSERT INTO "schema_migrations" (version) VALUES ('20130811195557')[0m
  [1m[35mActiveRecord::SchemaMigration Load (0.6ms)[0m  SELECT "schema_migrations".* FROM "schema_migrations"
  [1m[36mActiveRecord::SchemaMigration Load (0.3ms)[0m  [1mSELECT "schema_migrations".* FROM "schema_migrations"[0m
  [1m[35m (0.5ms)[0m  ALTER TABLE "users" DISABLE TRIGGER ALL;ALTER TABLE "schema_migrations" DISABLE TRIGGER ALL
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
  [1m[35mFixture Delete (0.5ms)[0m  DELETE FROM "users"
  [1m[36mFixture Insert (0.6ms)[0m  [1mINSERT INTO "users" ("id", "first_name", "last_name", "nick_name", "login_name", "start_date", "end_date", "notes", "created_at", "updated_at") VALUES (1, 'Michael', 'Orsted', 'Mike', 'orstedma', '2012-02-04', NULL, 'This user lives in Chicago.', '2013-08-11 22:35:50', '2013-08-11 22:35:50')[0m
  [1m[35mFixture Insert (0.3ms)[0m  INSERT INTO "users" ("id", "first_name", "last_name", "nick_name", "login_name", "start_date", "end_date", "notes", "created_at", "updated_at") VALUES (2, 'Frederick', 'Free-Loader', 'Frederick', 'freelofw', '2012-03-04', NULL, 'This user is completely useless', '2013-08-11 22:35:50', '2013-08-11 22:35:50')
  [1m[36m (8.8ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.2ms)[0m  ALTER TABLE "users" ENABLE TRIGGER ALL;ALTER TABLE "schema_migrations" ENABLE TRIGGER ALL
  [1m[36m (0.1ms)[0m  [1mBEGIN[0m
---------------------------------------------------------------------
UserTest: test: User should allow first_name to be set to "Charles". 
---------------------------------------------------------------------
  [1m[35mUser Exists (0.6ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.2ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35m (0.1ms)[0m  ROLLBACK
  [1m[36m (0.1ms)[0m  [1mBEGIN[0m
-------------------------------------------------------------------------
UserTest: test: User should not allow first_name to be set to "charles". 
-------------------------------------------------------------------------
  [1m[35mUser Exists (0.3ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.3ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35m (0.1ms)[0m  ROLLBACK
  [1m[36m (0.1ms)[0m  [1mBEGIN[0m
--------------------------------------------------------------------------------
UserTest: test: User should require case sensitive unique value for login_name. 
--------------------------------------------------------------------------------
  [1m[35mUser Load (0.7ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (0.9ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'orstedma' LIMIT 1[0m
  [1m[35mUser Exists (0.3ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'orstedma' LIMIT 1
  [1m[36m (0.1ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.1ms)[0m  BEGIN
----------------------------------------------------------
UserTest: test: User should require first_name to be set. 
----------------------------------------------------------
  [1m[36mUser Exists (0.3ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.5ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.1ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.1ms)[0m  BEGIN
---------------------------------------------------------
UserTest: test: User should require last_name to be set. 
---------------------------------------------------------
  [1m[36mUser Exists (0.3ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.3ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.1ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.1ms)[0m  BEGIN
----------------------------------------------------------
UserTest: test: User should require login_name to be set. 
----------------------------------------------------------
  [1m[36mUser Exists (0.3ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.3ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.1ms)[0m  [1mROLLBACK[0m
  [1m[36m (330.7ms)[0m  [1mDROP DATABASE IF EXISTS "ritrack_test"[0m
  [1m[35m (799.4ms)[0m  CREATE DATABASE "ritrack_test" ENCODING = 'unicode'
  [1m[36mSQL (1.6ms)[0m  [1mCREATE EXTENSION IF NOT EXISTS "plpgsql"[0m
  [1m[35m (101.1ms)[0m  CREATE TABLE "users" ("id" serial primary key, "first_name" character varying(255), "last_name" character varying(255), "nick_name" character varying(255), "login_name" character varying(255), "notes" text, "created_at" timestamp, "updated_at" timestamp, "start_date" date, "end_date" date) 
  [1m[36m (4.4ms)[0m  [1mCREATE TABLE "schema_migrations" ("version" character varying(255) NOT NULL) [0m
  [1m[35m (62.0ms)[0m  CREATE UNIQUE INDEX "unique_schema_migrations" ON "schema_migrations" ("version")
  [1m[36m (0.8ms)[0m  [1mSELECT version FROM "schema_migrations"[0m
  [1m[35m (6.4ms)[0m  INSERT INTO "schema_migrations" (version) VALUES ('20130811212425')
  [1m[36m (8.0ms)[0m  [1mINSERT INTO "schema_migrations" (version) VALUES ('20130811195620')[0m
  [1m[35m (7.9ms)[0m  INSERT INTO "schema_migrations" (version) VALUES ('20130811193133')
  [1m[36m (8.0ms)[0m  [1mINSERT INTO "schema_migrations" (version) VALUES ('20130811195557')[0m
  [1m[35mActiveRecord::SchemaMigration Load (0.5ms)[0m  SELECT "schema_migrations".* FROM "schema_migrations"
  [1m[36mActiveRecord::SchemaMigration Load (0.4ms)[0m  [1mSELECT "schema_migrations".* FROM "schema_migrations"[0m
  [1m[35m (0.5ms)[0m  ALTER TABLE "users" DISABLE TRIGGER ALL;ALTER TABLE "schema_migrations" DISABLE TRIGGER ALL
  [1m[36m (0.1ms)[0m  [1mBEGIN[0m
  [1m[35mFixture Delete (0.5ms)[0m  DELETE FROM "users"
  [1m[36mFixture Insert (0.7ms)[0m  [1mINSERT INTO "users" ("id", "first_name", "last_name", "nick_name", "login_name", "start_date", "end_date", "notes", "created_at", "updated_at") VALUES (1, 'Michael', 'Orsted', 'Mike', 'orstedma', '2012-02-04', NULL, 'This user lives in Chicago.', '2013-08-11 22:39:09', '2013-08-11 22:39:09')[0m
  [1m[35mFixture Insert (0.4ms)[0m  INSERT INTO "users" ("id", "first_name", "last_name", "nick_name", "login_name", "start_date", "end_date", "notes", "created_at", "updated_at") VALUES (2, 'Frederick', 'Free-Loader', 'Frederick', 'freelofw', '2012-03-04', NULL, 'This user is completely useless', '2013-08-11 22:39:09', '2013-08-11 22:39:09')
  [1m[36m (8.9ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.3ms)[0m  ALTER TABLE "users" ENABLE TRIGGER ALL;ALTER TABLE "schema_migrations" ENABLE TRIGGER ALL
  [1m[36m (0.1ms)[0m  [1mBEGIN[0m
---------------------------------------------------------------------
UserTest: test: User should allow first_name to be set to "Charles". 
---------------------------------------------------------------------
  [1m[35mUser Exists (0.6ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.3ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35m (0.2ms)[0m  ROLLBACK
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
--------------------------------------------------------------------------
UserTest: test: User should ensure first_name has a length of at least 2. 
--------------------------------------------------------------------------
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.3ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.3ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.1ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.1ms)[0m  BEGIN
-------------------------------------------------------------------------
UserTest: test: User should not allow first_name to be set to "charles". 
-------------------------------------------------------------------------
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.2ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.1ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.1ms)[0m  BEGIN
--------------------------------------------------------------------------------
UserTest: test: User should require case sensitive unique value for login_name. 
--------------------------------------------------------------------------------
  [1m[36mUser Load (0.8ms)[0m  [1mSELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35mUser Exists (1.2ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'orstedma' LIMIT 1
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'orstedma' LIMIT 1[0m
  [1m[35m (0.2ms)[0m  ROLLBACK
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
----------------------------------------------------------
UserTest: test: User should require first_name to be set. 
----------------------------------------------------------
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35m (0.2ms)[0m  ROLLBACK
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
---------------------------------------------------------
UserTest: test: User should require last_name to be set. 
---------------------------------------------------------
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35m (0.2ms)[0m  ROLLBACK
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
----------------------------------------------------------
UserTest: test: User should require login_name to be set. 
----------------------------------------------------------
  [1m[35mUser Exists (0.5ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35m (0.2ms)[0m  ROLLBACK
  [1m[36m (330.4ms)[0m  [1mDROP DATABASE IF EXISTS "ritrack_test"[0m
  [1m[35m (766.1ms)[0m  CREATE DATABASE "ritrack_test" ENCODING = 'unicode'
  [1m[36mSQL (1.6ms)[0m  [1mCREATE EXTENSION IF NOT EXISTS "plpgsql"[0m
  [1m[35m (109.7ms)[0m  CREATE TABLE "users" ("id" serial primary key, "first_name" character varying(255), "last_name" character varying(255), "nick_name" character varying(255), "login_name" character varying(255), "notes" text, "created_at" timestamp, "updated_at" timestamp, "start_date" date, "end_date" date) 
  [1m[36m (4.4ms)[0m  [1mCREATE TABLE "schema_migrations" ("version" character varying(255) NOT NULL) [0m
  [1m[35m (53.6ms)[0m  CREATE UNIQUE INDEX "unique_schema_migrations" ON "schema_migrations" ("version")
  [1m[36m (0.8ms)[0m  [1mSELECT version FROM "schema_migrations"[0m
  [1m[35m (6.2ms)[0m  INSERT INTO "schema_migrations" (version) VALUES ('20130811212425')
  [1m[36m (7.9ms)[0m  [1mINSERT INTO "schema_migrations" (version) VALUES ('20130811195620')[0m
  [1m[35m (7.9ms)[0m  INSERT INTO "schema_migrations" (version) VALUES ('20130811193133')
  [1m[36m (8.0ms)[0m  [1mINSERT INTO "schema_migrations" (version) VALUES ('20130811195557')[0m
  [1m[35mActiveRecord::SchemaMigration Load (0.5ms)[0m  SELECT "schema_migrations".* FROM "schema_migrations"
  [1m[36mActiveRecord::SchemaMigration Load (0.3ms)[0m  [1mSELECT "schema_migrations".* FROM "schema_migrations"[0m
  [1m[35m (0.5ms)[0m  ALTER TABLE "users" DISABLE TRIGGER ALL;ALTER TABLE "schema_migrations" DISABLE TRIGGER ALL
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
  [1m[35mFixture Delete (0.4ms)[0m  DELETE FROM "users"
  [1m[36mFixture Insert (0.7ms)[0m  [1mINSERT INTO "users" ("id", "first_name", "last_name", "nick_name", "login_name", "start_date", "end_date", "notes", "created_at", "updated_at") VALUES (1, 'Michael', 'Orsted', 'Mike', 'orstedma', '2012-02-04', NULL, 'This user lives in Chicago.', '2013-08-11 22:40:02', '2013-08-11 22:40:02')[0m
  [1m[35mFixture Insert (0.3ms)[0m  INSERT INTO "users" ("id", "first_name", "last_name", "nick_name", "login_name", "start_date", "end_date", "notes", "created_at", "updated_at") VALUES (2, 'Frederick', 'Free-Loader', 'Frederick', 'freelofw', '2012-03-04', NULL, 'This user is completely useless', '2013-08-11 22:40:02', '2013-08-11 22:40:02')
  [1m[36m (2.8ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.3ms)[0m  ALTER TABLE "users" ENABLE TRIGGER ALL;ALTER TABLE "schema_migrations" ENABLE TRIGGER ALL
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
---------------------------------------------------------------------
UserTest: test: User should allow first_name to be set to "Charles". 
---------------------------------------------------------------------
  [1m[35mUser Exists (0.6ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35m (0.2ms)[0m  ROLLBACK
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
--------------------------------------------------------------------------
UserTest: test: User should ensure first_name has a length of at least 2. 
--------------------------------------------------------------------------
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.2ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.2ms)[0m  BEGIN
---------------------------------------------------------------------------
UserTest: test: User should ensure first_name has a length of at most 254. 
---------------------------------------------------------------------------
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.5ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.3ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.3ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.3ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35m (0.2ms)[0m  ROLLBACK
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
-------------------------------------------------------------------------
UserTest: test: User should not allow first_name to be set to "charles". 
-------------------------------------------------------------------------
  [1m[35mUser Exists (0.3ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.3ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35m (0.1ms)[0m  ROLLBACK
  [1m[36m (0.1ms)[0m  [1mBEGIN[0m
--------------------------------------------------------------------------------
UserTest: test: User should require case sensitive unique value for login_name. 
--------------------------------------------------------------------------------
  [1m[35mUser Load (0.8ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (1.0ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'orstedma' LIMIT 1[0m
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'orstedma' LIMIT 1
  [1m[36m (0.2ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.2ms)[0m  BEGIN
----------------------------------------------------------
UserTest: test: User should require first_name to be set. 
----------------------------------------------------------
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.6ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.2ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.2ms)[0m  BEGIN
---------------------------------------------------------
UserTest: test: User should require last_name to be set. 
---------------------------------------------------------
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.5ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.2ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.2ms)[0m  BEGIN
----------------------------------------------------------
UserTest: test: User should require login_name to be set. 
----------------------------------------------------------
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.2ms)[0m  [1mROLLBACK[0m
  [1m[36m (329.2ms)[0m  [1mDROP DATABASE IF EXISTS "ritrack_test"[0m
  [1m[35m (641.0ms)[0m  CREATE DATABASE "ritrack_test" ENCODING = 'unicode'
  [1m[36mSQL (1.5ms)[0m  [1mCREATE EXTENSION IF NOT EXISTS "plpgsql"[0m
  [1m[35m (116.9ms)[0m  CREATE TABLE "users" ("id" serial primary key, "first_name" character varying(255), "last_name" character varying(255), "nick_name" character varying(255), "login_name" character varying(255), "notes" text, "created_at" timestamp, "updated_at" timestamp, "start_date" date, "end_date" date) 
  [1m[36m (4.6ms)[0m  [1mCREATE TABLE "schema_migrations" ("version" character varying(255) NOT NULL) [0m
  [1m[35m (61.9ms)[0m  CREATE UNIQUE INDEX "unique_schema_migrations" ON "schema_migrations" ("version")
  [1m[36m (0.5ms)[0m  [1mSELECT version FROM "schema_migrations"[0m
  [1m[35m (6.7ms)[0m  INSERT INTO "schema_migrations" (version) VALUES ('20130811212425')
  [1m[36m (7.9ms)[0m  [1mINSERT INTO "schema_migrations" (version) VALUES ('20130811195620')[0m
  [1m[35m (8.0ms)[0m  INSERT INTO "schema_migrations" (version) VALUES ('20130811193133')
  [1m[36m (7.9ms)[0m  [1mINSERT INTO "schema_migrations" (version) VALUES ('20130811195557')[0m
  [1m[35mActiveRecord::SchemaMigration Load (0.5ms)[0m  SELECT "schema_migrations".* FROM "schema_migrations"
  [1m[36mActiveRecord::SchemaMigration Load (0.4ms)[0m  [1mSELECT "schema_migrations".* FROM "schema_migrations"[0m
  [1m[35m (0.6ms)[0m  ALTER TABLE "users" DISABLE TRIGGER ALL;ALTER TABLE "schema_migrations" DISABLE TRIGGER ALL
  [1m[36m (0.1ms)[0m  [1mBEGIN[0m
  [1m[35mFixture Delete (0.3ms)[0m  DELETE FROM "users"
  [1m[36mFixture Insert (0.7ms)[0m  [1mINSERT INTO "users" ("id", "first_name", "last_name", "nick_name", "login_name", "start_date", "end_date", "notes", "created_at", "updated_at") VALUES (1, 'Michael', 'Orsted', 'Mike', 'orstedma', '2012-02-04', NULL, 'This user lives in Chicago.', '2013-08-11 22:43:04', '2013-08-11 22:43:04')[0m
  [1m[35mFixture Insert (0.3ms)[0m  INSERT INTO "users" ("id", "first_name", "last_name", "nick_name", "login_name", "start_date", "end_date", "notes", "created_at", "updated_at") VALUES (2, 'Frederick', 'Free-Loader', 'Frederick', 'freelofw', '2012-03-04', NULL, 'This user is completely useless', '2013-08-11 22:43:04', '2013-08-11 22:43:04')
  [1m[36m (9.7ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.3ms)[0m  ALTER TABLE "users" ENABLE TRIGGER ALL;ALTER TABLE "schema_migrations" ENABLE TRIGGER ALL
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
---------------------------------------------------------------------
UserTest: test: User should allow first_name to be set to "Charles". 
---------------------------------------------------------------------
  [1m[35mUser Exists (0.6ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35m (0.2ms)[0m  ROLLBACK
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
--------------------------------------------------------------------------
UserTest: test: User should ensure first_name has a length of at least 2. 
--------------------------------------------------------------------------
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.5ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.2ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.1ms)[0m  BEGIN
---------------------------------------------------------------------------
UserTest: test: User should ensure first_name has a length of at most 254. 
---------------------------------------------------------------------------
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.3ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.3ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.3ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35m (0.2ms)[0m  ROLLBACK
  [1m[36m (0.1ms)[0m  [1mBEGIN[0m
-------------------------------------------------------------------------
UserTest: test: User should ensure last_name has a length of at least 2. 
-------------------------------------------------------------------------
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.3ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.3ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.3ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.1ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.1ms)[0m  BEGIN
--------------------------------------------------------------------------
UserTest: test: User should ensure last_name has a length of at most 254. 
--------------------------------------------------------------------------
  [1m[36mUser Exists (0.2ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.3ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.3ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35m (0.3ms)[0m  ROLLBACK
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
-------------------------------------------------------------------------
UserTest: test: User should not allow first_name to be set to "charles". 
-------------------------------------------------------------------------
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35m (0.3ms)[0m  ROLLBACK
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
--------------------------------------------------------------------------------
UserTest: test: User should require case sensitive unique value for login_name. 
--------------------------------------------------------------------------------
  [1m[35mUser Load (0.7ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (1.0ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'orstedma' LIMIT 1[0m
  [1m[35mUser Exists (0.5ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'orstedma' LIMIT 1
  [1m[36m (0.2ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.2ms)[0m  BEGIN
----------------------------------------------------------
UserTest: test: User should require first_name to be set. 
----------------------------------------------------------
  [1m[36mUser Exists (0.5ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.2ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.2ms)[0m  BEGIN
---------------------------------------------------------
UserTest: test: User should require last_name to be set. 
---------------------------------------------------------
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.2ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.2ms)[0m  BEGIN
----------------------------------------------------------
UserTest: test: User should require login_name to be set. 
----------------------------------------------------------
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.5ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.2ms)[0m  [1mROLLBACK[0m
  [1m[36m (328.9ms)[0m  [1mDROP DATABASE IF EXISTS "ritrack_test"[0m
  [1m[35m (707.7ms)[0m  CREATE DATABASE "ritrack_test" ENCODING = 'unicode'
  [1m[36mSQL (1.6ms)[0m  [1mCREATE EXTENSION IF NOT EXISTS "plpgsql"[0m
  [1m[35m (110.8ms)[0m  CREATE TABLE "users" ("id" serial primary key, "first_name" character varying(255), "last_name" character varying(255), "nick_name" character varying(255), "login_name" character varying(255), "notes" text, "created_at" timestamp, "updated_at" timestamp, "start_date" date, "end_date" date) 
  [1m[36m (4.5ms)[0m  [1mCREATE TABLE "schema_migrations" ("version" character varying(255) NOT NULL) [0m
  [1m[35m (53.8ms)[0m  CREATE UNIQUE INDEX "unique_schema_migrations" ON "schema_migrations" ("version")
  [1m[36m (0.8ms)[0m  [1mSELECT version FROM "schema_migrations"[0m
  [1m[35m (6.3ms)[0m  INSERT INTO "schema_migrations" (version) VALUES ('20130811212425')
  [1m[36m (8.0ms)[0m  [1mINSERT INTO "schema_migrations" (version) VALUES ('20130811195620')[0m
  [1m[35m (7.8ms)[0m  INSERT INTO "schema_migrations" (version) VALUES ('20130811193133')
  [1m[36m (8.2ms)[0m  [1mINSERT INTO "schema_migrations" (version) VALUES ('20130811195557')[0m
  [1m[35mActiveRecord::SchemaMigration Load (0.5ms)[0m  SELECT "schema_migrations".* FROM "schema_migrations"
  [1m[36mActiveRecord::SchemaMigration Load (0.4ms)[0m  [1mSELECT "schema_migrations".* FROM "schema_migrations"[0m
  [1m[35m (0.6ms)[0m  ALTER TABLE "users" DISABLE TRIGGER ALL;ALTER TABLE "schema_migrations" DISABLE TRIGGER ALL
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
  [1m[35mFixture Delete (0.4ms)[0m  DELETE FROM "users"
  [1m[36mFixture Insert (0.7ms)[0m  [1mINSERT INTO "users" ("id", "first_name", "last_name", "nick_name", "login_name", "start_date", "end_date", "notes", "created_at", "updated_at") VALUES (1, 'Michael', 'Orsted', 'Mike', 'orstedma', '2012-02-04', NULL, 'This user lives in Chicago.', '2013-08-11 22:44:18', '2013-08-11 22:44:18')[0m
  [1m[35mFixture Insert (0.4ms)[0m  INSERT INTO "users" ("id", "first_name", "last_name", "nick_name", "login_name", "start_date", "end_date", "notes", "created_at", "updated_at") VALUES (2, 'Frederick', 'Free-Loader', 'Frederick', 'freelofw', '2012-03-04', NULL, 'This user is completely useless', '2013-08-11 22:44:18', '2013-08-11 22:44:18')
  [1m[36m (3.0ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.2ms)[0m  ALTER TABLE "users" ENABLE TRIGGER ALL;ALTER TABLE "schema_migrations" ENABLE TRIGGER ALL
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
---------------------------------------------------------------------
UserTest: test: User should allow first_name to be set to "Charles". 
---------------------------------------------------------------------
  [1m[35mUser Exists (0.6ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35m (0.2ms)[0m  ROLLBACK
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
--------------------------------------------------------------------------
UserTest: test: User should ensure first_name has a length of at least 2. 
--------------------------------------------------------------------------
  [1m[35mUser Exists (0.6ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.5ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.6ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.2ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.2ms)[0m  BEGIN
---------------------------------------------------------------------------
UserTest: test: User should ensure first_name has a length of at most 254. 
---------------------------------------------------------------------------
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.3ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.3ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35m (0.1ms)[0m  ROLLBACK
  [1m[36m (0.1ms)[0m  [1mBEGIN[0m
-------------------------------------------------------------------------
UserTest: test: User should ensure last_name has a length of at least 2. 
-------------------------------------------------------------------------
  [1m[35mUser Exists (0.3ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.5ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.3ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.3ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.5ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.2ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.1ms)[0m  BEGIN
--------------------------------------------------------------------------
UserTest: test: User should ensure last_name has a length of at most 254. 
--------------------------------------------------------------------------
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.5ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.5ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35m (0.2ms)[0m  ROLLBACK
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
-------------------------------------------------------------------------
UserTest: test: User should not allow first_name to be set to "charles". 
-------------------------------------------------------------------------
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.5ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35m (0.2ms)[0m  ROLLBACK
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
--------------------------------------------------------------------------------
UserTest: test: User should require case sensitive unique value for login_name. 
--------------------------------------------------------------------------------
  [1m[35mUser Load (0.7ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (1.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'orstedma' LIMIT 1[0m
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'orstedma' LIMIT 1
  [1m[36m (0.2ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.1ms)[0m  BEGIN
----------------------------------------------------------
UserTest: test: User should require first_name to be set. 
----------------------------------------------------------
  [1m[36mUser Exists (0.5ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.5ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.2ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.1ms)[0m  BEGIN
---------------------------------------------------------
UserTest: test: User should require last_name to be set. 
---------------------------------------------------------
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (2.5ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.2ms)[0m  BEGIN
----------------------------------------------------------
UserTest: test: User should require login_name to be set. 
----------------------------------------------------------
  [1m[36mUser Exists (0.5ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.2ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.2ms)[0m  BEGIN
----------------------------------------------------------
UserTest: test: User should require start_date to be set. 
----------------------------------------------------------
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.2ms)[0m  [1mROLLBACK[0m
  [1m[36m (233.3ms)[0m  [1mDROP DATABASE IF EXISTS "ritrack_test"[0m
  [1m[35m (791.0ms)[0m  CREATE DATABASE "ritrack_test" ENCODING = 'unicode'
  [1m[36mSQL (1.6ms)[0m  [1mCREATE EXTENSION IF NOT EXISTS "plpgsql"[0m
  [1m[35m (108.6ms)[0m  CREATE TABLE "users" ("id" serial primary key, "first_name" character varying(255), "last_name" character varying(255), "nick_name" character varying(255), "login_name" character varying(255), "notes" text, "created_at" timestamp, "updated_at" timestamp, "start_date" date, "end_date" date) 
  [1m[36m (4.4ms)[0m  [1mCREATE TABLE "schema_migrations" ("version" character varying(255) NOT NULL) [0m
  [1m[35m (53.6ms)[0m  CREATE UNIQUE INDEX "unique_schema_migrations" ON "schema_migrations" ("version")
  [1m[36m (0.8ms)[0m  [1mSELECT version FROM "schema_migrations"[0m
  [1m[35m (6.4ms)[0m  INSERT INTO "schema_migrations" (version) VALUES ('20130811212425')
  [1m[36m (7.9ms)[0m  [1mINSERT INTO "schema_migrations" (version) VALUES ('20130811195620')[0m
  [1m[35m (8.0ms)[0m  INSERT INTO "schema_migrations" (version) VALUES ('20130811193133')
  [1m[36m (8.0ms)[0m  [1mINSERT INTO "schema_migrations" (version) VALUES ('20130811195557')[0m
  [1m[35mActiveRecord::SchemaMigration Load (0.5ms)[0m  SELECT "schema_migrations".* FROM "schema_migrations"
  [1m[36mActiveRecord::SchemaMigration Load (0.4ms)[0m  [1mSELECT "schema_migrations".* FROM "schema_migrations"[0m
  [1m[35m (0.6ms)[0m  ALTER TABLE "users" DISABLE TRIGGER ALL;ALTER TABLE "schema_migrations" DISABLE TRIGGER ALL
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
  [1m[35mFixture Delete (0.5ms)[0m  DELETE FROM "users"
  [1m[36mFixture Insert (0.7ms)[0m  [1mINSERT INTO "users" ("id", "first_name", "last_name", "nick_name", "login_name", "start_date", "end_date", "notes", "created_at", "updated_at") VALUES (1, 'Michael', 'Orsted', 'Mike', 'orstedma', '2012-02-04', NULL, 'This user lives in Chicago.', '2013-08-11 23:57:17', '2013-08-11 23:57:17')[0m
  [1m[35mFixture Insert (0.4ms)[0m  INSERT INTO "users" ("id", "first_name", "last_name", "nick_name", "login_name", "start_date", "end_date", "notes", "created_at", "updated_at") VALUES (2, 'Frederick', 'Free-Loader', 'Frederick', 'freelofw', '2012-03-04', NULL, 'This user is completely useless', '2013-08-11 23:57:17', '2013-08-11 23:57:17')
  [1m[36m (4.4ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.3ms)[0m  ALTER TABLE "users" ENABLE TRIGGER ALL;ALTER TABLE "schema_migrations" ENABLE TRIGGER ALL
  [1m[36m (0.1ms)[0m  [1mBEGIN[0m
---------------------------------------------------------------------
UserTest: test: User should allow first_name to be set to "Charles". 
---------------------------------------------------------------------
  [1m[35mUser Exists (0.6ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.3ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35m (0.2ms)[0m  ROLLBACK
  [1m[36m (0.1ms)[0m  [1mBEGIN[0m
--------------------------------------------------------------------------
UserTest: test: User should ensure first_name has a length of at least 2. 
--------------------------------------------------------------------------
  [1m[35mUser Exists (0.3ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.3ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.3ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.5ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.3ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.2ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.2ms)[0m  BEGIN
---------------------------------------------------------------------------
UserTest: test: User should ensure first_name has a length of at most 254. 
---------------------------------------------------------------------------
  [1m[36mUser Exists (0.5ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.5ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35m (0.2ms)[0m  ROLLBACK
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
-------------------------------------------------------------------------
UserTest: test: User should ensure last_name has a length of at least 2. 
-------------------------------------------------------------------------
  [1m[35mUser Exists (0.5ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.5ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.3ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.3ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.2ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.2ms)[0m  BEGIN
--------------------------------------------------------------------------
UserTest: test: User should ensure last_name has a length of at most 254. 
--------------------------------------------------------------------------
  [1m[36mUser Exists (0.6ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.5ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.3ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35m (0.2ms)[0m  ROLLBACK
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
-------------------------------------------------------------------------
UserTest: test: User should not allow first_name to be set to "charles". 
-------------------------------------------------------------------------
  [1m[35mUser Exists (0.6ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.5ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35m (0.2ms)[0m  ROLLBACK
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
--------------------------------------------------------------------------------
UserTest: test: User should require case sensitive unique value for login_name. 
--------------------------------------------------------------------------------
  [1m[35mUser Load (0.8ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'orstedma' LIMIT 1[0m
  [1m[35mUser Exists (0.5ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'orstedma' LIMIT 1
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.2ms)[0m  BEGIN
----------------------------------------------------------
UserTest: test: User should require first_name to be set. 
----------------------------------------------------------
  [1m[36mUser Exists (0.6ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.2ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.2ms)[0m  BEGIN
---------------------------------------------------------
UserTest: test: User should require last_name to be set. 
---------------------------------------------------------
  [1m[36mUser Exists (0.5ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (2.3ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.2ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.1ms)[0m  BEGIN
----------------------------------------------------------
UserTest: test: User should require login_name to be set. 
----------------------------------------------------------
  [1m[36mUser Exists (0.5ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.1ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.1ms)[0m  BEGIN
----------------------------------------------------------
UserTest: test: User should require start_date to be set. 
----------------------------------------------------------
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.3ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.2ms)[0m  [1mROLLBACK[0m
  [1m[36m (325.2ms)[0m  [1mDROP DATABASE IF EXISTS "ritrack_test"[0m
  [1m[35m (782.8ms)[0m  CREATE DATABASE "ritrack_test" ENCODING = 'unicode'
  [1m[36mSQL (1.6ms)[0m  [1mCREATE EXTENSION IF NOT EXISTS "plpgsql"[0m
  [1m[35m (117.8ms)[0m  CREATE TABLE "users" ("id" serial primary key, "first_name" character varying(255), "last_name" character varying(255), "nick_name" character varying(255), "login_name" character varying(255), "notes" text, "created_at" timestamp, "updated_at" timestamp, "start_date" date, "end_date" date) 
  [1m[36m (4.6ms)[0m  [1mCREATE TABLE "schema_migrations" ("version" character varying(255) NOT NULL) [0m
  [1m[35m (54.9ms)[0m  CREATE UNIQUE INDEX "unique_schema_migrations" ON "schema_migrations" ("version")
  [1m[36m (0.7ms)[0m  [1mSELECT version FROM "schema_migrations"[0m
  [1m[35m (6.7ms)[0m  INSERT INTO "schema_migrations" (version) VALUES ('20130811212425')
  [1m[36m (7.9ms)[0m  [1mINSERT INTO "schema_migrations" (version) VALUES ('20130811195620')[0m
  [1m[35m (8.0ms)[0m  INSERT INTO "schema_migrations" (version) VALUES ('20130811193133')
  [1m[36m (8.0ms)[0m  [1mINSERT INTO "schema_migrations" (version) VALUES ('20130811195557')[0m
  [1m[35mActiveRecord::SchemaMigration Load (0.6ms)[0m  SELECT "schema_migrations".* FROM "schema_migrations"
  [1m[36mActiveRecord::SchemaMigration Load (0.4ms)[0m  [1mSELECT "schema_migrations".* FROM "schema_migrations"[0m
  [1m[35m (0.6ms)[0m  ALTER TABLE "users" DISABLE TRIGGER ALL;ALTER TABLE "schema_migrations" DISABLE TRIGGER ALL
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
  [1m[35mFixture Delete (0.5ms)[0m  DELETE FROM "users"
  [1m[36mFixture Insert (0.7ms)[0m  [1mINSERT INTO "users" ("id", "first_name", "last_name", "nick_name", "login_name", "start_date", "end_date", "notes", "created_at", "updated_at") VALUES (1, 'Michael', 'Orsted', 'Mike', 'orstedma', '2012-02-04', NULL, 'This user lives in Chicago.', '2013-08-12 00:02:02', '2013-08-12 00:02:02')[0m
  [1m[35mFixture Insert (0.4ms)[0m  INSERT INTO "users" ("id", "first_name", "last_name", "nick_name", "login_name", "start_date", "end_date", "notes", "created_at", "updated_at") VALUES (2, 'Frederick', 'Free-Loader', 'Frederick', 'freelofw', '2012-03-04', NULL, 'This user is completely useless', '2013-08-12 00:02:02', '2013-08-12 00:02:02')
  [1m[36m (6.2ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.3ms)[0m  ALTER TABLE "users" ENABLE TRIGGER ALL;ALTER TABLE "schema_migrations" ENABLE TRIGGER ALL
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
---------------------------------------------------------------------
UserTest: test: User should allow first_name to be set to "Charles". 
---------------------------------------------------------------------
  [1m[35mUser Exists (0.6ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35m (0.2ms)[0m  ROLLBACK
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
--------------------------------------------------------------------------
UserTest: test: User should ensure first_name has a length of at least 2. 
--------------------------------------------------------------------------
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.3ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.6ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.3ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.2ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.2ms)[0m  BEGIN
---------------------------------------------------------------------------
UserTest: test: User should ensure first_name has a length of at most 254. 
---------------------------------------------------------------------------
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.3ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.3ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.3ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35m (0.2ms)[0m  ROLLBACK
  [1m[36m (0.1ms)[0m  [1mBEGIN[0m
-------------------------------------------------------------------------
UserTest: test: User should ensure last_name has a length of at least 2. 
-------------------------------------------------------------------------
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.3ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.2ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.2ms)[0m  BEGIN
--------------------------------------------------------------------------
UserTest: test: User should ensure last_name has a length of at most 254. 
--------------------------------------------------------------------------
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.3ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.3ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.3ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.3ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35m (0.1ms)[0m  ROLLBACK
  [1m[36m (0.1ms)[0m  [1mBEGIN[0m
-------------------------------------------------------------------------
UserTest: test: User should not allow first_name to be set to "charles". 
-------------------------------------------------------------------------
  [1m[35mUser Exists (0.3ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35m (0.2ms)[0m  ROLLBACK
  [1m[36m (0.1ms)[0m  [1mBEGIN[0m
--------------------------------------------------------------------------------
UserTest: test: User should require case sensitive unique value for login_name. 
--------------------------------------------------------------------------------
  [1m[35mUser Load (0.8ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (1.0ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'orstedma' LIMIT 1[0m
  [1m[35mUser Exists (0.5ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'orstedma' LIMIT 1
  [1m[36m (0.2ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.2ms)[0m  BEGIN
----------------------------------------------------------
UserTest: test: User should require first_name to be set. 
----------------------------------------------------------
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.5ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.2ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.2ms)[0m  BEGIN
---------------------------------------------------------
UserTest: test: User should require last_name to be set. 
---------------------------------------------------------
  [1m[36mUser Exists (0.5ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (2.8ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.2ms)[0m  BEGIN
----------------------------------------------------------
UserTest: test: User should require login_name to be set. 
----------------------------------------------------------
  [1m[36mUser Exists (0.5ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.5ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.2ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.2ms)[0m  BEGIN
----------------------------------------------------------
UserTest: test: User should require start_date to be set. 
----------------------------------------------------------
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.2ms)[0m  [1mROLLBACK[0m
  [1m[36m (232.6ms)[0m  [1mDROP DATABASE IF EXISTS "ritrack_test"[0m
  [1m[35m (757.7ms)[0m  CREATE DATABASE "ritrack_test" ENCODING = 'unicode'
  [1m[36mSQL (1.7ms)[0m  [1mCREATE EXTENSION IF NOT EXISTS "plpgsql"[0m
  [1m[35m (100.6ms)[0m  CREATE TABLE "users" ("id" serial primary key, "first_name" character varying(255), "last_name" character varying(255), "nick_name" character varying(255), "login_name" character varying(255), "notes" text, "created_at" timestamp, "updated_at" timestamp, "start_date" date, "end_date" date) 
  [1m[36m (4.4ms)[0m  [1mCREATE TABLE "schema_migrations" ("version" character varying(255) NOT NULL) [0m
  [1m[35m (61.9ms)[0m  CREATE UNIQUE INDEX "unique_schema_migrations" ON "schema_migrations" ("version")
  [1m[36m (0.8ms)[0m  [1mSELECT version FROM "schema_migrations"[0m
  [1m[35m (6.4ms)[0m  INSERT INTO "schema_migrations" (version) VALUES ('20130811212425')
  [1m[36m (7.9ms)[0m  [1mINSERT INTO "schema_migrations" (version) VALUES ('20130811195620')[0m
  [1m[35m (8.0ms)[0m  INSERT INTO "schema_migrations" (version) VALUES ('20130811193133')
  [1m[36m (8.0ms)[0m  [1mINSERT INTO "schema_migrations" (version) VALUES ('20130811195557')[0m
  [1m[35mActiveRecord::SchemaMigration Load (0.5ms)[0m  SELECT "schema_migrations".* FROM "schema_migrations"
  [1m[36mActiveRecord::SchemaMigration Load (0.4ms)[0m  [1mSELECT "schema_migrations".* FROM "schema_migrations"[0m
  [1m[35m (0.5ms)[0m  ALTER TABLE "users" DISABLE TRIGGER ALL;ALTER TABLE "schema_migrations" DISABLE TRIGGER ALL
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
  [1m[35mFixture Delete (0.5ms)[0m  DELETE FROM "users"
  [1m[36mFixture Insert (0.6ms)[0m  [1mINSERT INTO "users" ("id", "first_name", "last_name", "nick_name", "login_name", "start_date", "end_date", "notes", "created_at", "updated_at") VALUES (1, 'Michael', 'Orsted', 'Mike', 'orstedma', '2012-02-04', NULL, 'This user lives in Chicago.', '2013-08-12 01:07:19', '2013-08-12 01:07:19')[0m
  [1m[35mFixture Insert (0.3ms)[0m  INSERT INTO "users" ("id", "first_name", "last_name", "nick_name", "login_name", "start_date", "end_date", "notes", "created_at", "updated_at") VALUES (2, 'Frederick', 'Free-Loader', 'Frederick', 'freelofw', '2012-03-04', NULL, 'This user is completely useless', '2013-08-12 01:07:19', '2013-08-12 01:07:19')
  [1m[36m (4.9ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.3ms)[0m  ALTER TABLE "users" ENABLE TRIGGER ALL;ALTER TABLE "schema_migrations" ENABLE TRIGGER ALL
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
---------------------------------------------------------------------
UserTest: test: User should allow first_name to be set to "Charles". 
---------------------------------------------------------------------
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.3ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35m (0.2ms)[0m  ROLLBACK
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
--------------------------------------------------------------------------
UserTest: test: User should ensure first_name has a length of at least 2. 
--------------------------------------------------------------------------
  [1m[35mUser Exists (0.3ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.3ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.5ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.3ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.3ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.2ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.1ms)[0m  BEGIN
---------------------------------------------------------------------------
UserTest: test: User should ensure first_name has a length of at most 254. 
---------------------------------------------------------------------------
  [1m[36mUser Exists (0.3ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.5ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.3ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.5ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35m (0.2ms)[0m  ROLLBACK
  [1m[36m (0.1ms)[0m  [1mBEGIN[0m
-------------------------------------------------------------------------
UserTest: test: User should ensure last_name has a length of at least 2. 
-------------------------------------------------------------------------
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.3ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.3ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.3ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.2ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.2ms)[0m  BEGIN
--------------------------------------------------------------------------
UserTest: test: User should ensure last_name has a length of at most 254. 
--------------------------------------------------------------------------
  [1m[36mUser Exists (0.5ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.6ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35m (0.2ms)[0m  ROLLBACK
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
-------------------------------------------------------------------------
UserTest: test: User should not allow first_name to be set to "charles". 
-------------------------------------------------------------------------
  [1m[35mUser Exists (0.5ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.5ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35m (0.1ms)[0m  ROLLBACK
  [1m[36m (0.1ms)[0m  [1mBEGIN[0m
--------------------------------------------------------------------------------
UserTest: test: User should require case sensitive unique value for login_name. 
--------------------------------------------------------------------------------
  [1m[35mUser Load (0.8ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (1.2ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'orstedma' LIMIT 1[0m
  [1m[35mUser Exists (0.6ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'orstedma' LIMIT 1
  [1m[36m (0.2ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.2ms)[0m  BEGIN
----------------------------------------------------------
UserTest: test: User should require first_name to be set. 
----------------------------------------------------------
  [1m[36mUser Exists (0.5ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.5ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.2ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.2ms)[0m  BEGIN
---------------------------------------------------------
UserTest: test: User should require last_name to be set. 
---------------------------------------------------------
  [1m[36mUser Exists (0.5ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (2.4ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.2ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.2ms)[0m  BEGIN
----------------------------------------------------------
UserTest: test: User should require login_name to be set. 
----------------------------------------------------------
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.2ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.1ms)[0m  BEGIN
----------------------------------------------------------
UserTest: test: User should require start_date to be set. 
----------------------------------------------------------
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.3ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.2ms)[0m  [1mROLLBACK[0m
  [1m[36m (322.9ms)[0m  [1mDROP DATABASE IF EXISTS "ritrack_test"[0m
  [1m[35m (732.8ms)[0m  CREATE DATABASE "ritrack_test" ENCODING = 'unicode'
  [1m[36mSQL (1.6ms)[0m  [1mCREATE EXTENSION IF NOT EXISTS "plpgsql"[0m
  [1m[35m (103.3ms)[0m  CREATE TABLE "users" ("id" serial primary key, "first_name" character varying(255), "last_name" character varying(255), "nick_name" character varying(255), "login_name" character varying(255), "notes" text, "created_at" timestamp, "updated_at" timestamp, "start_date" date, "end_date" date) 
  [1m[36m (4.5ms)[0m  [1mCREATE TABLE "schema_migrations" ("version" character varying(255) NOT NULL) [0m
  [1m[35m (53.6ms)[0m  CREATE UNIQUE INDEX "unique_schema_migrations" ON "schema_migrations" ("version")
  [1m[36m (0.8ms)[0m  [1mSELECT version FROM "schema_migrations"[0m
  [1m[35m (6.4ms)[0m  INSERT INTO "schema_migrations" (version) VALUES ('20130811212425')
  [1m[36m (7.9ms)[0m  [1mINSERT INTO "schema_migrations" (version) VALUES ('20130811195620')[0m
  [1m[35m (8.0ms)[0m  INSERT INTO "schema_migrations" (version) VALUES ('20130811193133')
  [1m[36m (8.0ms)[0m  [1mINSERT INTO "schema_migrations" (version) VALUES ('20130811195557')[0m
  [1m[35mActiveRecord::SchemaMigration Load (0.5ms)[0m  SELECT "schema_migrations".* FROM "schema_migrations"
  [1m[36mActiveRecord::SchemaMigration Load (0.3ms)[0m  [1mSELECT "schema_migrations".* FROM "schema_migrations"[0m
  [1m[35m (0.5ms)[0m  ALTER TABLE "users" DISABLE TRIGGER ALL;ALTER TABLE "schema_migrations" DISABLE TRIGGER ALL
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
  [1m[35mFixture Delete (0.5ms)[0m  DELETE FROM "users"
  [1m[36mFixture Insert (0.7ms)[0m  [1mINSERT INTO "users" ("id", "first_name", "last_name", "nick_name", "login_name", "start_date", "end_date", "notes", "created_at", "updated_at") VALUES (1, 'Michael', 'Orsted', 'Mike', 'orstedma', '2012-02-04', NULL, 'This user lives in Chicago.', '2013-08-12 01:08:33', '2013-08-12 01:08:33')[0m
  [1m[35mFixture Insert (0.4ms)[0m  INSERT INTO "users" ("id", "first_name", "last_name", "nick_name", "login_name", "start_date", "end_date", "notes", "created_at", "updated_at") VALUES (2, 'Frederick', 'Free-Loader', 'Frederick', 'freelofw', '2012-03-04', NULL, 'This user is completely useless', '2013-08-12 01:08:33', '2013-08-12 01:08:33')
  [1m[36m (9.5ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.3ms)[0m  ALTER TABLE "users" ENABLE TRIGGER ALL;ALTER TABLE "schema_migrations" ENABLE TRIGGER ALL
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
--------------------------------------------------------
UserTest: test: A given user should be valid initially. 
--------------------------------------------------------
  [1m[35mUser Load (1.0ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (1.2ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.1ms)[0m  ROLLBACK
  [1m[36m (0.1ms)[0m  [1mBEGIN[0m
---------------------------------------------------------------------
UserTest: test: User should allow first_name to be set to "Charles". 
---------------------------------------------------------------------
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.3ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35m (0.1ms)[0m  ROLLBACK
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
--------------------------------------------------------------------------
UserTest: test: User should ensure first_name has a length of at least 2. 
--------------------------------------------------------------------------
  [1m[35mUser Exists (0.5ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.6ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.2ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.1ms)[0m  BEGIN
---------------------------------------------------------------------------
UserTest: test: User should ensure first_name has a length of at most 254. 
---------------------------------------------------------------------------
  [1m[36mUser Exists (0.5ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.3ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.3ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.3ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35m (0.2ms)[0m  ROLLBACK
  [1m[36m (0.1ms)[0m  [1mBEGIN[0m
-------------------------------------------------------------------------
UserTest: test: User should ensure last_name has a length of at least 2. 
-------------------------------------------------------------------------
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.5ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.5ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.2ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.2ms)[0m  BEGIN
--------------------------------------------------------------------------
UserTest: test: User should ensure last_name has a length of at most 254. 
--------------------------------------------------------------------------
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.5ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.6ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35m (0.2ms)[0m  ROLLBACK
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
-------------------------------------------------------------------------
UserTest: test: User should not allow first_name to be set to "charles". 
-------------------------------------------------------------------------
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35m (0.2ms)[0m  ROLLBACK
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
--------------------------------------------------------------------------------
UserTest: test: User should require case sensitive unique value for login_name. 
--------------------------------------------------------------------------------
  [1m[35mUser Load (0.5ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'orstedma' LIMIT 1[0m
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'orstedma' LIMIT 1
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.2ms)[0m  BEGIN
----------------------------------------------------------
UserTest: test: User should require first_name to be set. 
----------------------------------------------------------
  [1m[36mUser Exists (0.5ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.3ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.2ms)[0m  BEGIN
---------------------------------------------------------
UserTest: test: User should require last_name to be set. 
---------------------------------------------------------
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (2.6ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.2ms)[0m  BEGIN
----------------------------------------------------------
UserTest: test: User should require login_name to be set. 
----------------------------------------------------------
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.5ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.2ms)[0m  BEGIN
----------------------------------------------------------
UserTest: test: User should require start_date to be set. 
----------------------------------------------------------
  [1m[36mUser Exists (0.5ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.2ms)[0m  [1mROLLBACK[0m
  [1m[36m (329.4ms)[0m  [1mDROP DATABASE IF EXISTS "ritrack_test"[0m
  [1m[35m (657.6ms)[0m  CREATE DATABASE "ritrack_test" ENCODING = 'unicode'
  [1m[36mSQL (1.6ms)[0m  [1mCREATE EXTENSION IF NOT EXISTS "plpgsql"[0m
  [1m[35m (109.5ms)[0m  CREATE TABLE "users" ("id" serial primary key, "first_name" character varying(255), "last_name" character varying(255), "nick_name" character varying(255), "login_name" character varying(255), "notes" text, "created_at" timestamp, "updated_at" timestamp, "start_date" date, "end_date" date) 
  [1m[36m (4.5ms)[0m  [1mCREATE TABLE "schema_migrations" ("version" character varying(255) NOT NULL) [0m
  [1m[35m (61.9ms)[0m  CREATE UNIQUE INDEX "unique_schema_migrations" ON "schema_migrations" ("version")
  [1m[36m (0.8ms)[0m  [1mSELECT version FROM "schema_migrations"[0m
  [1m[35m (6.3ms)[0m  INSERT INTO "schema_migrations" (version) VALUES ('20130811212425')
  [1m[36m (7.9ms)[0m  [1mINSERT INTO "schema_migrations" (version) VALUES ('20130811195620')[0m
  [1m[35m (8.0ms)[0m  INSERT INTO "schema_migrations" (version) VALUES ('20130811193133')
  [1m[36m (8.0ms)[0m  [1mINSERT INTO "schema_migrations" (version) VALUES ('20130811195557')[0m
  [1m[35mActiveRecord::SchemaMigration Load (0.5ms)[0m  SELECT "schema_migrations".* FROM "schema_migrations"
  [1m[36mActiveRecord::SchemaMigration Load (0.4ms)[0m  [1mSELECT "schema_migrations".* FROM "schema_migrations"[0m
  [1m[35m (0.6ms)[0m  ALTER TABLE "users" DISABLE TRIGGER ALL;ALTER TABLE "schema_migrations" DISABLE TRIGGER ALL
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
  [1m[35mFixture Delete (0.6ms)[0m  DELETE FROM "users"
  [1m[36mFixture Insert (0.7ms)[0m  [1mINSERT INTO "users" ("id", "first_name", "last_name", "nick_name", "login_name", "start_date", "end_date", "notes", "created_at", "updated_at") VALUES (1, 'Michael', 'Orsted', 'Mike', 'orstedma', '2012-02-04', NULL, 'This user lives in Chicago.', '2013-08-12 01:11:19', '2013-08-12 01:11:19')[0m
  [1m[35mFixture Insert (0.4ms)[0m  INSERT INTO "users" ("id", "first_name", "last_name", "nick_name", "login_name", "start_date", "end_date", "notes", "created_at", "updated_at") VALUES (2, 'Frederick', 'Free-Loader', 'Frederick', 'freelofw', '2012-03-04', NULL, 'This user is completely useless', '2013-08-12 01:11:19', '2013-08-12 01:11:19')
  [1m[36m (4.4ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.3ms)[0m  ALTER TABLE "users" ENABLE TRIGGER ALL;ALTER TABLE "schema_migrations" ENABLE TRIGGER ALL
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
--------------------------------------------------------
UserTest: test: A given user should be valid initially. 
--------------------------------------------------------
  [1m[35mUser Load (1.1ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (1.2ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.1ms)[0m  ROLLBACK
  [1m[36m (0.1ms)[0m  [1mBEGIN[0m
------------------------------------------------------------------------------------
UserTest: test: A given user should require a start date if an end date is present. 
------------------------------------------------------------------------------------
  [1m[35mUser Load (0.5ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (0.5ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.1ms)[0m  ROLLBACK
  [1m[36m (0.1ms)[0m  [1mBEGIN[0m
---------------------------------------------------------------------
UserTest: test: User should allow first_name to be set to "Charles". 
---------------------------------------------------------------------
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35m (0.2ms)[0m  ROLLBACK
  [1m[36m (0.1ms)[0m  [1mBEGIN[0m
--------------------------------------------------------------------------
UserTest: test: User should ensure first_name has a length of at least 2. 
--------------------------------------------------------------------------
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.6ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.2ms)[0m  BEGIN
---------------------------------------------------------------------------
UserTest: test: User should ensure first_name has a length of at most 254. 
---------------------------------------------------------------------------
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.5ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35m (0.2ms)[0m  ROLLBACK
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
-------------------------------------------------------------------------
UserTest: test: User should ensure last_name has a length of at least 2. 
-------------------------------------------------------------------------
  [1m[35mUser Exists (0.5ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.5ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.3ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.2ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.2ms)[0m  BEGIN
--------------------------------------------------------------------------
UserTest: test: User should ensure last_name has a length of at most 254. 
--------------------------------------------------------------------------
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.5ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.5ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.2ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.5ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35m (0.2ms)[0m  ROLLBACK
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
-------------------------------------------------------------------------
UserTest: test: User should not allow first_name to be set to "charles". 
-------------------------------------------------------------------------
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.3ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35m (0.1ms)[0m  ROLLBACK
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
--------------------------------------------------------------------------------
UserTest: test: User should require case sensitive unique value for login_name. 
--------------------------------------------------------------------------------
  [1m[35mUser Load (0.4ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'orstedma' LIMIT 1[0m
  [1m[35mUser Exists (0.5ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'orstedma' LIMIT 1
  [1m[36m (0.2ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.1ms)[0m  BEGIN
----------------------------------------------------------
UserTest: test: User should require first_name to be set. 
----------------------------------------------------------
  [1m[36mUser Exists (0.5ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.2ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.2ms)[0m  BEGIN
---------------------------------------------------------
UserTest: test: User should require last_name to be set. 
---------------------------------------------------------
  [1m[36mUser Exists (0.3ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (2.3ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.2ms)[0m  BEGIN
----------------------------------------------------------
UserTest: test: User should require login_name to be set. 
----------------------------------------------------------
  [1m[36mUser Exists (0.5ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.3ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.2ms)[0m  BEGIN
----------------------------------------------------------
UserTest: test: User should require start_date to be set. 
----------------------------------------------------------
  [1m[36mUser Exists (0.3ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.5ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.2ms)[0m  [1mROLLBACK[0m
  [1m[36m (340.4ms)[0m  [1mDROP DATABASE IF EXISTS "ritrack_test"[0m
  [1m[35m (1368.7ms)[0m  CREATE DATABASE "ritrack_test" ENCODING = 'unicode'
  [1m[36mSQL (57.7ms)[0m  [1mCREATE EXTENSION IF NOT EXISTS "plpgsql"[0m
  [1m[35m (118.1ms)[0m  CREATE TABLE "users" ("id" serial primary key, "first_name" character varying(255), "last_name" character varying(255), "nick_name" character varying(255), "login_name" character varying(255), "notes" text, "created_at" timestamp, "updated_at" timestamp, "start_date" date, "end_date" date) 
  [1m[36m (3.9ms)[0m  [1mCREATE TABLE "schema_migrations" ("version" character varying(255) NOT NULL) [0m
  [1m[35m (62.0ms)[0m  CREATE UNIQUE INDEX "unique_schema_migrations" ON "schema_migrations" ("version")
  [1m[36m (0.8ms)[0m  [1mSELECT version FROM "schema_migrations"[0m
  [1m[35m (6.4ms)[0m  INSERT INTO "schema_migrations" (version) VALUES ('20130811212425')
  [1m[36m (7.9ms)[0m  [1mINSERT INTO "schema_migrations" (version) VALUES ('20130811195620')[0m
  [1m[35m (7.9ms)[0m  INSERT INTO "schema_migrations" (version) VALUES ('20130811193133')
  [1m[36m (8.1ms)[0m  [1mINSERT INTO "schema_migrations" (version) VALUES ('20130811195557')[0m
  [1m[35mActiveRecord::SchemaMigration Load (0.5ms)[0m  SELECT "schema_migrations".* FROM "schema_migrations"
  [1m[36mActiveRecord::SchemaMigration Load (0.4ms)[0m  [1mSELECT "schema_migrations".* FROM "schema_migrations"[0m
  [1m[35m (0.6ms)[0m  ALTER TABLE "users" DISABLE TRIGGER ALL;ALTER TABLE "schema_migrations" DISABLE TRIGGER ALL
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
  [1m[35mFixture Delete (0.5ms)[0m  DELETE FROM "users"
  [1m[36mFixture Insert (0.9ms)[0m  [1mINSERT INTO "users" ("id", "first_name", "last_name", "nick_name", "login_name", "start_date", "end_date", "notes", "created_at", "updated_at") VALUES (1, 'Michael', 'Orsted', 'Mike', 'orstedma', '2012-02-04', NULL, 'This user lives in Chicago.', '2013-08-12 23:13:20', '2013-08-12 23:13:20')[0m
  [1m[35mFixture Insert (0.4ms)[0m  INSERT INTO "users" ("id", "first_name", "last_name", "nick_name", "login_name", "start_date", "end_date", "notes", "created_at", "updated_at") VALUES (2, 'Frederick', 'Free-Loader', 'Frederick', 'freelofw', '2012-03-04', NULL, 'This user is completely useless', '2013-08-12 23:13:20', '2013-08-12 23:13:20')
  [1m[36m (18.2ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.3ms)[0m  ALTER TABLE "users" ENABLE TRIGGER ALL;ALTER TABLE "schema_migrations" ENABLE TRIGGER ALL
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
--------------------------------------------------------
UserTest: test: A given user should be valid initially. 
--------------------------------------------------------
  [1m[35mUser Load (0.9ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (0.6ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.2ms)[0m  ROLLBACK
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
------------------------------------------------------------------------------------
UserTest: test: A given user should require a start date if an end date is present. 
------------------------------------------------------------------------------------
  [1m[35mUser Load (0.5ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (0.5ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.2ms)[0m  ROLLBACK
  [1m[36m (0.1ms)[0m  [1mBEGIN[0m
--------------------------------------------------------------------------------
UserTest: test: A given user should require an end date on or after start date. 
--------------------------------------------------------------------------------
  [1m[35mUser Load (0.6ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36m (0.2ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.2ms)[0m  BEGIN
---------------------------------------------------------------------
UserTest: test: User should allow first_name to be set to "Charles". 
---------------------------------------------------------------------
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.3ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.2ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.2ms)[0m  BEGIN
--------------------------------------------------------------------------
UserTest: test: User should ensure first_name has a length of at least 2. 
--------------------------------------------------------------------------
  [1m[36mUser Exists (0.3ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.5ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.3ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35m (0.2ms)[0m  ROLLBACK
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
---------------------------------------------------------------------------
UserTest: test: User should ensure first_name has a length of at most 254. 
---------------------------------------------------------------------------
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.2ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.1ms)[0m  BEGIN
-------------------------------------------------------------------------
UserTest: test: User should ensure last_name has a length of at least 2. 
-------------------------------------------------------------------------
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.3ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.3ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.3ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35m (0.2ms)[0m  ROLLBACK
  [1m[36m (0.1ms)[0m  [1mBEGIN[0m
--------------------------------------------------------------------------
UserTest: test: User should ensure last_name has a length of at most 254. 
--------------------------------------------------------------------------
  [1m[35mUser Exists (0.3ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.3ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.3ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.3ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.3ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.1ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.1ms)[0m  BEGIN
-------------------------------------------------------------------------
UserTest: test: User should not allow first_name to be set to "charles". 
-------------------------------------------------------------------------
  [1m[36mUser Exists (0.3ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.3ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.1ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.1ms)[0m  BEGIN
--------------------------------------------------------------------------------
UserTest: test: User should require case sensitive unique value for login_name. 
--------------------------------------------------------------------------------
  [1m[36mUser Load (0.5ms)[0m  [1mSELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'orstedma' LIMIT 1
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'orstedma' LIMIT 1[0m
  [1m[35m (0.2ms)[0m  ROLLBACK
  [1m[36m (0.1ms)[0m  [1mBEGIN[0m
----------------------------------------------------------
UserTest: test: User should require first_name to be set. 
----------------------------------------------------------
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.3ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35m (0.3ms)[0m  ROLLBACK
  [1m[36m (0.1ms)[0m  [1mBEGIN[0m
---------------------------------------------------------
UserTest: test: User should require last_name to be set. 
---------------------------------------------------------
  [1m[35mUser Exists (0.5ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (2.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35m (0.3ms)[0m  ROLLBACK
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
----------------------------------------------------------
UserTest: test: User should require login_name to be set. 
----------------------------------------------------------
  [1m[35mUser Exists (0.5ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.5ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35m (0.2ms)[0m  ROLLBACK
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
----------------------------------------------------------
UserTest: test: User should require start_date to be set. 
----------------------------------------------------------
  [1m[35mUser Exists (0.5ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.5ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35m (0.2ms)[0m  ROLLBACK
  [1m[36m (331.2ms)[0m  [1mDROP DATABASE IF EXISTS "ritrack_test"[0m
  [1m[35m (724.4ms)[0m  CREATE DATABASE "ritrack_test" ENCODING = 'unicode'
  [1m[36mSQL (1.7ms)[0m  [1mCREATE EXTENSION IF NOT EXISTS "plpgsql"[0m
  [1m[35m (102.4ms)[0m  CREATE TABLE "users" ("id" serial primary key, "first_name" character varying(255), "last_name" character varying(255), "nick_name" character varying(255), "login_name" character varying(255), "notes" text, "created_at" timestamp, "updated_at" timestamp, "start_date" date, "end_date" date) 
  [1m[36m (4.2ms)[0m  [1mCREATE TABLE "schema_migrations" ("version" character varying(255) NOT NULL) [0m
  [1m[35m (54.5ms)[0m  CREATE UNIQUE INDEX "unique_schema_migrations" ON "schema_migrations" ("version")
  [1m[36m (0.6ms)[0m  [1mSELECT version FROM "schema_migrations"[0m
  [1m[35m (6.5ms)[0m  INSERT INTO "schema_migrations" (version) VALUES ('20130811212425')
  [1m[36m (7.9ms)[0m  [1mINSERT INTO "schema_migrations" (version) VALUES ('20130811195620')[0m
  [1m[35m (8.0ms)[0m  INSERT INTO "schema_migrations" (version) VALUES ('20130811193133')
  [1m[36m (7.9ms)[0m  [1mINSERT INTO "schema_migrations" (version) VALUES ('20130811195557')[0m
  [1m[35mActiveRecord::SchemaMigration Load (0.5ms)[0m  SELECT "schema_migrations".* FROM "schema_migrations"
  [1m[36mActiveRecord::SchemaMigration Load (0.4ms)[0m  [1mSELECT "schema_migrations".* FROM "schema_migrations"[0m
  [1m[35m (0.5ms)[0m  ALTER TABLE "users" DISABLE TRIGGER ALL;ALTER TABLE "schema_migrations" DISABLE TRIGGER ALL
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
  [1m[35mFixture Delete (0.5ms)[0m  DELETE FROM "users"
  [1m[36mFixture Insert (0.6ms)[0m  [1mINSERT INTO "users" ("id", "first_name", "last_name", "nick_name", "login_name", "start_date", "end_date", "notes", "created_at", "updated_at") VALUES (1, 'Michael', 'Orsted', 'Mike', 'orstedma', '2012-02-04', NULL, 'This user lives in Chicago.', '2013-08-12 23:14:11', '2013-08-12 23:14:11')[0m
  [1m[35mFixture Insert (0.3ms)[0m  INSERT INTO "users" ("id", "first_name", "last_name", "nick_name", "login_name", "start_date", "end_date", "notes", "created_at", "updated_at") VALUES (2, 'Frederick', 'Free-Loader', 'Frederick', 'freelofw', '2012-03-04', NULL, 'This user is completely useless', '2013-08-12 23:14:11', '2013-08-12 23:14:11')
  [1m[36m (5.9ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.4ms)[0m  ALTER TABLE "users" ENABLE TRIGGER ALL;ALTER TABLE "schema_migrations" ENABLE TRIGGER ALL
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
--------------------------------------------------------
UserTest: test: A given user should be valid initially. 
--------------------------------------------------------
  [1m[35mUser Load (1.0ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (1.1ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.2ms)[0m  ROLLBACK
  [1m[36m (0.1ms)[0m  [1mBEGIN[0m
------------------------------------------------------------------------------------
UserTest: test: A given user should require a start date if an end date is present. 
------------------------------------------------------------------------------------
  [1m[35mUser Load (0.4ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.2ms)[0m  ROLLBACK
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
--------------------------------------------------------------------------------
UserTest: test: A given user should require an end date on or after start date. 
--------------------------------------------------------------------------------
  [1m[35mUser Load (0.5ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.2ms)[0m  ROLLBACK
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
---------------------------------------------------------------------
UserTest: test: User should allow first_name to be set to "Charles". 
---------------------------------------------------------------------
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.3ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35m (0.2ms)[0m  ROLLBACK
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
--------------------------------------------------------------------------
UserTest: test: User should ensure first_name has a length of at least 2. 
--------------------------------------------------------------------------
  [1m[35mUser Exists (0.3ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.6ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.2ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.2ms)[0m  BEGIN
---------------------------------------------------------------------------
UserTest: test: User should ensure first_name has a length of at most 254. 
---------------------------------------------------------------------------
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.3ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.3ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.3ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.3ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35m (0.1ms)[0m  ROLLBACK
  [1m[36m (0.1ms)[0m  [1mBEGIN[0m
-------------------------------------------------------------------------
UserTest: test: User should ensure last_name has a length of at least 2. 
-------------------------------------------------------------------------
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.3ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.3ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.2ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.1ms)[0m  BEGIN
--------------------------------------------------------------------------
UserTest: test: User should ensure last_name has a length of at most 254. 
--------------------------------------------------------------------------
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.3ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.3ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.5ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35m (0.2ms)[0m  ROLLBACK
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
-------------------------------------------------------------------------
UserTest: test: User should not allow first_name to be set to "charles". 
-------------------------------------------------------------------------
  [1m[35mUser Exists (0.5ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35m (0.2ms)[0m  ROLLBACK
  [1m[36m (0.1ms)[0m  [1mBEGIN[0m
--------------------------------------------------------------------------------
UserTest: test: User should require case sensitive unique value for login_name. 
--------------------------------------------------------------------------------
  [1m[35mUser Load (0.5ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'orstedma' LIMIT 1[0m
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'orstedma' LIMIT 1
  [1m[36m (0.2ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.1ms)[0m  BEGIN
----------------------------------------------------------
UserTest: test: User should require first_name to be set. 
----------------------------------------------------------
  [1m[36mUser Exists (0.5ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.2ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.2ms)[0m  BEGIN
---------------------------------------------------------
UserTest: test: User should require last_name to be set. 
---------------------------------------------------------
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (2.4ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.2ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.2ms)[0m  BEGIN
----------------------------------------------------------
UserTest: test: User should require login_name to be set. 
----------------------------------------------------------
  [1m[36mUser Exists (0.5ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.3ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.2ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.2ms)[0m  BEGIN
----------------------------------------------------------
UserTest: test: User should require start_date to be set. 
----------------------------------------------------------
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.2ms)[0m  [1mROLLBACK[0m
  [1m[36m (331.8ms)[0m  [1mDROP DATABASE IF EXISTS "ritrack_test"[0m
  [1m[35m (741.1ms)[0m  CREATE DATABASE "ritrack_test" ENCODING = 'unicode'
  [1m[36mSQL (1.6ms)[0m  [1mCREATE EXTENSION IF NOT EXISTS "plpgsql"[0m
  [1m[35m (101.1ms)[0m  CREATE TABLE "users" ("id" serial primary key, "first_name" character varying(255), "last_name" character varying(255), "nick_name" character varying(255), "login_name" character varying(255), "notes" text, "created_at" timestamp, "updated_at" timestamp, "start_date" date, "end_date" date) 
  [1m[36m (4.5ms)[0m  [1mCREATE TABLE "schema_migrations" ("version" character varying(255) NOT NULL) [0m
  [1m[35m (53.7ms)[0m  CREATE UNIQUE INDEX "unique_schema_migrations" ON "schema_migrations" ("version")
  [1m[36m (0.8ms)[0m  [1mSELECT version FROM "schema_migrations"[0m
  [1m[35m (6.4ms)[0m  INSERT INTO "schema_migrations" (version) VALUES ('20130811212425')
  [1m[36m (7.9ms)[0m  [1mINSERT INTO "schema_migrations" (version) VALUES ('20130811195620')[0m
  [1m[35m (8.0ms)[0m  INSERT INTO "schema_migrations" (version) VALUES ('20130811193133')
  [1m[36m (8.0ms)[0m  [1mINSERT INTO "schema_migrations" (version) VALUES ('20130811195557')[0m
  [1m[35mActiveRecord::SchemaMigration Load (0.5ms)[0m  SELECT "schema_migrations".* FROM "schema_migrations"
  [1m[36mActiveRecord::SchemaMigration Load (0.4ms)[0m  [1mSELECT "schema_migrations".* FROM "schema_migrations"[0m
  [1m[35m (0.6ms)[0m  ALTER TABLE "users" DISABLE TRIGGER ALL;ALTER TABLE "schema_migrations" DISABLE TRIGGER ALL
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
  [1m[35mFixture Delete (0.5ms)[0m  DELETE FROM "users"
  [1m[36mFixture Insert (0.6ms)[0m  [1mINSERT INTO "users" ("id", "first_name", "last_name", "nick_name", "login_name", "start_date", "end_date", "notes", "created_at", "updated_at") VALUES (1, 'Michael', 'Orsted', 'Mike', 'orstedma', '2012-02-04', NULL, 'This user lives in Chicago.', '2013-08-12 23:16:06', '2013-08-12 23:16:06')[0m
  [1m[35mFixture Insert (0.3ms)[0m  INSERT INTO "users" ("id", "first_name", "last_name", "nick_name", "login_name", "start_date", "end_date", "notes", "created_at", "updated_at") VALUES (2, 'Frederick', 'Free-Loader', 'Frederick', 'freelofw', '2012-03-04', NULL, 'This user is completely useless', '2013-08-12 23:16:06', '2013-08-12 23:16:06')
  [1m[36m (2.9ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.3ms)[0m  ALTER TABLE "users" ENABLE TRIGGER ALL;ALTER TABLE "schema_migrations" ENABLE TRIGGER ALL
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
--------------------------------------------------------
UserTest: test: A given user should be valid initially. 
--------------------------------------------------------
  [1m[35mUser Load (0.8ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (1.2ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.2ms)[0m  ROLLBACK
  [1m[36m (0.1ms)[0m  [1mBEGIN[0m
------------------------------------------------------------------------------------
UserTest: test: A given user should require a start date if an end date is present. 
------------------------------------------------------------------------------------
  [1m[35mUser Load (0.4ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.2ms)[0m  ROLLBACK
  [1m[36m (0.1ms)[0m  [1mBEGIN[0m
--------------------------------------------------------------------------------
UserTest: test: A given user should require an end date on or after start date. 
--------------------------------------------------------------------------------
  [1m[35mUser Load (0.4ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.1ms)[0m  ROLLBACK
  [1m[36m (0.0ms)[0m  [1mBEGIN[0m
---------------------------------------------------------------------
UserTest: test: User should allow first_name to be set to "Charles". 
---------------------------------------------------------------------
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.5ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35m (0.3ms)[0m  ROLLBACK
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
--------------------------------------------------------------------------
UserTest: test: User should ensure first_name has a length of at least 2. 
--------------------------------------------------------------------------
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.6ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.2ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.2ms)[0m  BEGIN
---------------------------------------------------------------------------
UserTest: test: User should ensure first_name has a length of at most 254. 
---------------------------------------------------------------------------
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.3ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35m (0.2ms)[0m  ROLLBACK
  [1m[36m (0.1ms)[0m  [1mBEGIN[0m
-------------------------------------------------------------------------
UserTest: test: User should ensure last_name has a length of at least 2. 
-------------------------------------------------------------------------
  [1m[35mUser Exists (0.5ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.5ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.2ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.2ms)[0m  BEGIN
--------------------------------------------------------------------------
UserTest: test: User should ensure last_name has a length of at most 254. 
--------------------------------------------------------------------------
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35m (0.2ms)[0m  ROLLBACK
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
-------------------------------------------------------------------------
UserTest: test: User should not allow first_name to be set to "charles". 
-------------------------------------------------------------------------
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35m (0.2ms)[0m  ROLLBACK
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
--------------------------------------------------------------------------------
UserTest: test: User should require case sensitive unique value for login_name. 
--------------------------------------------------------------------------------
  [1m[35mUser Load (0.5ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'orstedma' LIMIT 1[0m
  [1m[35mUser Exists (0.3ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'orstedma' LIMIT 1
  [1m[36m (0.2ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.1ms)[0m  BEGIN
----------------------------------------------------------
UserTest: test: User should require first_name to be set. 
----------------------------------------------------------
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.3ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.2ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.1ms)[0m  BEGIN
---------------------------------------------------------
UserTest: test: User should require last_name to be set. 
---------------------------------------------------------
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (2.3ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.2ms)[0m  BEGIN
----------------------------------------------------------
UserTest: test: User should require login_name to be set. 
----------------------------------------------------------
  [1m[36mUser Exists (0.5ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.2ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.2ms)[0m  BEGIN
----------------------------------------------------------
UserTest: test: User should require start_date to be set. 
----------------------------------------------------------
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.5ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.2ms)[0m  [1mROLLBACK[0m
  [1m[36m (363.0ms)[0m  [1mDROP DATABASE IF EXISTS "ritrack_test"[0m
  [1m[35m (1303.8ms)[0m  CREATE DATABASE "ritrack_test" ENCODING = 'unicode'
  [1m[36mSQL (1.8ms)[0m  [1mCREATE EXTENSION IF NOT EXISTS "plpgsql"[0m
  [1m[35m (105.7ms)[0m  CREATE TABLE "users" ("id" serial primary key, "first_name" character varying(255), "last_name" character varying(255), "nick_name" character varying(255), "login_name" character varying(255), "notes" text, "created_at" timestamp, "updated_at" timestamp, "start_date" date, "end_date" date) 
  [1m[36m (4.4ms)[0m  [1mCREATE TABLE "schema_migrations" ("version" character varying(255) NOT NULL) [0m
  [1m[35m (55.8ms)[0m  CREATE UNIQUE INDEX "unique_schema_migrations" ON "schema_migrations" ("version")
  [1m[36m (0.8ms)[0m  [1mSELECT version FROM "schema_migrations"[0m
  [1m[35m (6.3ms)[0m  INSERT INTO "schema_migrations" (version) VALUES ('20130811212425')
  [1m[36m (8.0ms)[0m  [1mINSERT INTO "schema_migrations" (version) VALUES ('20130811195620')[0m
  [1m[35m (8.0ms)[0m  INSERT INTO "schema_migrations" (version) VALUES ('20130811193133')
  [1m[36m (8.0ms)[0m  [1mINSERT INTO "schema_migrations" (version) VALUES ('20130811195557')[0m
  [1m[35mActiveRecord::SchemaMigration Load (0.5ms)[0m  SELECT "schema_migrations".* FROM "schema_migrations"
  [1m[36mActiveRecord::SchemaMigration Load (0.4ms)[0m  [1mSELECT "schema_migrations".* FROM "schema_migrations"[0m
  [1m[35m (0.3ms)[0m  ALTER TABLE "users" DISABLE TRIGGER ALL;ALTER TABLE "schema_migrations" DISABLE TRIGGER ALL
  [1m[36m (0.1ms)[0m  [1mBEGIN[0m
  [1m[35mFixture Delete (0.5ms)[0m  DELETE FROM "users"
  [1m[36mFixture Insert (0.7ms)[0m  [1mINSERT INTO "users" ("id", "first_name", "last_name", "nick_name", "login_name", "start_date", "end_date", "notes", "created_at", "updated_at") VALUES (1, 'Michael', 'Orsted', 'Mike', 'orstedma', '2012-02-04', NULL, 'This user lives in Chicago.', '2013-08-15 01:23:37', '2013-08-15 01:23:37')[0m
  [1m[35mFixture Insert (0.4ms)[0m  INSERT INTO "users" ("id", "first_name", "last_name", "nick_name", "login_name", "start_date", "end_date", "notes", "created_at", "updated_at") VALUES (2, 'Frederick', 'Free-Loader', 'Frederick', 'freelofw', '2012-03-04', NULL, 'This user is completely useless', '2013-08-15 01:23:37', '2013-08-15 01:23:37')
  [1m[36m (16.0ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.4ms)[0m  ALTER TABLE "users" ENABLE TRIGGER ALL;ALTER TABLE "schema_migrations" ENABLE TRIGGER ALL
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
--------------------------------------------------------
UserTest: test: A given user should be valid initially. 
--------------------------------------------------------
  [1m[35mUser Load (0.9ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (1.2ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.3ms)[0m  ROLLBACK
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
------------------------------------------------------------------------------------
UserTest: test: A given user should require a start date if an end date is present. 
------------------------------------------------------------------------------------
  [1m[35mUser Load (0.5ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.2ms)[0m  ROLLBACK
  [1m[36m (0.1ms)[0m  [1mBEGIN[0m
--------------------------------------------------------------------------------
UserTest: test: A given user should require an end date on or after start date. 
--------------------------------------------------------------------------------
  [1m[35mUser Load (0.5ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.1ms)[0m  ROLLBACK
  [1m[36m (0.1ms)[0m  [1mBEGIN[0m
---------------------------------------------------------------------
UserTest: test: User should allow first_name to be set to "Charles". 
---------------------------------------------------------------------
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35m (0.2ms)[0m  ROLLBACK
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
--------------------------------------------------------------------------
UserTest: test: User should ensure first_name has a length of at least 2. 
--------------------------------------------------------------------------
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.6ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.3ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.3ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.1ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.1ms)[0m  BEGIN
---------------------------------------------------------------------------
UserTest: test: User should ensure first_name has a length of at most 254. 
---------------------------------------------------------------------------
  [1m[36mUser Exists (0.3ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.3ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.3ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.3ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.3ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35m (0.2ms)[0m  ROLLBACK
  [1m[36m (0.1ms)[0m  [1mBEGIN[0m
-------------------------------------------------------------------------
UserTest: test: User should ensure last_name has a length of at least 2. 
-------------------------------------------------------------------------
  [1m[35mUser Exists (0.3ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.3ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.3ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.2ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.2ms)[0m  BEGIN
--------------------------------------------------------------------------
UserTest: test: User should ensure last_name has a length of at most 254. 
--------------------------------------------------------------------------
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35m (0.2ms)[0m  ROLLBACK
  [1m[36m (0.1ms)[0m  [1mBEGIN[0m
-------------------------------------------------------------------------
UserTest: test: User should not allow first_name to be set to "charles". 
-------------------------------------------------------------------------
  [1m[35mUser Exists (0.3ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.3ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35m (0.3ms)[0m  ROLLBACK
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
--------------------------------------------------------------------------------
UserTest: test: User should require case sensitive unique value for login_name. 
--------------------------------------------------------------------------------
  [1m[35mUser Load (0.6ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (0.5ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'orstedma' LIMIT 1[0m
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'orstedma' LIMIT 1
  [1m[36m (0.2ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.2ms)[0m  BEGIN
----------------------------------------------------------
UserTest: test: User should require first_name to be set. 
----------------------------------------------------------
  [1m[36mUser Exists (0.5ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.2ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.2ms)[0m  BEGIN
---------------------------------------------------------
UserTest: test: User should require last_name to be set. 
---------------------------------------------------------
  [1m[36mUser Exists (0.5ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (2.3ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.2ms)[0m  BEGIN
----------------------------------------------------------
UserTest: test: User should require login_name to be set. 
----------------------------------------------------------
  [1m[36mUser Exists (0.5ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.2ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.2ms)[0m  BEGIN
----------------------------------------------------------
UserTest: test: User should require start_date to be set. 
----------------------------------------------------------
  [1m[36mUser Exists (0.5ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.2ms)[0m  [1mROLLBACK[0m
  [1m[36m (338.6ms)[0m  [1mDROP DATABASE IF EXISTS "ritrack_test"[0m
  [1m[35m (1443.9ms)[0m  CREATE DATABASE "ritrack_test" ENCODING = 'unicode'
  [1m[36mSQL (1.9ms)[0m  [1mCREATE EXTENSION IF NOT EXISTS "plpgsql"[0m
  [1m[35m (106.0ms)[0m  CREATE TABLE "users" ("id" serial primary key, "first_name" character varying(255), "last_name" character varying(255), "nick_name" character varying(255), "login_name" character varying(255), "notes" text, "created_at" timestamp, "updated_at" timestamp, "start_date" date, "end_date" date) 
  [1m[36m (3.9ms)[0m  [1mCREATE TABLE "schema_migrations" ("version" character varying(255) NOT NULL) [0m
  [1m[35m (62.0ms)[0m  CREATE UNIQUE INDEX "unique_schema_migrations" ON "schema_migrations" ("version")
  [1m[36m (0.8ms)[0m  [1mSELECT version FROM "schema_migrations"[0m
  [1m[35m (20.9ms)[0m  INSERT INTO "schema_migrations" (version) VALUES ('20130811212425')
  [1m[36m (7.9ms)[0m  [1mINSERT INTO "schema_migrations" (version) VALUES ('20130811195620')[0m
  [1m[35m (8.0ms)[0m  INSERT INTO "schema_migrations" (version) VALUES ('20130811193133')
  [1m[36m (7.9ms)[0m  [1mINSERT INTO "schema_migrations" (version) VALUES ('20130811195557')[0m
  [1m[35mActiveRecord::SchemaMigration Load (0.5ms)[0m  SELECT "schema_migrations".* FROM "schema_migrations"
  [1m[36mActiveRecord::SchemaMigration Load (0.4ms)[0m  [1mSELECT "schema_migrations".* FROM "schema_migrations"[0m
  [1m[35m (0.6ms)[0m  ALTER TABLE "users" DISABLE TRIGGER ALL;ALTER TABLE "schema_migrations" DISABLE TRIGGER ALL
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
  [1m[35mFixture Delete (0.6ms)[0m  DELETE FROM "users"
  [1m[36mFixture Insert (0.9ms)[0m  [1mINSERT INTO "users" ("id", "first_name", "last_name", "nick_name", "login_name", "start_date", "end_date", "notes", "created_at", "updated_at") VALUES (1, 'Michael', 'Orsted', 'Mike', 'orstedma', '2012-02-04', NULL, 'This user lives in Chicago.', '2013-08-15 23:55:38', '2013-08-15 23:55:38')[0m
  [1m[35mFixture Insert (0.4ms)[0m  INSERT INTO "users" ("id", "first_name", "last_name", "nick_name", "login_name", "start_date", "end_date", "notes", "created_at", "updated_at") VALUES (2, 'Frederick', 'Free-Loader', 'Frederick', 'freelofw', '2012-03-04', NULL, 'This user is completely useless', '2013-08-15 23:55:38', '2013-08-15 23:55:38')
  [1m[36m (16.6ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.3ms)[0m  ALTER TABLE "users" ENABLE TRIGGER ALL;ALTER TABLE "schema_migrations" ENABLE TRIGGER ALL
  [1m[36m (0.1ms)[0m  [1mBEGIN[0m
--------------------------------------------------------
UserTest: test: A given user should be valid initially. 
--------------------------------------------------------
  [1m[35mUser Load (0.9ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (0.6ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.2ms)[0m  ROLLBACK
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
------------------------------------------------------------------------------------
UserTest: test: A given user should require a start date if an end date is present. 
------------------------------------------------------------------------------------
  [1m[35mUser Load (0.6ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.3ms)[0m  ROLLBACK
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
--------------------------------------------------------------------------------
UserTest: test: A given user should require an end date on or after start date. 
--------------------------------------------------------------------------------
  [1m[35mUser Load (0.6ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.2ms)[0m  ROLLBACK
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
---------------------------------------------------------------------
UserTest: test: User should allow first_name to be set to "Charles". 
---------------------------------------------------------------------
  [1m[35mUser Exists (0.3ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.3ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35m (0.1ms)[0m  ROLLBACK
  [1m[36m (0.1ms)[0m  [1mBEGIN[0m
--------------------------------------------------------------------------
UserTest: test: User should ensure first_name has a length of at least 2. 
--------------------------------------------------------------------------
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.5ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.5ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
---------------------------------------------------------------------------
UserTest: test: User should ensure first_name has a length of at most 254. 
---------------------------------------------------------------------------
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35m (0.3ms)[0m  ROLLBACK
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
-------------------------------------------------------------------------
UserTest: test: User should ensure last_name has a length of at least 2. 
-------------------------------------------------------------------------
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.3ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.3ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.1ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.1ms)[0m  BEGIN
--------------------------------------------------------------------------
UserTest: test: User should ensure last_name has a length of at most 254. 
--------------------------------------------------------------------------
  [1m[36mUser Exists (0.3ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.3ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.3ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.3ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.3ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35m (0.1ms)[0m  ROLLBACK
  [1m[36m (0.1ms)[0m  [1mBEGIN[0m
-------------------------------------------------------------------------
UserTest: test: User should not allow first_name to be set to "charles". 
-------------------------------------------------------------------------
  [1m[35mUser Exists (0.3ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.3ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35m (0.1ms)[0m  ROLLBACK
  [1m[36m (0.1ms)[0m  [1mBEGIN[0m
--------------------------------------------------------------------------------
UserTest: test: User should require case sensitive unique value for login_name. 
--------------------------------------------------------------------------------
  [1m[35mUser Load (0.4ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (0.3ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'orstedma' LIMIT 1[0m
  [1m[35mUser Exists (0.3ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'orstedma' LIMIT 1
  [1m[36m (0.2ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.1ms)[0m  BEGIN
----------------------------------------------------------
UserTest: test: User should require first_name to be set. 
----------------------------------------------------------
  [1m[36mUser Exists (0.3ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.3ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.1ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.1ms)[0m  BEGIN
---------------------------------------------------------
UserTest: test: User should require last_name to be set. 
---------------------------------------------------------
  [1m[36mUser Exists (0.3ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (2.3ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.2ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.2ms)[0m  BEGIN
----------------------------------------------------------
UserTest: test: User should require login_name to be set. 
----------------------------------------------------------
  [1m[36mUser Exists (0.5ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.2ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.2ms)[0m  BEGIN
----------------------------------------------------------
UserTest: test: User should require start_date to be set. 
----------------------------------------------------------
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.3ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.1ms)[0m  [1mROLLBACK[0m
  [1m[36m (226.2ms)[0m  [1mDROP DATABASE IF EXISTS "ritrack_test"[0m
  [1m[35m (774.4ms)[0m  CREATE DATABASE "ritrack_test" ENCODING = 'unicode'
  [1m[36mSQL (1.5ms)[0m  [1mCREATE EXTENSION IF NOT EXISTS "plpgsql"[0m
  [1m[35m (101.1ms)[0m  CREATE TABLE "users" ("id" serial primary key, "first_name" character varying(255), "last_name" character varying(255), "nick_name" character varying(255), "login_name" character varying(255), "notes" text, "created_at" timestamp, "updated_at" timestamp, "start_date" date, "end_date" date) 
  [1m[36m (4.5ms)[0m  [1mCREATE TABLE "schema_migrations" ("version" character varying(255) NOT NULL) [0m
  [1m[35m (61.8ms)[0m  CREATE UNIQUE INDEX "unique_schema_migrations" ON "schema_migrations" ("version")
  [1m[36m (0.6ms)[0m  [1mSELECT version FROM "schema_migrations"[0m
  [1m[35m (6.9ms)[0m  INSERT INTO "schema_migrations" (version) VALUES ('20130811212425')
  [1m[36m (8.0ms)[0m  [1mINSERT INTO "schema_migrations" (version) VALUES ('20130811195620')[0m
  [1m[35m (8.0ms)[0m  INSERT INTO "schema_migrations" (version) VALUES ('20130811193133')
  [1m[36m (8.0ms)[0m  [1mINSERT INTO "schema_migrations" (version) VALUES ('20130811195557')[0m
  [1m[35mActiveRecord::SchemaMigration Load (0.6ms)[0m  SELECT "schema_migrations".* FROM "schema_migrations"
  [1m[36mActiveRecord::SchemaMigration Load (0.4ms)[0m  [1mSELECT "schema_migrations".* FROM "schema_migrations"[0m
  [1m[35m (0.6ms)[0m  ALTER TABLE "users" DISABLE TRIGGER ALL;ALTER TABLE "schema_migrations" DISABLE TRIGGER ALL
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
  [1m[35mFixture Delete (0.6ms)[0m  DELETE FROM "users"
  [1m[36mFixture Insert (0.7ms)[0m  [1mINSERT INTO "users" ("id", "first_name", "last_name", "nick_name", "login_name", "start_date", "end_date", "notes", "created_at", "updated_at") VALUES (1, 'Michael', 'Orsted', 'Mike', 'orstedma', '2012-02-04', NULL, 'This user lives in Chicago.', '2013-08-15 23:55:47', '2013-08-15 23:55:47')[0m
  [1m[35mFixture Insert (0.5ms)[0m  INSERT INTO "users" ("id", "first_name", "last_name", "nick_name", "login_name", "start_date", "end_date", "notes", "created_at", "updated_at") VALUES (2, 'Frederick', 'Free-Loader', 'Frederick', 'freelofw', '2012-03-04', NULL, 'This user is completely useless', '2013-08-15 23:55:47', '2013-08-15 23:55:47')
  [1m[36m (6.4ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.3ms)[0m  ALTER TABLE "users" ENABLE TRIGGER ALL;ALTER TABLE "schema_migrations" ENABLE TRIGGER ALL
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
--------------------------------------------------------
UserTest: test: A given user should be valid initially. 
--------------------------------------------------------
  [1m[35mUser Load (0.9ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (1.2ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.3ms)[0m  ROLLBACK
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
------------------------------------------------------------------------------------
UserTest: test: A given user should require a start date if an end date is present. 
------------------------------------------------------------------------------------
  [1m[35mUser Load (0.5ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.1ms)[0m  ROLLBACK
  [1m[36m (0.1ms)[0m  [1mBEGIN[0m
--------------------------------------------------------------------------------
UserTest: test: A given user should require an end date on or after start date. 
--------------------------------------------------------------------------------
  [1m[35mUser Load (0.4ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.1ms)[0m  ROLLBACK
  [1m[36m (0.1ms)[0m  [1mBEGIN[0m
---------------------------------------------------------------------
UserTest: test: User should allow first_name to be set to "Charles". 
---------------------------------------------------------------------
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.2ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35m (0.2ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
--------------------------------------------------------------------------
UserTest: test: User should ensure first_name has a length of at least 2. 
--------------------------------------------------------------------------
  [1m[35mUser Exists (0.5ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.3ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.3ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.3ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.2ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.1ms)[0m  BEGIN
---------------------------------------------------------------------------
UserTest: test: User should ensure first_name has a length of at most 254. 
---------------------------------------------------------------------------
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.2ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.2ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.2ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.2ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35m (0.1ms)[0m  ROLLBACK
  [1m[36m (0.1ms)[0m  [1mBEGIN[0m
-------------------------------------------------------------------------
UserTest: test: User should ensure last_name has a length of at least 2. 
-------------------------------------------------------------------------
  [1m[35mUser Exists (0.3ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.2ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.2ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.3ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.3ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.1ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.1ms)[0m  BEGIN
--------------------------------------------------------------------------
UserTest: test: User should ensure last_name has a length of at most 254. 
--------------------------------------------------------------------------
  [1m[36mUser Exists (0.3ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.3ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.3ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35m (0.2ms)[0m  ROLLBACK
  [1m[36m (0.1ms)[0m  [1mBEGIN[0m
-------------------------------------------------------------------------
UserTest: test: User should not allow first_name to be set to "charles". 
-------------------------------------------------------------------------
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.3ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35m (0.1ms)[0m  ROLLBACK
  [1m[36m (0.1ms)[0m  [1mBEGIN[0m
--------------------------------------------------------------------------------
UserTest: test: User should require case sensitive unique value for login_name. 
--------------------------------------------------------------------------------
  [1m[35mUser Load (0.4ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'orstedma' LIMIT 1[0m
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'orstedma' LIMIT 1
  [1m[36m (0.2ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.2ms)[0m  BEGIN
----------------------------------------------------------
UserTest: test: User should require first_name to be set. 
----------------------------------------------------------
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.5ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.2ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.2ms)[0m  BEGIN
---------------------------------------------------------
UserTest: test: User should require last_name to be set. 
---------------------------------------------------------
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.2ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.1ms)[0m  BEGIN
----------------------------------------------------------
UserTest: test: User should require login_name to be set. 
----------------------------------------------------------
  [1m[36mUser Exists (0.3ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (2.5ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.4ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
----------------------------------------------------------
UserTest: test: User should require start_date to be set. 
----------------------------------------------------------
  [1m[36mUser Exists (0.6ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.2ms)[0m  [1mROLLBACK[0m
  [1m[36m (219.5ms)[0m  [1mDROP DATABASE IF EXISTS "ritrack_test"[0m
  [1m[35m (782.7ms)[0m  CREATE DATABASE "ritrack_test" ENCODING = 'unicode'
  [1m[36mSQL (47.5ms)[0m  [1mCREATE EXTENSION IF NOT EXISTS "plpgsql"[0m
  [1m[35m (114.8ms)[0m  CREATE TABLE "users" ("id" serial primary key, "first_name" character varying(255), "last_name" character varying(255), "nick_name" character varying(255), "login_name" character varying(255), "notes" text, "created_at" timestamp, "updated_at" timestamp, "start_date" date, "end_date" date) 
  [1m[36m (10.8ms)[0m  [1mCREATE TABLE "schema_migrations" ("version" character varying(255) NOT NULL) [0m
  [1m[35m (50.4ms)[0m  CREATE UNIQUE INDEX "unique_schema_migrations" ON "schema_migrations" ("version")
  [1m[36m (1.0ms)[0m  [1mSELECT version FROM "schema_migrations"[0m
  [1m[35m (6.0ms)[0m  INSERT INTO "schema_migrations" (version) VALUES ('20130811212425')
  [1m[36m (7.9ms)[0m  [1mINSERT INTO "schema_migrations" (version) VALUES ('20130811195620')[0m
  [1m[35m (7.9ms)[0m  INSERT INTO "schema_migrations" (version) VALUES ('20130811193133')
  [1m[36m (8.0ms)[0m  [1mINSERT INTO "schema_migrations" (version) VALUES ('20130811195557')[0m
  [1m[35mActiveRecord::SchemaMigration Load (1.1ms)[0m  SELECT "schema_migrations".* FROM "schema_migrations"
  [1m[36mActiveRecord::SchemaMigration Load (0.8ms)[0m  [1mSELECT "schema_migrations".* FROM "schema_migrations"[0m
  [1m[35m (1.1ms)[0m  ALTER TABLE "users" DISABLE TRIGGER ALL;ALTER TABLE "schema_migrations" DISABLE TRIGGER ALL
  [1m[36m (0.5ms)[0m  [1mBEGIN[0m
  [1m[35mFixture Delete (1.1ms)[0m  DELETE FROM "users"
  [1m[36mFixture Insert (1.4ms)[0m  [1mINSERT INTO "users" ("id", "first_name", "last_name", "nick_name", "login_name", "start_date", "end_date", "notes", "created_at", "updated_at") VALUES (1, 'Michael', 'Orsted', 'Mike', 'orstedma', '2012-02-04', NULL, 'This user lives in Chicago.', '2013-08-16 12:27:56', '2013-08-16 12:27:56')[0m
  [1m[35mFixture Insert (0.9ms)[0m  INSERT INTO "users" ("id", "first_name", "last_name", "nick_name", "login_name", "start_date", "end_date", "notes", "created_at", "updated_at") VALUES (2, 'Frederick', 'Free-Loader', 'Frederick', 'freelofw', '2012-03-04', NULL, 'This user is completely useless', '2013-08-16 12:27:56', '2013-08-16 12:27:56')
  [1m[36m (2.8ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.7ms)[0m  ALTER TABLE "users" ENABLE TRIGGER ALL;ALTER TABLE "schema_migrations" ENABLE TRIGGER ALL
  [1m[36m (0.5ms)[0m  [1mBEGIN[0m
--------------------------------------------------------
UserTest: test: A given user should be valid initially. 
--------------------------------------------------------
  [1m[35mUser Load (1.7ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (1.9ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.3ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
------------------------------------------------------------------------------------
UserTest: test: A given user should require a start date if an end date is present. 
------------------------------------------------------------------------------------
  [1m[35mUser Load (0.8ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (0.8ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.4ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
--------------------------------------------------------------------------------
UserTest: test: A given user should require an end date on or after start date. 
--------------------------------------------------------------------------------
  [1m[35mUser Load (0.9ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.4ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
---------------------------------------------------------------------
UserTest: test: User should allow first_name to be set to "Charles". 
---------------------------------------------------------------------
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35m (0.4ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
--------------------------------------------------------------------------
UserTest: test: User should ensure first_name has a length of at least 2. 
--------------------------------------------------------------------------
  [1m[35mUser Exists (0.8ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.6ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.8ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.4ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
---------------------------------------------------------------------------
UserTest: test: User should ensure first_name has a length of at most 254. 
---------------------------------------------------------------------------
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.6ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.8ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.5ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35m (0.3ms)[0m  ROLLBACK
  [1m[36m (0.4ms)[0m  [1mBEGIN[0m
-------------------------------------------------------------------------
UserTest: test: User should ensure last_name has a length of at least 2. 
-------------------------------------------------------------------------
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.6ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
--------------------------------------------------------------------------
UserTest: test: User should ensure last_name has a length of at most 254. 
--------------------------------------------------------------------------
  [1m[36mUser Exists (0.6ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.5ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.9ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35m (0.5ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
-------------------------------------------------------------------------
UserTest: test: User should not allow first_name to be set to "charles". 
-------------------------------------------------------------------------
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35m (0.3ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
--------------------------------------------------------------------------------
UserTest: test: User should require case sensitive unique value for login_name. 
--------------------------------------------------------------------------------
  [1m[35mUser Load (0.8ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (0.8ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'orstedma' LIMIT 1[0m
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'orstedma' LIMIT 1
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
----------------------------------------------------------
UserTest: test: User should require first_name to be set. 
----------------------------------------------------------
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.4ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.4ms)[0m  BEGIN
---------------------------------------------------------
UserTest: test: User should require last_name to be set. 
---------------------------------------------------------
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.4ms)[0m  BEGIN
----------------------------------------------------------
UserTest: test: User should require login_name to be set. 
----------------------------------------------------------
  [1m[36mUser Exists (0.6ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
----------------------------------------------------------
UserTest: test: User should require start_date to be set. 
----------------------------------------------------------
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.5ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[36m (224.4ms)[0m  [1mDROP DATABASE IF EXISTS "ritrack_test"[0m
  [1m[35m (674.2ms)[0m  CREATE DATABASE "ritrack_test" ENCODING = 'unicode'
  [1m[36mSQL (45.0ms)[0m  [1mCREATE EXTENSION IF NOT EXISTS "plpgsql"[0m
  [1m[35m (104.4ms)[0m  CREATE TABLE "users" ("id" serial primary key, "first_name" character varying(255), "last_name" character varying(255), "nick_name" character varying(255), "login_name" character varying(255), "notes" text, "created_at" timestamp, "updated_at" timestamp, "start_date" date, "end_date" date) 
  [1m[36m (10.7ms)[0m  [1mCREATE TABLE "schema_migrations" ("version" character varying(255) NOT NULL) [0m
  [1m[35m (50.5ms)[0m  CREATE UNIQUE INDEX "unique_schema_migrations" ON "schema_migrations" ("version")
  [1m[36m (1.0ms)[0m  [1mSELECT version FROM "schema_migrations"[0m
  [1m[35m (5.9ms)[0m  INSERT INTO "schema_migrations" (version) VALUES ('20130811212425')
  [1m[36m (7.9ms)[0m  [1mINSERT INTO "schema_migrations" (version) VALUES ('20130811195620')[0m
  [1m[35m (7.9ms)[0m  INSERT INTO "schema_migrations" (version) VALUES ('20130811193133')
  [1m[36m (8.0ms)[0m  [1mINSERT INTO "schema_migrations" (version) VALUES ('20130811195557')[0m
  [1m[35mActiveRecord::SchemaMigration Load (1.0ms)[0m  SELECT "schema_migrations".* FROM "schema_migrations"
  [1m[36mActiveRecord::SchemaMigration Load (0.6ms)[0m  [1mSELECT "schema_migrations".* FROM "schema_migrations"[0m
  [1m[35m (1.0ms)[0m  ALTER TABLE "users" DISABLE TRIGGER ALL;ALTER TABLE "schema_migrations" DISABLE TRIGGER ALL
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
  [1m[35mFixture Delete (0.9ms)[0m  DELETE FROM "users"
  [1m[36mFixture Insert (1.3ms)[0m  [1mINSERT INTO "users" ("id", "first_name", "last_name", "nick_name", "login_name", "start_date", "end_date", "notes", "created_at", "updated_at") VALUES (1, 'Michael', 'Orsted', 'Mike', 'orstedma', '2012-02-04', NULL, 'This user lives in Chicago.', '2013-08-16 12:29:51', '2013-08-16 12:29:51')[0m
  [1m[35mFixture Insert (0.6ms)[0m  INSERT INTO "users" ("id", "first_name", "last_name", "nick_name", "login_name", "start_date", "end_date", "notes", "created_at", "updated_at") VALUES (2, 'Frederick', 'Free-Loader', 'Frederick', 'freelofw', '2012-03-04', NULL, 'This user is completely useless', '2013-08-16 12:29:51', '2013-08-16 12:29:51')
  [1m[36m (9.8ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.6ms)[0m  ALTER TABLE "users" ENABLE TRIGGER ALL;ALTER TABLE "schema_migrations" ENABLE TRIGGER ALL
  [1m[36m (0.5ms)[0m  [1mBEGIN[0m
--------------------------------------------------------
UserTest: test: A given user should be valid initially. 
--------------------------------------------------------
  [1m[35mUser Load (1.8ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (1.9ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.3ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
------------------------------------------------------------------------------------
UserTest: test: A given user should require a start date if an end date is present. 
------------------------------------------------------------------------------------
  [1m[35mUser Load (0.8ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (1.1ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.4ms)[0m  ROLLBACK
  [1m[36m (0.4ms)[0m  [1mBEGIN[0m
--------------------------------------------------------------------------------
UserTest: test: A given user should require an end date on or after start date. 
--------------------------------------------------------------------------------
  [1m[35mUser Load (0.8ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (0.8ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.3ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
---------------------------------------------------------------------
UserTest: test: User should allow first_name to be set to "Charles". 
---------------------------------------------------------------------
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.5ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35m (0.3ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
--------------------------------------------------------------------------
UserTest: test: User should ensure first_name has a length of at least 2. 
--------------------------------------------------------------------------
  [1m[35mUser Exists (0.9ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.6ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.6ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.6ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.4ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.4ms)[0m  BEGIN
---------------------------------------------------------------------------
UserTest: test: User should ensure first_name has a length of at most 254. 
---------------------------------------------------------------------------
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.6ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.6ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35m (0.2ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
-------------------------------------------------------------------------
UserTest: test: User should ensure last_name has a length of at least 2. 
-------------------------------------------------------------------------
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.6ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.6ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
-------------------------------------------------------------------------
UserTest: test: User should ensure last_name has a length of at least 6. 
-------------------------------------------------------------------------
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.5ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35m (0.4ms)[0m  ROLLBACK
  [1m[36m (0.4ms)[0m  [1mBEGIN[0m
--------------------------------------------------------------------------
UserTest: test: User should ensure last_name has a length of at most 254. 
--------------------------------------------------------------------------
  [1m[35mUser Exists (0.8ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.8ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.5ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.4ms)[0m  BEGIN
-------------------------------------------------------------------------
UserTest: test: User should not allow first_name to be set to "charles". 
-------------------------------------------------------------------------
  [1m[36mUser Exists (0.5ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.5ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.4ms)[0m  BEGIN
--------------------------------------------------------------------------------
UserTest: test: User should require case sensitive unique value for login_name. 
--------------------------------------------------------------------------------
  [1m[36mUser Load (0.7ms)[0m  [1mSELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35mUser Exists (0.5ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'orstedma' LIMIT 1
  [1m[36mUser Exists (0.6ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'orstedma' LIMIT 1[0m
  [1m[35m (0.3ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
----------------------------------------------------------
UserTest: test: User should require first_name to be set. 
----------------------------------------------------------
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.6ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35m (0.3ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
---------------------------------------------------------
UserTest: test: User should require last_name to be set. 
---------------------------------------------------------
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.5ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35m (0.3ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
----------------------------------------------------------
UserTest: test: User should require login_name to be set. 
----------------------------------------------------------
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.6ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35m (0.4ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
----------------------------------------------------------
UserTest: test: User should require start_date to be set. 
----------------------------------------------------------
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35m (0.4ms)[0m  ROLLBACK
  [1m[36m (224.5ms)[0m  [1mDROP DATABASE IF EXISTS "ritrack_test"[0m
  [1m[35m (707.7ms)[0m  CREATE DATABASE "ritrack_test" ENCODING = 'unicode'
  [1m[36mSQL (47.1ms)[0m  [1mCREATE EXTENSION IF NOT EXISTS "plpgsql"[0m
  [1m[35m (93.0ms)[0m  CREATE TABLE "users" ("id" serial primary key, "first_name" character varying(255), "last_name" character varying(255), "nick_name" character varying(255), "login_name" character varying(255), "notes" text, "created_at" timestamp, "updated_at" timestamp, "start_date" date, "end_date" date) 
  [1m[36m (10.8ms)[0m  [1mCREATE TABLE "schema_migrations" ("version" character varying(255) NOT NULL) [0m
  [1m[35m (50.4ms)[0m  CREATE UNIQUE INDEX "unique_schema_migrations" ON "schema_migrations" ("version")
  [1m[36m (1.0ms)[0m  [1mSELECT version FROM "schema_migrations"[0m
  [1m[35m (5.8ms)[0m  INSERT INTO "schema_migrations" (version) VALUES ('20130811212425')
  [1m[36m (7.9ms)[0m  [1mINSERT INTO "schema_migrations" (version) VALUES ('20130811195620')[0m
  [1m[35m (8.0ms)[0m  INSERT INTO "schema_migrations" (version) VALUES ('20130811193133')
  [1m[36m (7.9ms)[0m  [1mINSERT INTO "schema_migrations" (version) VALUES ('20130811195557')[0m
  [1m[35mActiveRecord::SchemaMigration Load (1.2ms)[0m  SELECT "schema_migrations".* FROM "schema_migrations"
  [1m[36mActiveRecord::SchemaMigration Load (0.7ms)[0m  [1mSELECT "schema_migrations".* FROM "schema_migrations"[0m
  [1m[35m (1.1ms)[0m  ALTER TABLE "users" DISABLE TRIGGER ALL;ALTER TABLE "schema_migrations" DISABLE TRIGGER ALL
  [1m[36m (0.6ms)[0m  [1mBEGIN[0m
  [1m[35mFixture Delete (1.2ms)[0m  DELETE FROM "users"
  [1m[36mFixture Insert (1.5ms)[0m  [1mINSERT INTO "users" ("id", "first_name", "last_name", "nick_name", "login_name", "start_date", "end_date", "notes", "created_at", "updated_at") VALUES (1, 'Michael', 'Orsted', 'Mike', 'orstedma', '2012-02-04', NULL, 'This user lives in Chicago.', '2013-08-16 12:30:45', '2013-08-16 12:30:45')[0m
  [1m[35mFixture Insert (0.8ms)[0m  INSERT INTO "users" ("id", "first_name", "last_name", "nick_name", "login_name", "start_date", "end_date", "notes", "created_at", "updated_at") VALUES (2, 'Frederick', 'Free-Loader', 'Frederick', 'freelofw', '2012-03-04', NULL, 'This user is completely useless', '2013-08-16 12:30:45', '2013-08-16 12:30:45')
  [1m[36m (5.5ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.7ms)[0m  ALTER TABLE "users" ENABLE TRIGGER ALL;ALTER TABLE "schema_migrations" ENABLE TRIGGER ALL
  [1m[36m (0.5ms)[0m  [1mBEGIN[0m
--------------------------------------------------------
UserTest: test: A given user should be valid initially. 
--------------------------------------------------------
  [1m[35mUser Load (1.9ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (2.0ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.3ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
------------------------------------------------------------------------------------
UserTest: test: A given user should require a start date if an end date is present. 
------------------------------------------------------------------------------------
  [1m[35mUser Load (0.9ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (0.8ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.5ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
--------------------------------------------------------------------------------
UserTest: test: A given user should require an end date on or after start date. 
--------------------------------------------------------------------------------
  [1m[35mUser Load (0.7ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.4ms)[0m  ROLLBACK
  [1m[36m (0.5ms)[0m  [1mBEGIN[0m
---------------------------------------------------------------------
UserTest: test: User should allow first_name to be set to "Charles". 
---------------------------------------------------------------------
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.6ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35m (0.3ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
--------------------------------------------------------------------------
UserTest: test: User should ensure first_name has a length of at least 2. 
--------------------------------------------------------------------------
  [1m[35mUser Exists (0.6ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.6ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.8ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.5ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.2ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.2ms)[0m  BEGIN
---------------------------------------------------------------------------
UserTest: test: User should ensure first_name has a length of at most 254. 
---------------------------------------------------------------------------
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.5ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.6ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35m (0.5ms)[0m  ROLLBACK
  [1m[36m (0.4ms)[0m  [1mBEGIN[0m
-------------------------------------------------------------------------
UserTest: test: User should ensure last_name has a length of at least 2. 
-------------------------------------------------------------------------
  [1m[35mUser Exists (0.9ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.8ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.6ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.6ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.4ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.4ms)[0m  BEGIN
--------------------------------------------------------------------------
UserTest: test: User should ensure last_name has a length of at most 254. 
--------------------------------------------------------------------------
  [1m[36mUser Exists (0.6ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.6ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.8ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.6ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35m (0.6ms)[0m  ROLLBACK
  [1m[36m (0.4ms)[0m  [1mBEGIN[0m
--------------------------------------------------------------------------
UserTest: test: User should ensure login_name has a length of at least 6. 
--------------------------------------------------------------------------
  [1m[35mUser Exists (1.0ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxx' LIMIT 1
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxx' LIMIT 1[0m
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxx' LIMIT 1
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxx' LIMIT 1[0m
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxx' LIMIT 1
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
---------------------------------------------------------------------------
UserTest: test: User should ensure login_name has a length of at most 254. 
---------------------------------------------------------------------------
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' LIMIT 1[0m
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' LIMIT 1
  [1m[36mUser Exists (0.9ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' LIMIT 1[0m
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' LIMIT 1
  [1m[36mUser Exists (0.6ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' LIMIT 1[0m
  [1m[35m (0.3ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
-------------------------------------------------------------------------
UserTest: test: User should not allow first_name to be set to "charles". 
-------------------------------------------------------------------------
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35m (0.4ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
--------------------------------------------------------------------------------
UserTest: test: User should require case sensitive unique value for login_name. 
--------------------------------------------------------------------------------
  [1m[35mUser Load (1.0ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (0.6ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'orstedma' LIMIT 1[0m
  [1m[35mUser Exists (0.6ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'orstedma' LIMIT 1
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
----------------------------------------------------------
UserTest: test: User should require first_name to be set. 
----------------------------------------------------------
  [1m[36mUser Exists (0.5ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
---------------------------------------------------------
UserTest: test: User should require last_name to be set. 
---------------------------------------------------------
  [1m[36mUser Exists (0.5ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
----------------------------------------------------------
UserTest: test: User should require login_name to be set. 
----------------------------------------------------------
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (8.3ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.2ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
----------------------------------------------------------
UserTest: test: User should require start_date to be set. 
----------------------------------------------------------
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.4ms)[0m  [1mROLLBACK[0m
  [1m[36m (220.5ms)[0m  [1mDROP DATABASE IF EXISTS "ritrack_test"[0m
  [1m[35m (682.7ms)[0m  CREATE DATABASE "ritrack_test" ENCODING = 'unicode'
  [1m[36mSQL (47.1ms)[0m  [1mCREATE EXTENSION IF NOT EXISTS "plpgsql"[0m
  [1m[35m (117.6ms)[0m  CREATE TABLE "users" ("id" serial primary key, "first_name" character varying(255), "last_name" character varying(255), "nick_name" character varying(255), "login_name" character varying(255), "notes" text, "created_at" timestamp, "updated_at" timestamp, "start_date" date, "end_date" date) 
  [1m[36m (10.6ms)[0m  [1mCREATE TABLE "schema_migrations" ("version" character varying(255) NOT NULL) [0m
  [1m[35m (42.1ms)[0m  CREATE UNIQUE INDEX "unique_schema_migrations" ON "schema_migrations" ("version")
  [1m[36m (1.0ms)[0m  [1mSELECT version FROM "schema_migrations"[0m
  [1m[35m (5.9ms)[0m  INSERT INTO "schema_migrations" (version) VALUES ('20130811212425')
  [1m[36m (7.9ms)[0m  [1mINSERT INTO "schema_migrations" (version) VALUES ('20130811195620')[0m
  [1m[35m (8.0ms)[0m  INSERT INTO "schema_migrations" (version) VALUES ('20130811193133')
  [1m[36m (8.0ms)[0m  [1mINSERT INTO "schema_migrations" (version) VALUES ('20130811195557')[0m
  [1m[35mActiveRecord::SchemaMigration Load (0.7ms)[0m  SELECT "schema_migrations".* FROM "schema_migrations"
  [1m[36mActiveRecord::SchemaMigration Load (0.3ms)[0m  [1mSELECT "schema_migrations".* FROM "schema_migrations"[0m
  [1m[35m (0.5ms)[0m  ALTER TABLE "users" DISABLE TRIGGER ALL;ALTER TABLE "schema_migrations" DISABLE TRIGGER ALL
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
  [1m[35mFixture Delete (0.5ms)[0m  DELETE FROM "users"
  [1m[36mFixture Insert (1.3ms)[0m  [1mINSERT INTO "users" ("id", "first_name", "last_name", "nick_name", "login_name", "start_date", "end_date", "notes", "created_at", "updated_at") VALUES (1, 'Michael', 'Orsted', 'Mike', 'orstedma', '2012-02-04', NULL, 'This user lives in Chicago.', '2013-08-16 12:34:37', '2013-08-16 12:34:37')[0m
  [1m[35mFixture Insert (0.6ms)[0m  INSERT INTO "users" ("id", "first_name", "last_name", "nick_name", "login_name", "start_date", "end_date", "notes", "created_at", "updated_at") VALUES (2, 'Frederick', 'Free-Loader', 'Frederick', 'freelofw', '2012-03-04', NULL, 'This user is completely useless', '2013-08-16 12:34:37', '2013-08-16 12:34:37')
  [1m[36mFixture Insert (0.5ms)[0m  [1mINSERT INTO "users" ("id", "first_name", "last_name", "nick_name", "login_name", "start_date", "end_date", "notes", "created_at", "updated_at") VALUES (3, 'Michael', 'Winstead', 'Mike', 'winstem', '2012-02-04', '2013-08-12', 'This user lives in New York. This user is disabled in the system.', '2013-08-16 12:34:37', '2013-08-16 12:34:37')[0m
  [1m[35mFixture Insert (0.5ms)[0m  INSERT INTO "users" ("id", "first_name", "last_name", "nick_name", "login_name", "start_date", "end_date", "notes", "created_at", "updated_at") VALUES (4, 'Allison', 'Wilson', 'Alli', 'wilsona', '2012-03-04', NULL, 'Electrical engineer.', '2013-08-16 12:34:37', '2013-08-16 12:34:37')
  [1m[36m (4.0ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.7ms)[0m  ALTER TABLE "users" ENABLE TRIGGER ALL;ALTER TABLE "schema_migrations" ENABLE TRIGGER ALL
  [1m[36m (0.4ms)[0m  [1mBEGIN[0m
--------------------------------------------------------
UserTest: test: A given user should be valid initially. 
--------------------------------------------------------
  [1m[35mUser Load (1.8ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (2.0ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.3ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
------------------------------------------------------------------------------------
UserTest: test: A given user should require a start date if an end date is present. 
------------------------------------------------------------------------------------
  [1m[35mUser Load (0.8ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (0.8ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.4ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
--------------------------------------------------------------------------------
UserTest: test: A given user should require an end date on or after start date. 
--------------------------------------------------------------------------------
  [1m[35mUser Load (0.8ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (0.8ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.3ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
---------------------------------------------------------------------
UserTest: test: User should allow first_name to be set to "Charles". 
---------------------------------------------------------------------
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.6ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35m (0.3ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
--------------------------------------------------------------------------
UserTest: test: User should ensure first_name has a length of at least 2. 
--------------------------------------------------------------------------
  [1m[35mUser Exists (0.6ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.6ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.6ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.6ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.4ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
---------------------------------------------------------------------------
UserTest: test: User should ensure first_name has a length of at most 254. 
---------------------------------------------------------------------------
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.6ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35m (0.2ms)[0m  ROLLBACK
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
-------------------------------------------------------------------------
UserTest: test: User should ensure last_name has a length of at least 2. 
-------------------------------------------------------------------------
  [1m[35mUser Exists (0.5ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.5ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
--------------------------------------------------------------------------
UserTest: test: User should ensure last_name has a length of at most 254. 
--------------------------------------------------------------------------
  [1m[36mUser Exists (0.5ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.6ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.5ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.6ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35m (0.3ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
--------------------------------------------------------------------------
UserTest: test: User should ensure login_name has a length of at least 6. 
--------------------------------------------------------------------------
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxx' LIMIT 1
  [1m[36mUser Exists (0.6ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxx' LIMIT 1[0m
  [1m[35mUser Exists (0.6ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxx' LIMIT 1
  [1m[36mUser Exists (0.6ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxx' LIMIT 1[0m
  [1m[35mUser Exists (0.6ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxx' LIMIT 1
  [1m[36m (0.5ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
---------------------------------------------------------------------------
UserTest: test: User should ensure login_name has a length of at most 254. 
---------------------------------------------------------------------------
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' LIMIT 1[0m
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' LIMIT 1
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' LIMIT 1[0m
  [1m[35mUser Exists (0.8ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' LIMIT 1
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' LIMIT 1[0m
  [1m[35m (0.3ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
-------------------------------------------------------------------------
UserTest: test: User should not allow first_name to be set to "charles". 
-------------------------------------------------------------------------
  [1m[35mUser Exists (0.6ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.6ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35m (0.3ms)[0m  ROLLBACK
  [1m[36m (0.5ms)[0m  [1mBEGIN[0m
--------------------------------------------------------------------------------
UserTest: test: User should require case sensitive unique value for login_name. 
--------------------------------------------------------------------------------
  [1m[35mUser Load (0.7ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (0.8ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'orstedma' LIMIT 1[0m
  [1m[35mUser Exists (0.5ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'orstedma' LIMIT 1
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
----------------------------------------------------------
UserTest: test: User should require first_name to be set. 
----------------------------------------------------------
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.8ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.4ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
---------------------------------------------------------
UserTest: test: User should require last_name to be set. 
---------------------------------------------------------
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.6ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
----------------------------------------------------------
UserTest: test: User should require login_name to be set. 
----------------------------------------------------------
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (5.4ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
----------------------------------------------------------
UserTest: test: User should require start_date to be set. 
----------------------------------------------------------
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.6ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.4ms)[0m  [1mROLLBACK[0m
  [1m[36m (222.7ms)[0m  [1mDROP DATABASE IF EXISTS "ritrack_test"[0m
  [1m[35m (699.3ms)[0m  CREATE DATABASE "ritrack_test" ENCODING = 'unicode'
  [1m[36mSQL (47.5ms)[0m  [1mCREATE EXTENSION IF NOT EXISTS "plpgsql"[0m
  [1m[35m (99.2ms)[0m  CREATE TABLE "users" ("id" serial primary key, "first_name" character varying(255), "last_name" character varying(255), "nick_name" character varying(255), "login_name" character varying(255), "notes" text, "created_at" timestamp, "updated_at" timestamp, "start_date" date, "end_date" date) 
  [1m[36m (10.7ms)[0m  [1mCREATE TABLE "schema_migrations" ("version" character varying(255) NOT NULL) [0m
  [1m[35m (58.8ms)[0m  CREATE UNIQUE INDEX "unique_schema_migrations" ON "schema_migrations" ("version")
  [1m[36m (1.0ms)[0m  [1mSELECT version FROM "schema_migrations"[0m
  [1m[35m (5.9ms)[0m  INSERT INTO "schema_migrations" (version) VALUES ('20130811212425')
  [1m[36m (7.9ms)[0m  [1mINSERT INTO "schema_migrations" (version) VALUES ('20130811195620')[0m
  [1m[35m (7.9ms)[0m  INSERT INTO "schema_migrations" (version) VALUES ('20130811193133')
  [1m[36m (7.9ms)[0m  [1mINSERT INTO "schema_migrations" (version) VALUES ('20130811195557')[0m
  [1m[35mActiveRecord::SchemaMigration Load (1.1ms)[0m  SELECT "schema_migrations".* FROM "schema_migrations"
  [1m[36mActiveRecord::SchemaMigration Load (0.5ms)[0m  [1mSELECT "schema_migrations".* FROM "schema_migrations"[0m
  [1m[35m (1.1ms)[0m  ALTER TABLE "users" DISABLE TRIGGER ALL;ALTER TABLE "schema_migrations" DISABLE TRIGGER ALL
  [1m[36m (0.6ms)[0m  [1mBEGIN[0m
  [1m[35mFixture Delete (1.0ms)[0m  DELETE FROM "users"
  [1m[36mFixture Insert (1.4ms)[0m  [1mINSERT INTO "users" ("id", "first_name", "last_name", "nick_name", "login_name", "start_date", "end_date", "notes", "created_at", "updated_at") VALUES (1, 'Michael', 'Orsted', 'Mike', 'orstedma', '2012-02-04', NULL, 'This user lives in Chicago.', '2013-08-16 12:37:31', '2013-08-16 12:37:31')[0m
  [1m[35mFixture Insert (0.9ms)[0m  INSERT INTO "users" ("id", "first_name", "last_name", "nick_name", "login_name", "start_date", "end_date", "notes", "created_at", "updated_at") VALUES (2, 'Frederick', 'Free-Loader', 'Frederick', 'freelofw', '2012-03-04', NULL, 'This user is completely useless', '2013-08-16 12:37:31', '2013-08-16 12:37:31')
  [1m[36mFixture Insert (0.8ms)[0m  [1mINSERT INTO "users" ("id", "first_name", "last_name", "nick_name", "login_name", "start_date", "end_date", "notes", "created_at", "updated_at") VALUES (3, 'Michael', 'Winstead', 'Mike', 'winstem', '2012-02-04', '2013-08-12', 'This user lives in New York. This user is disabled in the system.', '2013-08-16 12:37:31', '2013-08-16 12:37:31')[0m
  [1m[35mFixture Insert (0.8ms)[0m  INSERT INTO "users" ("id", "first_name", "last_name", "nick_name", "login_name", "start_date", "end_date", "notes", "created_at", "updated_at") VALUES (4, 'Allison', 'Wilson', 'Alli', 'wilsona', '2012-03-04', NULL, 'Electrical engineer.', '2013-08-16 12:37:31', '2013-08-16 12:37:31')
  [1m[36m (6.0ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.7ms)[0m  ALTER TABLE "users" ENABLE TRIGGER ALL;ALTER TABLE "schema_migrations" ENABLE TRIGGER ALL
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
--------------------------------------------------------
UserTest: test: A given user should be valid initially. 
--------------------------------------------------------
  [1m[35mUser Load (1.5ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (2.0ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.2ms)[0m  ROLLBACK
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
-----------------------------------------------------------------------
UserTest: test: A given user should not be valid if first name is nil. 
-----------------------------------------------------------------------
  [1m[35mUser Load (0.5ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.2ms)[0m  ROLLBACK
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
------------------------------------------------------------------------------------
UserTest: test: A given user should require a start date if an end date is present. 
------------------------------------------------------------------------------------
  [1m[35mUser Load (0.7ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (0.8ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.4ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
--------------------------------------------------------------------------------
UserTest: test: A given user should require an end date on or after start date. 
--------------------------------------------------------------------------------
  [1m[35mUser Load (0.8ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.3ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
---------------------------------------------------------------------
UserTest: test: User should allow first_name to be set to "Charles". 
---------------------------------------------------------------------
  [1m[35mUser Exists (0.6ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.6ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35m (0.3ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
--------------------------------------------------------------------------
UserTest: test: User should ensure first_name has a length of at least 2. 
--------------------------------------------------------------------------
  [1m[35mUser Exists (0.6ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.6ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.6ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.6ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.6ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
---------------------------------------------------------------------------
UserTest: test: User should ensure first_name has a length of at most 254. 
---------------------------------------------------------------------------
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.6ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.6ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35m (0.3ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
-------------------------------------------------------------------------
UserTest: test: User should ensure last_name has a length of at least 2. 
-------------------------------------------------------------------------
  [1m[35mUser Exists (0.6ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.6ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.6ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
--------------------------------------------------------------------------
UserTest: test: User should ensure last_name has a length of at most 254. 
--------------------------------------------------------------------------
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.6ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.8ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.6ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.6ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35m (0.3ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
--------------------------------------------------------------------------
UserTest: test: User should ensure login_name has a length of at least 6. 
--------------------------------------------------------------------------
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxx' LIMIT 1
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxx' LIMIT 1[0m
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxx' LIMIT 1
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxx' LIMIT 1[0m
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxx' LIMIT 1
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
---------------------------------------------------------------------------
UserTest: test: User should ensure login_name has a length of at most 254. 
---------------------------------------------------------------------------
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' LIMIT 1[0m
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' LIMIT 1
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' LIMIT 1[0m
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' LIMIT 1
  [1m[36mUser Exists (0.6ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' LIMIT 1[0m
  [1m[35m (0.4ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
-------------------------------------------------------------------------
UserTest: test: User should not allow first_name to be set to "charles". 
-------------------------------------------------------------------------
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.6ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35m (0.3ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
--------------------------------------------------------------------------------
UserTest: test: User should require case sensitive unique value for login_name. 
--------------------------------------------------------------------------------
  [1m[35mUser Load (0.8ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (0.6ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'orstedma' LIMIT 1[0m
  [1m[35mUser Exists (0.6ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'orstedma' LIMIT 1
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
----------------------------------------------------------
UserTest: test: User should require first_name to be set. 
----------------------------------------------------------
  [1m[36mUser Exists (0.6ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.6ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
---------------------------------------------------------
UserTest: test: User should require last_name to be set. 
---------------------------------------------------------
  [1m[36mUser Exists (0.6ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.6ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
----------------------------------------------------------
UserTest: test: User should require login_name to be set. 
----------------------------------------------------------
  [1m[36mUser Exists (9.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.6ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
----------------------------------------------------------
UserTest: test: User should require start_date to be set. 
----------------------------------------------------------
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.5ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.4ms)[0m  [1mROLLBACK[0m
  [1m[36m (227.5ms)[0m  [1mDROP DATABASE IF EXISTS "ritrack_test"[0m
  [1m[35m (657.7ms)[0m  CREATE DATABASE "ritrack_test" ENCODING = 'unicode'
  [1m[36mSQL (45.4ms)[0m  [1mCREATE EXTENSION IF NOT EXISTS "plpgsql"[0m
  [1m[35m (93.1ms)[0m  CREATE TABLE "users" ("id" serial primary key, "first_name" character varying(255), "last_name" character varying(255), "nick_name" character varying(255), "login_name" character varying(255), "notes" text, "created_at" timestamp, "updated_at" timestamp, "start_date" date, "end_date" date) 
  [1m[36m (10.5ms)[0m  [1mCREATE TABLE "schema_migrations" ("version" character varying(255) NOT NULL) [0m
  [1m[35m (59.1ms)[0m  CREATE UNIQUE INDEX "unique_schema_migrations" ON "schema_migrations" ("version")
  [1m[36m (1.0ms)[0m  [1mSELECT version FROM "schema_migrations"[0m
  [1m[35m (5.5ms)[0m  INSERT INTO "schema_migrations" (version) VALUES ('20130811212425')
  [1m[36m (7.9ms)[0m  [1mINSERT INTO "schema_migrations" (version) VALUES ('20130811195620')[0m
  [1m[35m (8.0ms)[0m  INSERT INTO "schema_migrations" (version) VALUES ('20130811193133')
  [1m[36m (7.9ms)[0m  [1mINSERT INTO "schema_migrations" (version) VALUES ('20130811195557')[0m
  [1m[35mActiveRecord::SchemaMigration Load (1.0ms)[0m  SELECT "schema_migrations".* FROM "schema_migrations"
  [1m[36mActiveRecord::SchemaMigration Load (0.6ms)[0m  [1mSELECT "schema_migrations".* FROM "schema_migrations"[0m
  [1m[35m (1.1ms)[0m  ALTER TABLE "users" DISABLE TRIGGER ALL;ALTER TABLE "schema_migrations" DISABLE TRIGGER ALL
  [1m[36m (0.4ms)[0m  [1mBEGIN[0m
  [1m[35mFixture Delete (1.1ms)[0m  DELETE FROM "users"
  [1m[36mFixture Insert (1.3ms)[0m  [1mINSERT INTO "users" ("id", "first_name", "last_name", "nick_name", "login_name", "start_date", "end_date", "notes", "created_at", "updated_at") VALUES (1, 'Michael', 'Orsted', 'Mike', 'orstedma', '2012-02-04', NULL, 'This user lives in Chicago.', '2013-08-16 12:38:31', '2013-08-16 12:38:31')[0m
  [1m[35mFixture Insert (0.8ms)[0m  INSERT INTO "users" ("id", "first_name", "last_name", "nick_name", "login_name", "start_date", "end_date", "notes", "created_at", "updated_at") VALUES (2, 'Frederick', 'Free-Loader', 'Frederick', 'freelofw', '2012-03-04', NULL, 'This user is completely useless', '2013-08-16 12:38:31', '2013-08-16 12:38:31')
  [1m[36mFixture Insert (0.8ms)[0m  [1mINSERT INTO "users" ("id", "first_name", "last_name", "nick_name", "login_name", "start_date", "end_date", "notes", "created_at", "updated_at") VALUES (3, 'Michael', 'Winstead', 'Mike', 'winstem', '2012-02-04', '2013-08-12', 'This user lives in New York. This user is disabled in the system.', '2013-08-16 12:38:31', '2013-08-16 12:38:31')[0m
  [1m[35mFixture Insert (0.8ms)[0m  INSERT INTO "users" ("id", "first_name", "last_name", "nick_name", "login_name", "start_date", "end_date", "notes", "created_at", "updated_at") VALUES (4, 'Allison', 'Wilson', 'Alli', 'wilsona', '2012-03-04', NULL, 'Electrical engineer.', '2013-08-16 12:38:31', '2013-08-16 12:38:31')
  [1m[36m (5.1ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.7ms)[0m  ALTER TABLE "users" ENABLE TRIGGER ALL;ALTER TABLE "schema_migrations" ENABLE TRIGGER ALL
  [1m[36m (0.5ms)[0m  [1mBEGIN[0m
--------------------------------------------------------
UserTest: test: A given user should be valid initially. 
--------------------------------------------------------
  [1m[35mUser Load (1.8ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (1.9ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.3ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
-----------------------------------------------------------------------
UserTest: test: A given user should not be valid if first name is nil. 
-----------------------------------------------------------------------
  [1m[35mUser Load (0.8ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (0.9ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.3ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
------------------------------------------------------------------------------------
UserTest: test: A given user should require a start date if an end date is present. 
------------------------------------------------------------------------------------
  [1m[35mUser Load (0.8ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (0.8ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.4ms)[0m  ROLLBACK
  [1m[36m (0.4ms)[0m  [1mBEGIN[0m
--------------------------------------------------------------------------------
UserTest: test: A given user should require an end date on or after start date. 
--------------------------------------------------------------------------------
  [1m[35mUser Load (1.0ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (1.0ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.4ms)[0m  ROLLBACK
  [1m[36m (0.5ms)[0m  [1mBEGIN[0m
---------------------------------------------------------------------
UserTest: test: User should allow first_name to be set to "Charles". 
---------------------------------------------------------------------
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.6ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35m (0.3ms)[0m  ROLLBACK
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
--------------------------------------------------------------------------
UserTest: test: User should ensure first_name has a length of at least 2. 
--------------------------------------------------------------------------
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.6ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.6ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.6ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
---------------------------------------------------------------------------
UserTest: test: User should ensure first_name has a length of at most 254. 
---------------------------------------------------------------------------
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.8ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.6ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.6ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35m (0.4ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
-------------------------------------------------------------------------
UserTest: test: User should ensure last_name has a length of at least 2. 
-------------------------------------------------------------------------
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.6ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.5ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.5ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
--------------------------------------------------------------------------
UserTest: test: User should ensure last_name has a length of at most 254. 
--------------------------------------------------------------------------
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35m (0.4ms)[0m  ROLLBACK
  [1m[36m (0.4ms)[0m  [1mBEGIN[0m
--------------------------------------------------------------------------
UserTest: test: User should ensure login_name has a length of at least 6. 
--------------------------------------------------------------------------
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxx' LIMIT 1
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxx' LIMIT 1[0m
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxx' LIMIT 1
  [1m[36mUser Exists (0.8ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxx' LIMIT 1[0m
  [1m[35mUser Exists (0.6ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxx' LIMIT 1
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
---------------------------------------------------------------------------
UserTest: test: User should ensure login_name has a length of at most 254. 
---------------------------------------------------------------------------
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' LIMIT 1[0m
  [1m[35mUser Exists (0.5ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' LIMIT 1
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' LIMIT 1[0m
  [1m[35mUser Exists (0.5ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' LIMIT 1
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' LIMIT 1[0m
  [1m[35m (0.4ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
-------------------------------------------------------------------------
UserTest: test: User should not allow first_name to be set to "charles". 
-------------------------------------------------------------------------
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35m (0.5ms)[0m  ROLLBACK
  [1m[36m (0.4ms)[0m  [1mBEGIN[0m
--------------------------------------------------------------------------------
UserTest: test: User should require case sensitive unique value for login_name. 
--------------------------------------------------------------------------------
  [1m[35mUser Load (1.0ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'orstedma' LIMIT 1[0m
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'orstedma' LIMIT 1
  [1m[36m (0.4ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.4ms)[0m  BEGIN
----------------------------------------------------------
UserTest: test: User should require first_name to be set. 
----------------------------------------------------------
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.6ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.4ms)[0m  BEGIN
---------------------------------------------------------
UserTest: test: User should require last_name to be set. 
---------------------------------------------------------
  [1m[36mUser Exists (0.6ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
----------------------------------------------------------
UserTest: test: User should require login_name to be set. 
----------------------------------------------------------
  [1m[36mUser Exists (5.3ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
----------------------------------------------------------
UserTest: test: User should require start_date to be set. 
----------------------------------------------------------
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[36m (222.6ms)[0m  [1mDROP DATABASE IF EXISTS "ritrack_test"[0m
  [1m[35m (699.4ms)[0m  CREATE DATABASE "ritrack_test" ENCODING = 'unicode'
  [1m[36mSQL (43.2ms)[0m  [1mCREATE EXTENSION IF NOT EXISTS "plpgsql"[0m
  [1m[35m (122.8ms)[0m  CREATE TABLE "users" ("id" serial primary key, "first_name" character varying(255), "last_name" character varying(255), "nick_name" character varying(255), "login_name" character varying(255), "notes" text, "created_at" timestamp, "updated_at" timestamp, "start_date" date, "end_date" date) 
  [1m[36m (10.7ms)[0m  [1mCREATE TABLE "schema_migrations" ("version" character varying(255) NOT NULL) [0m
  [1m[35m (58.8ms)[0m  CREATE UNIQUE INDEX "unique_schema_migrations" ON "schema_migrations" ("version")
  [1m[36m (1.0ms)[0m  [1mSELECT version FROM "schema_migrations"[0m
  [1m[35m (5.9ms)[0m  INSERT INTO "schema_migrations" (version) VALUES ('20130811212425')
  [1m[36m (7.9ms)[0m  [1mINSERT INTO "schema_migrations" (version) VALUES ('20130811195620')[0m
  [1m[35m (8.0ms)[0m  INSERT INTO "schema_migrations" (version) VALUES ('20130811193133')
  [1m[36m (7.9ms)[0m  [1mINSERT INTO "schema_migrations" (version) VALUES ('20130811195557')[0m
  [1m[35mActiveRecord::SchemaMigration Load (1.1ms)[0m  SELECT "schema_migrations".* FROM "schema_migrations"
  [1m[36mActiveRecord::SchemaMigration Load (0.7ms)[0m  [1mSELECT "schema_migrations".* FROM "schema_migrations"[0m
  [1m[35m (1.1ms)[0m  ALTER TABLE "users" DISABLE TRIGGER ALL;ALTER TABLE "schema_migrations" DISABLE TRIGGER ALL
  [1m[36m (0.4ms)[0m  [1mBEGIN[0m
  [1m[35mFixture Delete (1.0ms)[0m  DELETE FROM "users"
  [1m[36mFixture Insert (1.4ms)[0m  [1mINSERT INTO "users" ("id", "first_name", "last_name", "nick_name", "login_name", "start_date", "end_date", "notes", "created_at", "updated_at") VALUES (1, 'Michael', 'Orsted', 'Mike', 'orstedma', '2012-02-04', NULL, 'This user lives in Chicago.', '2013-08-16 12:39:19', '2013-08-16 12:39:19')[0m
  [1m[35mFixture Insert (0.9ms)[0m  INSERT INTO "users" ("id", "first_name", "last_name", "nick_name", "login_name", "start_date", "end_date", "notes", "created_at", "updated_at") VALUES (2, 'Frederick', 'Free-Loader', 'Frederick', 'freelofw', '2012-03-04', NULL, 'This user is completely useless', '2013-08-16 12:39:19', '2013-08-16 12:39:19')
  [1m[36mFixture Insert (0.7ms)[0m  [1mINSERT INTO "users" ("id", "first_name", "last_name", "nick_name", "login_name", "start_date", "end_date", "notes", "created_at", "updated_at") VALUES (3, 'Michael', 'Winstead', 'Mike', 'winstem', '2012-02-04', '2013-08-12', 'This user lives in New York. This user is disabled in the system.', '2013-08-16 12:39:19', '2013-08-16 12:39:19')[0m
  [1m[35mFixture Insert (0.6ms)[0m  INSERT INTO "users" ("id", "first_name", "last_name", "nick_name", "login_name", "start_date", "end_date", "notes", "created_at", "updated_at") VALUES (4, 'Allison', 'Wilson', 'Alli', 'wilsona', '2012-03-04', NULL, 'Electrical engineer.', '2013-08-16 12:39:19', '2013-08-16 12:39:19')
  [1m[36m (6.4ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.7ms)[0m  ALTER TABLE "users" ENABLE TRIGGER ALL;ALTER TABLE "schema_migrations" ENABLE TRIGGER ALL
  [1m[36m (0.5ms)[0m  [1mBEGIN[0m
--------------------------------------------------------
UserTest: test: A given user should be valid initially. 
--------------------------------------------------------
  [1m[35mUser Load (1.8ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (2.0ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.3ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
-----------------------------------------------------------------------
UserTest: test: A given user should not be valid if first name is nil. 
-----------------------------------------------------------------------
  [1m[35mUser Load (0.8ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (0.8ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.4ms)[0m  ROLLBACK
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
-----------------------------------------------------------------------------
UserTest: test: A given user should not be valid if first name is too short. 
-----------------------------------------------------------------------------
  [1m[35mUser Load (0.7ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.3ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
------------------------------------------------------------------------------------
UserTest: test: A given user should require a start date if an end date is present. 
------------------------------------------------------------------------------------
  [1m[35mUser Load (1.1ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (1.0ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.4ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
--------------------------------------------------------------------------------
UserTest: test: A given user should require an end date on or after start date. 
--------------------------------------------------------------------------------
  [1m[35mUser Load (0.8ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (0.9ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.4ms)[0m  ROLLBACK
  [1m[36m (0.4ms)[0m  [1mBEGIN[0m
---------------------------------------------------------------------
UserTest: test: User should allow first_name to be set to "Charles". 
---------------------------------------------------------------------
  [1m[35mUser Exists (0.5ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35m (0.4ms)[0m  ROLLBACK
  [1m[36m (0.4ms)[0m  [1mBEGIN[0m
--------------------------------------------------------------------------
UserTest: test: User should ensure first_name has a length of at least 2. 
--------------------------------------------------------------------------
  [1m[35mUser Exists (0.6ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.6ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.6ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.6ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.4ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.4ms)[0m  BEGIN
---------------------------------------------------------------------------
UserTest: test: User should ensure first_name has a length of at most 254. 
---------------------------------------------------------------------------
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35m (0.3ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
-------------------------------------------------------------------------
UserTest: test: User should ensure last_name has a length of at least 2. 
-------------------------------------------------------------------------
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.6ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.6ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
--------------------------------------------------------------------------
UserTest: test: User should ensure last_name has a length of at most 254. 
--------------------------------------------------------------------------
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.6ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.8ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.6ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35m (0.5ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
--------------------------------------------------------------------------
UserTest: test: User should ensure login_name has a length of at least 6. 
--------------------------------------------------------------------------
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxx' LIMIT 1
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxx' LIMIT 1[0m
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxx' LIMIT 1
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxx' LIMIT 1[0m
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxx' LIMIT 1
  [1m[36m (0.4ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
---------------------------------------------------------------------------
UserTest: test: User should ensure login_name has a length of at most 254. 
---------------------------------------------------------------------------
  [1m[36mUser Exists (0.6ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' LIMIT 1[0m
  [1m[35mUser Exists (0.5ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' LIMIT 1
  [1m[36mUser Exists (0.5ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' LIMIT 1[0m
  [1m[35mUser Exists (0.5ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' LIMIT 1
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' LIMIT 1[0m
  [1m[35m (0.3ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
-------------------------------------------------------------------------
UserTest: test: User should not allow first_name to be set to "charles". 
-------------------------------------------------------------------------
  [1m[35mUser Exists (0.6ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.8ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35m (0.5ms)[0m  ROLLBACK
  [1m[36m (0.5ms)[0m  [1mBEGIN[0m
--------------------------------------------------------------------------------
UserTest: test: User should require case sensitive unique value for login_name. 
--------------------------------------------------------------------------------
  [1m[35mUser Load (0.9ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (0.8ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'orstedma' LIMIT 1[0m
  [1m[35mUser Exists (0.5ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'orstedma' LIMIT 1
  [1m[36m (0.4ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.4ms)[0m  BEGIN
----------------------------------------------------------
UserTest: test: User should require first_name to be set. 
----------------------------------------------------------
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.4ms)[0m  BEGIN
---------------------------------------------------------
UserTest: test: User should require last_name to be set. 
---------------------------------------------------------
  [1m[36mUser Exists (0.6ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.6ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
----------------------------------------------------------
UserTest: test: User should require login_name to be set. 
----------------------------------------------------------
  [1m[36mUser Exists (5.3ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.8ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.4ms)[0m  BEGIN
----------------------------------------------------------
UserTest: test: User should require start_date to be set. 
----------------------------------------------------------
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.8ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.4ms)[0m  [1mROLLBACK[0m
  [1m[36m (219.6ms)[0m  [1mDROP DATABASE IF EXISTS "ritrack_test"[0m
  [1m[35m (616.1ms)[0m  CREATE DATABASE "ritrack_test" ENCODING = 'unicode'
  [1m[36mSQL (44.7ms)[0m  [1mCREATE EXTENSION IF NOT EXISTS "plpgsql"[0m
  [1m[35m (104.3ms)[0m  CREATE TABLE "users" ("id" serial primary key, "first_name" character varying(255), "last_name" character varying(255), "nick_name" character varying(255), "login_name" character varying(255), "notes" text, "created_at" timestamp, "updated_at" timestamp, "start_date" date, "end_date" date) 
  [1m[36m (10.7ms)[0m  [1mCREATE TABLE "schema_migrations" ("version" character varying(255) NOT NULL) [0m
  [1m[35m (58.9ms)[0m  CREATE UNIQUE INDEX "unique_schema_migrations" ON "schema_migrations" ("version")
  [1m[36m (0.6ms)[0m  [1mSELECT version FROM "schema_migrations"[0m
  [1m[35m (6.1ms)[0m  INSERT INTO "schema_migrations" (version) VALUES ('20130811212425')
  [1m[36m (7.9ms)[0m  [1mINSERT INTO "schema_migrations" (version) VALUES ('20130811195620')[0m
  [1m[35m (8.0ms)[0m  INSERT INTO "schema_migrations" (version) VALUES ('20130811193133')
  [1m[36m (7.8ms)[0m  [1mINSERT INTO "schema_migrations" (version) VALUES ('20130811195557')[0m
  [1m[35mActiveRecord::SchemaMigration Load (1.0ms)[0m  SELECT "schema_migrations".* FROM "schema_migrations"
  [1m[36mActiveRecord::SchemaMigration Load (0.5ms)[0m  [1mSELECT "schema_migrations".* FROM "schema_migrations"[0m
  [1m[35m (1.0ms)[0m  ALTER TABLE "users" DISABLE TRIGGER ALL;ALTER TABLE "schema_migrations" DISABLE TRIGGER ALL
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
  [1m[35mFixture Delete (1.0ms)[0m  DELETE FROM "users"
  [1m[36mFixture Insert (1.3ms)[0m  [1mINSERT INTO "users" ("id", "first_name", "last_name", "nick_name", "login_name", "start_date", "end_date", "notes", "created_at", "updated_at") VALUES (1, 'Michael', 'Orsted', 'Mike', 'orstedma', '2012-02-04', NULL, 'This user lives in Chicago.', '2013-08-16 12:41:33', '2013-08-16 12:41:33')[0m
  [1m[35mFixture Insert (0.9ms)[0m  INSERT INTO "users" ("id", "first_name", "last_name", "nick_name", "login_name", "start_date", "end_date", "notes", "created_at", "updated_at") VALUES (2, 'Frederick', 'Free-Loader', 'Frederick', 'freelofw', '2012-03-04', NULL, 'This user is completely useless', '2013-08-16 12:41:33', '2013-08-16 12:41:33')
  [1m[36mFixture Insert (0.8ms)[0m  [1mINSERT INTO "users" ("id", "first_name", "last_name", "nick_name", "login_name", "start_date", "end_date", "notes", "created_at", "updated_at") VALUES (3, 'Michael', 'Winstead', 'Mike', 'winstem', '2012-02-04', '2013-08-12', 'This user lives in New York. This user is disabled in the system.', '2013-08-16 12:41:33', '2013-08-16 12:41:33')[0m
  [1m[35mFixture Insert (0.8ms)[0m  INSERT INTO "users" ("id", "first_name", "last_name", "nick_name", "login_name", "start_date", "end_date", "notes", "created_at", "updated_at") VALUES (4, 'Allison', 'Wilson', 'Alli', 'wilsona', '2012-03-04', NULL, 'Electrical engineer.', '2013-08-16 12:41:33', '2013-08-16 12:41:33')
  [1m[36m (7.8ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.7ms)[0m  ALTER TABLE "users" ENABLE TRIGGER ALL;ALTER TABLE "schema_migrations" ENABLE TRIGGER ALL
  [1m[36m (0.4ms)[0m  [1mBEGIN[0m
--------------------------------------------------------
UserTest: test: A given user should be valid initially. 
--------------------------------------------------------
  [1m[35mUser Load (1.8ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (1.9ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.2ms)[0m  ROLLBACK
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
-----------------------------------------------------------------------
UserTest: test: A given user should not be valid if first name is nil. 
-----------------------------------------------------------------------
  [1m[35mUser Load (0.5ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (1.0ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.4ms)[0m  ROLLBACK
  [1m[36m (0.4ms)[0m  [1mBEGIN[0m
----------------------------------------------------------------------------
UserTest: test: A given user should not be valid if first name is too long. 
----------------------------------------------------------------------------
  [1m[35mUser Load (1.1ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (1.0ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.5ms)[0m  ROLLBACK
  [1m[36m (0.5ms)[0m  [1mBEGIN[0m
-----------------------------------------------------------------------------
UserTest: test: A given user should not be valid if first name is too short. 
-----------------------------------------------------------------------------
  [1m[35mUser Load (1.1ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (1.0ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.4ms)[0m  ROLLBACK
  [1m[36m (0.4ms)[0m  [1mBEGIN[0m
------------------------------------------------------------------------------------
UserTest: test: A given user should require a start date if an end date is present. 
------------------------------------------------------------------------------------
  [1m[35mUser Load (1.0ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (0.9ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.4ms)[0m  ROLLBACK
  [1m[36m (0.6ms)[0m  [1mBEGIN[0m
--------------------------------------------------------------------------------
UserTest: test: A given user should require an end date on or after start date. 
--------------------------------------------------------------------------------
  [1m[35mUser Load (1.0ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (0.9ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.5ms)[0m  ROLLBACK
  [1m[36m (0.4ms)[0m  [1mBEGIN[0m
---------------------------------------------------------------------
UserTest: test: User should allow first_name to be set to "Charles". 
---------------------------------------------------------------------
  [1m[35mUser Exists (0.9ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.8ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35m (0.4ms)[0m  ROLLBACK
  [1m[36m (0.4ms)[0m  [1mBEGIN[0m
--------------------------------------------------------------------------
UserTest: test: User should ensure first_name has a length of at least 2. 
--------------------------------------------------------------------------
  [1m[35mUser Exists (0.6ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.6ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.5ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.2ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
---------------------------------------------------------------------------
UserTest: test: User should ensure first_name has a length of at most 254. 
---------------------------------------------------------------------------
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.6ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.6ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.5ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35m (0.3ms)[0m  ROLLBACK
  [1m[36m (0.4ms)[0m  [1mBEGIN[0m
-------------------------------------------------------------------------
UserTest: test: User should ensure last_name has a length of at least 2. 
-------------------------------------------------------------------------
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.6ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.6ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.6ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.4ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
--------------------------------------------------------------------------
UserTest: test: User should ensure last_name has a length of at most 254. 
--------------------------------------------------------------------------
  [1m[36mUser Exists (0.5ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.8ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.8ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35m (0.5ms)[0m  ROLLBACK
  [1m[36m (0.4ms)[0m  [1mBEGIN[0m
--------------------------------------------------------------------------
UserTest: test: User should ensure login_name has a length of at least 6. 
--------------------------------------------------------------------------
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxx' LIMIT 1
  [1m[36mUser Exists (0.6ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxx' LIMIT 1[0m
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxx' LIMIT 1
  [1m[36mUser Exists (0.9ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxx' LIMIT 1[0m
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxx' LIMIT 1
  [1m[36m (0.2ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.2ms)[0m  BEGIN
---------------------------------------------------------------------------
UserTest: test: User should ensure login_name has a length of at most 254. 
---------------------------------------------------------------------------
  [1m[36mUser Exists (0.6ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' LIMIT 1[0m
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' LIMIT 1
  [1m[36mUser Exists (0.9ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' LIMIT 1[0m
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' LIMIT 1
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' LIMIT 1[0m
  [1m[35m (0.3ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
-------------------------------------------------------------------------
UserTest: test: User should not allow first_name to be set to "charles". 
-------------------------------------------------------------------------
  [1m[35mUser Exists (0.6ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.8ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35m (0.3ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
--------------------------------------------------------------------------------
UserTest: test: User should require case sensitive unique value for login_name. 
--------------------------------------------------------------------------------
  [1m[35mUser Load (0.7ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (0.5ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'orstedma' LIMIT 1[0m
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'orstedma' LIMIT 1
  [1m[36m (0.4ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
----------------------------------------------------------
UserTest: test: User should require first_name to be set. 
----------------------------------------------------------
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.5ms)[0m  BEGIN
---------------------------------------------------------
UserTest: test: User should require last_name to be set. 
---------------------------------------------------------
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.4ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.4ms)[0m  BEGIN
----------------------------------------------------------
UserTest: test: User should require login_name to be set. 
----------------------------------------------------------
  [1m[36mUser Exists (5.1ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.6ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
----------------------------------------------------------
UserTest: test: User should require start_date to be set. 
----------------------------------------------------------
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.8ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[36m (224.0ms)[0m  [1mDROP DATABASE IF EXISTS "ritrack_test"[0m
  [1m[35m (707.6ms)[0m  CREATE DATABASE "ritrack_test" ENCODING = 'unicode'
  [1m[36mSQL (46.2ms)[0m  [1mCREATE EXTENSION IF NOT EXISTS "plpgsql"[0m
  [1m[35m (92.1ms)[0m  CREATE TABLE "users" ("id" serial primary key, "first_name" character varying(255), "last_name" character varying(255), "nick_name" character varying(255), "login_name" character varying(255), "notes" text, "created_at" timestamp, "updated_at" timestamp, "start_date" date, "end_date" date) 
  [1m[36m (11.5ms)[0m  [1mCREATE TABLE "schema_migrations" ("version" character varying(255) NOT NULL) [0m
  [1m[35m (50.4ms)[0m  CREATE UNIQUE INDEX "unique_schema_migrations" ON "schema_migrations" ("version")
  [1m[36m (1.0ms)[0m  [1mSELECT version FROM "schema_migrations"[0m
  [1m[35m (5.8ms)[0m  INSERT INTO "schema_migrations" (version) VALUES ('20130811212425')
  [1m[36m (7.9ms)[0m  [1mINSERT INTO "schema_migrations" (version) VALUES ('20130811195620')[0m
  [1m[35m (8.0ms)[0m  INSERT INTO "schema_migrations" (version) VALUES ('20130811193133')
  [1m[36m (7.9ms)[0m  [1mINSERT INTO "schema_migrations" (version) VALUES ('20130811195557')[0m
  [1m[35mActiveRecord::SchemaMigration Load (0.9ms)[0m  SELECT "schema_migrations".* FROM "schema_migrations"
  [1m[36mActiveRecord::SchemaMigration Load (0.5ms)[0m  [1mSELECT "schema_migrations".* FROM "schema_migrations"[0m
  [1m[35m (0.5ms)[0m  ALTER TABLE "users" DISABLE TRIGGER ALL;ALTER TABLE "schema_migrations" DISABLE TRIGGER ALL
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
  [1m[35mFixture Delete (0.7ms)[0m  DELETE FROM "users"
  [1m[36mFixture Insert (0.8ms)[0m  [1mINSERT INTO "users" ("id", "first_name", "last_name", "nick_name", "login_name", "start_date", "end_date", "notes", "created_at", "updated_at") VALUES (1, 'Michael', 'Orsted', 'Mike', 'orstedma', '2012-02-04', NULL, 'This user lives in Chicago.', '2013-08-16 12:44:27', '2013-08-16 12:44:27')[0m
  [1m[35mFixture Insert (0.5ms)[0m  INSERT INTO "users" ("id", "first_name", "last_name", "nick_name", "login_name", "start_date", "end_date", "notes", "created_at", "updated_at") VALUES (2, 'Frederick', 'Free-Loader', 'Frederick', 'freelofw', '2012-03-04', NULL, 'This user is completely useless', '2013-08-16 12:44:27', '2013-08-16 12:44:27')
  [1m[36mFixture Insert (0.8ms)[0m  [1mINSERT INTO "users" ("id", "first_name", "last_name", "nick_name", "login_name", "start_date", "end_date", "notes", "created_at", "updated_at") VALUES (3, 'Michael', 'Winstead', 'Mike', 'winstem', '2012-02-04', '2013-08-12', 'This user lives in New York. This user is disabled in the system.', '2013-08-16 12:44:27', '2013-08-16 12:44:27')[0m
  [1m[35mFixture Insert (0.7ms)[0m  INSERT INTO "users" ("id", "first_name", "last_name", "nick_name", "login_name", "start_date", "end_date", "notes", "created_at", "updated_at") VALUES (4, 'Allison', 'Wilson', 'Alli', 'wilsona', '2012-03-04', NULL, 'Electrical engineer.', '2013-08-16 12:44:27', '2013-08-16 12:44:27')
  [1m[36m (2.5ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.7ms)[0m  ALTER TABLE "users" ENABLE TRIGGER ALL;ALTER TABLE "schema_migrations" ENABLE TRIGGER ALL
  [1m[36m (0.4ms)[0m  [1mBEGIN[0m
--------------------------------------------------------
UserTest: test: A given user should be valid initially. 
--------------------------------------------------------
  [1m[35mUser Load (1.8ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (2.0ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.3ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
-----------------------------------------------------------------------
UserTest: test: A given user should not be valid if first name is nil. 
-----------------------------------------------------------------------
  [1m[35mUser Load (0.8ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (0.8ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.5ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
----------------------------------------------------------------------------
UserTest: test: A given user should not be valid if first name is too long. 
----------------------------------------------------------------------------
  [1m[35mUser Load (0.5ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (0.8ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.3ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
-----------------------------------------------------------------------------
UserTest: test: A given user should not be valid if first name is too short. 
-----------------------------------------------------------------------------
  [1m[35mUser Load (0.8ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (0.8ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.4ms)[0m  ROLLBACK
  [1m[36m (0.4ms)[0m  [1mBEGIN[0m
----------------------------------------------------------------------
UserTest: test: A given user should not be valid if last name is nil. 
----------------------------------------------------------------------
  [1m[35mUser Load (0.9ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (0.8ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.4ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
---------------------------------------------------------------------------
UserTest: test: A given user should not be valid if last name is too long. 
---------------------------------------------------------------------------
  [1m[35mUser Load (0.8ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.5ms)[0m  ROLLBACK
  [1m[36m (0.4ms)[0m  [1mBEGIN[0m
----------------------------------------------------------------------------
UserTest: test: A given user should not be valid if last name is too short. 
----------------------------------------------------------------------------
  [1m[35mUser Load (0.9ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (0.8ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.4ms)[0m  ROLLBACK
  [1m[36m (0.4ms)[0m  [1mBEGIN[0m
------------------------------------------------------------------------------------
UserTest: test: A given user should require a start date if an end date is present. 
------------------------------------------------------------------------------------
  [1m[35mUser Load (1.0ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (0.9ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.4ms)[0m  ROLLBACK
  [1m[36m (0.5ms)[0m  [1mBEGIN[0m
--------------------------------------------------------------------------------
UserTest: test: A given user should require an end date on or after start date. 
--------------------------------------------------------------------------------
  [1m[35mUser Load (1.1ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (1.0ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.5ms)[0m  ROLLBACK
  [1m[36m (0.4ms)[0m  [1mBEGIN[0m
---------------------------------------------------------------------
UserTest: test: User should allow first_name to be set to "Charles". 
---------------------------------------------------------------------
  [1m[35mUser Exists (0.9ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35m (0.4ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
--------------------------------------------------------------------------
UserTest: test: User should ensure first_name has a length of at least 2. 
--------------------------------------------------------------------------
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.5ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.5ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
---------------------------------------------------------------------------
UserTest: test: User should ensure first_name has a length of at most 254. 
---------------------------------------------------------------------------
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.6ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.6ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.5ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35m (0.3ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
-------------------------------------------------------------------------
UserTest: test: User should ensure last_name has a length of at least 2. 
-------------------------------------------------------------------------
  [1m[35mUser Exists (0.8ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.5ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
--------------------------------------------------------------------------
UserTest: test: User should ensure last_name has a length of at most 254. 
--------------------------------------------------------------------------
  [1m[36mUser Exists (0.8ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.6ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.6ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35m (0.4ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
--------------------------------------------------------------------------
UserTest: test: User should ensure login_name has a length of at least 6. 
--------------------------------------------------------------------------
  [1m[35mUser Exists (0.6ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxx' LIMIT 1
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxx' LIMIT 1[0m
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxx' LIMIT 1
  [1m[36mUser Exists (0.5ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxx' LIMIT 1[0m
  [1m[35mUser Exists (0.5ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxx' LIMIT 1
  [1m[36m (0.4ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
---------------------------------------------------------------------------
UserTest: test: User should ensure login_name has a length of at most 254. 
---------------------------------------------------------------------------
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' LIMIT 1[0m
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' LIMIT 1
  [1m[36mUser Exists (0.8ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' LIMIT 1[0m
  [1m[35mUser Exists (0.6ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' LIMIT 1
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' LIMIT 1[0m
  [1m[35m (0.3ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
-------------------------------------------------------------------------
UserTest: test: User should not allow first_name to be set to "charles". 
-------------------------------------------------------------------------
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.6ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35m (0.3ms)[0m  ROLLBACK
  [1m[36m (0.4ms)[0m  [1mBEGIN[0m
--------------------------------------------------------------------------------
UserTest: test: User should require case sensitive unique value for login_name. 
--------------------------------------------------------------------------------
  [1m[35mUser Load (1.0ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (0.9ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'orstedma' LIMIT 1[0m
  [1m[35mUser Exists (0.5ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'orstedma' LIMIT 1
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
----------------------------------------------------------
UserTest: test: User should require first_name to be set. 
----------------------------------------------------------
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.6ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
---------------------------------------------------------
UserTest: test: User should require last_name to be set. 
---------------------------------------------------------
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (5.3ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.5ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
----------------------------------------------------------
UserTest: test: User should require login_name to be set. 
----------------------------------------------------------
  [1m[36mUser Exists (0.5ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
----------------------------------------------------------
UserTest: test: User should require start_date to be set. 
----------------------------------------------------------
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.4ms)[0m  [1mROLLBACK[0m
  [1m[36m (226.1ms)[0m  [1mDROP DATABASE IF EXISTS "ritrack_test"[0m
  [1m[35m (699.4ms)[0m  CREATE DATABASE "ritrack_test" ENCODING = 'unicode'
  [1m[36mSQL (44.2ms)[0m  [1mCREATE EXTENSION IF NOT EXISTS "plpgsql"[0m
  [1m[35m (89.3ms)[0m  CREATE TABLE "users" ("id" serial primary key, "first_name" character varying(255), "last_name" character varying(255), "nick_name" character varying(255), "login_name" character varying(255), "notes" text, "created_at" timestamp, "updated_at" timestamp, "start_date" date, "end_date" date) 
  [1m[36m (11.7ms)[0m  [1mCREATE TABLE "schema_migrations" ("version" character varying(255) NOT NULL) [0m
  [1m[35m (59.0ms)[0m  CREATE UNIQUE INDEX "unique_schema_migrations" ON "schema_migrations" ("version")
  [1m[36m (1.0ms)[0m  [1mSELECT version FROM "schema_migrations"[0m
  [1m[35m (5.7ms)[0m  INSERT INTO "schema_migrations" (version) VALUES ('20130811212425')
  [1m[36m (7.9ms)[0m  [1mINSERT INTO "schema_migrations" (version) VALUES ('20130811195620')[0m
  [1m[35m (8.0ms)[0m  INSERT INTO "schema_migrations" (version) VALUES ('20130811193133')
  [1m[36m (7.9ms)[0m  [1mINSERT INTO "schema_migrations" (version) VALUES ('20130811195557')[0m
  [1m[35mActiveRecord::SchemaMigration Load (1.1ms)[0m  SELECT "schema_migrations".* FROM "schema_migrations"
  [1m[36mActiveRecord::SchemaMigration Load (0.7ms)[0m  [1mSELECT "schema_migrations".* FROM "schema_migrations"[0m
  [1m[35m (1.1ms)[0m  ALTER TABLE "users" DISABLE TRIGGER ALL;ALTER TABLE "schema_migrations" DISABLE TRIGGER ALL
  [1m[36m (0.4ms)[0m  [1mBEGIN[0m
  [1m[35mFixture Delete (1.1ms)[0m  DELETE FROM "users"
  [1m[36mFixture Insert (1.3ms)[0m  [1mINSERT INTO "users" ("id", "first_name", "last_name", "nick_name", "login_name", "start_date", "end_date", "notes", "created_at", "updated_at") VALUES (1, 'Michael', 'Orsted', 'Mike', 'orstedma', '2012-02-04', NULL, 'This user lives in Chicago.', '2013-08-16 12:50:32', '2013-08-16 12:50:32')[0m
  [1m[35mFixture Insert (0.9ms)[0m  INSERT INTO "users" ("id", "first_name", "last_name", "nick_name", "login_name", "start_date", "end_date", "notes", "created_at", "updated_at") VALUES (2, 'Frederick', 'Free-Loader', 'Frederick', 'freelofw', '2012-03-04', NULL, 'This user is completely useless', '2013-08-16 12:50:32', '2013-08-16 12:50:32')
  [1m[36mFixture Insert (0.8ms)[0m  [1mINSERT INTO "users" ("id", "first_name", "last_name", "nick_name", "login_name", "start_date", "end_date", "notes", "created_at", "updated_at") VALUES (3, 'Michael', 'Winstead', 'Mike', 'winstem', '2012-02-04', '2013-08-12', 'This user lives in New York. This user is disabled in the system.', '2013-08-16 12:50:32', '2013-08-16 12:50:32')[0m
  [1m[35mFixture Insert (0.8ms)[0m  INSERT INTO "users" ("id", "first_name", "last_name", "nick_name", "login_name", "start_date", "end_date", "notes", "created_at", "updated_at") VALUES (4, 'Allison', 'Wilson', 'Alli', 'wilsona', '2012-03-04', NULL, 'Electrical engineer.', '2013-08-16 12:50:32', '2013-08-16 12:50:32')
  [1m[36m (8.5ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.7ms)[0m  ALTER TABLE "users" ENABLE TRIGGER ALL;ALTER TABLE "schema_migrations" ENABLE TRIGGER ALL
  [1m[36m (0.4ms)[0m  [1mBEGIN[0m
--------------------------------------------------------
UserTest: test: A given user should be valid initially. 
--------------------------------------------------------
  [1m[35mUser Load (1.8ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (2.0ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.3ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
-----------------------------------------------------------------------
UserTest: test: A given user should not be valid if first name is nil. 
-----------------------------------------------------------------------
  [1m[35mUser Load (0.8ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (0.8ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.3ms)[0m  ROLLBACK
  [1m[36m (0.4ms)[0m  [1mBEGIN[0m
----------------------------------------------------------------------------
UserTest: test: A given user should not be valid if first name is too long. 
----------------------------------------------------------------------------
  [1m[35mUser Load (1.1ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (1.0ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.4ms)[0m  ROLLBACK
  [1m[36m (0.5ms)[0m  [1mBEGIN[0m
-----------------------------------------------------------------------------
UserTest: test: A given user should not be valid if first name is too short. 
-----------------------------------------------------------------------------
  [1m[35mUser Load (1.1ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (0.8ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.3ms)[0m  ROLLBACK
  [1m[36m (0.4ms)[0m  [1mBEGIN[0m
----------------------------------------------------------------------
UserTest: test: A given user should not be valid if last name is nil. 
----------------------------------------------------------------------
  [1m[35mUser Load (1.0ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (0.6ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.3ms)[0m  ROLLBACK
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
---------------------------------------------------------------------------
UserTest: test: A given user should not be valid if last name is too long. 
---------------------------------------------------------------------------
  [1m[35mUser Load (0.7ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (0.5ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.3ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
----------------------------------------------------------------------------
UserTest: test: A given user should not be valid if last name is too short. 
----------------------------------------------------------------------------
  [1m[35mUser Load (1.0ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (0.9ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.5ms)[0m  ROLLBACK
  [1m[36m (0.4ms)[0m  [1mBEGIN[0m
-----------------------------------------------------------------------
UserTest: test: A given user should not be valid if login name is nil. 
-----------------------------------------------------------------------
  [1m[35mUser Load (0.9ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" IS NULL AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.4ms)[0m  ROLLBACK
  [1m[36m (0.4ms)[0m  [1mBEGIN[0m
----------------------------------------------------------------------------
UserTest: test: A given user should not be valid if login name is too long. 
----------------------------------------------------------------------------
  [1m[35mUser Load (1.0ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (0.9ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'Aabbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.5ms)[0m  ROLLBACK
  [1m[36m (0.4ms)[0m  [1mBEGIN[0m
-----------------------------------------------------------------------------
UserTest: test: A given user should not be valid if login name is too short. 
-----------------------------------------------------------------------------
  [1m[35mUser Load (1.0ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (0.8ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'A' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.4ms)[0m  ROLLBACK
  [1m[36m (0.4ms)[0m  [1mBEGIN[0m
------------------------------------------------------------------------------------
UserTest: test: A given user should require a start date if an end date is present. 
------------------------------------------------------------------------------------
  [1m[35mUser Load (1.0ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (0.9ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.5ms)[0m  ROLLBACK
  [1m[36m (0.4ms)[0m  [1mBEGIN[0m
--------------------------------------------------------------------------------
UserTest: test: A given user should require an end date on or after start date. 
--------------------------------------------------------------------------------
  [1m[35mUser Load (1.2ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (1.0ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.4ms)[0m  ROLLBACK
  [1m[36m (0.5ms)[0m  [1mBEGIN[0m
---------------------------------------------------------------------
UserTest: test: User should allow first_name to be set to "Charles". 
---------------------------------------------------------------------
  [1m[35mUser Exists (0.9ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35m (0.4ms)[0m  ROLLBACK
  [1m[36m (0.4ms)[0m  [1mBEGIN[0m
--------------------------------------------------------------------------
UserTest: test: User should ensure first_name has a length of at least 2. 
--------------------------------------------------------------------------
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.6ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.4ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
---------------------------------------------------------------------------
UserTest: test: User should ensure first_name has a length of at most 254. 
---------------------------------------------------------------------------
  [1m[36mUser Exists (0.6ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.5ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35m (0.4ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
-------------------------------------------------------------------------
UserTest: test: User should ensure last_name has a length of at least 2. 
-------------------------------------------------------------------------
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.8ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.5ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.5ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
--------------------------------------------------------------------------
UserTest: test: User should ensure last_name has a length of at most 254. 
--------------------------------------------------------------------------
  [1m[36mUser Exists (0.8ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.6ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.5ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35m (0.3ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
--------------------------------------------------------------------------
UserTest: test: User should ensure login_name has a length of at least 6. 
--------------------------------------------------------------------------
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxx' LIMIT 1
  [1m[36mUser Exists (0.6ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxx' LIMIT 1[0m
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxx' LIMIT 1
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxx' LIMIT 1[0m
  [1m[35mUser Exists (0.6ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxx' LIMIT 1
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
---------------------------------------------------------------------------
UserTest: test: User should ensure login_name has a length of at most 254. 
---------------------------------------------------------------------------
  [1m[36mUser Exists (0.8ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' LIMIT 1[0m
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' LIMIT 1
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' LIMIT 1[0m
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' LIMIT 1
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' LIMIT 1[0m
  [1m[35m (0.5ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
-------------------------------------------------------------------------
UserTest: test: User should not allow first_name to be set to "charles". 
-------------------------------------------------------------------------
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35m (0.4ms)[0m  ROLLBACK
  [1m[36m (0.4ms)[0m  [1mBEGIN[0m
--------------------------------------------------------------------------------
UserTest: test: User should require case sensitive unique value for login_name. 
--------------------------------------------------------------------------------
  [1m[35mUser Load (1.1ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'orstedma' LIMIT 1[0m
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'orstedma' LIMIT 1
  [1m[36m (0.4ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
----------------------------------------------------------
UserTest: test: User should require first_name to be set. 
----------------------------------------------------------
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.8ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.4ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
---------------------------------------------------------
UserTest: test: User should require last_name to be set. 
---------------------------------------------------------
  [1m[36mUser Exists (5.0ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
----------------------------------------------------------
UserTest: test: User should require login_name to be set. 
----------------------------------------------------------
  [1m[36mUser Exists (0.5ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.6ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.5ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.4ms)[0m  BEGIN
----------------------------------------------------------
UserTest: test: User should require start_date to be set. 
----------------------------------------------------------
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.4ms)[0m  [1mROLLBACK[0m
  [1m[36m (224.8ms)[0m  [1mDROP DATABASE IF EXISTS "ritrack_test"[0m
  [1m[35m (724.3ms)[0m  CREATE DATABASE "ritrack_test" ENCODING = 'unicode'
  [1m[36mSQL (46.7ms)[0m  [1mCREATE EXTENSION IF NOT EXISTS "plpgsql"[0m
  [1m[35m (100.0ms)[0m  CREATE TABLE "users" ("id" serial primary key, "first_name" character varying(255), "last_name" character varying(255), "nick_name" character varying(255), "login_name" character varying(255), "notes" text, "created_at" timestamp, "updated_at" timestamp, "start_date" date, "end_date" date) 
  [1m[36m (10.4ms)[0m  [1mCREATE TABLE "schema_migrations" ("version" character varying(255) NOT NULL) [0m
  [1m[35m (50.7ms)[0m  CREATE UNIQUE INDEX "unique_schema_migrations" ON "schema_migrations" ("version")
  [1m[36m (1.0ms)[0m  [1mSELECT version FROM "schema_migrations"[0m
  [1m[35m (5.8ms)[0m  INSERT INTO "schema_migrations" (version) VALUES ('20130811212425')
  [1m[36m (7.9ms)[0m  [1mINSERT INTO "schema_migrations" (version) VALUES ('20130811195620')[0m
  [1m[35m (7.9ms)[0m  INSERT INTO "schema_migrations" (version) VALUES ('20130811193133')
  [1m[36m (8.0ms)[0m  [1mINSERT INTO "schema_migrations" (version) VALUES ('20130811195557')[0m
  [1m[35mActiveRecord::SchemaMigration Load (1.1ms)[0m  SELECT "schema_migrations".* FROM "schema_migrations"
  [1m[36mActiveRecord::SchemaMigration Load (0.7ms)[0m  [1mSELECT "schema_migrations".* FROM "schema_migrations"[0m
  [1m[35m (1.1ms)[0m  ALTER TABLE "users" DISABLE TRIGGER ALL;ALTER TABLE "schema_migrations" DISABLE TRIGGER ALL
  [1m[36m (0.5ms)[0m  [1mBEGIN[0m
  [1m[35mFixture Delete (1.1ms)[0m  DELETE FROM "users"
  [1m[36mFixture Insert (1.4ms)[0m  [1mINSERT INTO "users" ("id", "first_name", "last_name", "nick_name", "login_name", "start_date", "end_date", "notes", "created_at", "updated_at") VALUES (1, 'Michael', 'Orsted', 'Mike', 'orstedma', '2012-02-04', NULL, 'This user lives in Chicago.', '2013-08-16 12:51:21', '2013-08-16 12:51:21')[0m
  [1m[35mFixture Insert (0.9ms)[0m  INSERT INTO "users" ("id", "first_name", "last_name", "nick_name", "login_name", "start_date", "end_date", "notes", "created_at", "updated_at") VALUES (2, 'Frederick', 'Free-Loader', 'Frederick', 'freelofw', '2012-03-04', NULL, 'This user is completely useless', '2013-08-16 12:51:21', '2013-08-16 12:51:21')
  [1m[36mFixture Insert (0.9ms)[0m  [1mINSERT INTO "users" ("id", "first_name", "last_name", "nick_name", "login_name", "start_date", "end_date", "notes", "created_at", "updated_at") VALUES (3, 'Michael', 'Winstead', 'Mike', 'winstem', '2012-02-04', '2013-08-12', 'This user lives in New York. This user is disabled in the system.', '2013-08-16 12:51:21', '2013-08-16 12:51:21')[0m
  [1m[35mFixture Insert (0.8ms)[0m  INSERT INTO "users" ("id", "first_name", "last_name", "nick_name", "login_name", "start_date", "end_date", "notes", "created_at", "updated_at") VALUES (4, 'Allison', 'Wilson', 'Alli', 'wilsona', '2012-03-04', NULL, 'Electrical engineer.', '2013-08-16 12:51:21', '2013-08-16 12:51:21')
  [1m[36m (9.2ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.7ms)[0m  ALTER TABLE "users" ENABLE TRIGGER ALL;ALTER TABLE "schema_migrations" ENABLE TRIGGER ALL
  [1m[36m (0.5ms)[0m  [1mBEGIN[0m
--------------------------------------------------------
UserTest: test: A given user should be valid initially. 
--------------------------------------------------------
  [1m[35mUser Load (1.8ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (1.9ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.3ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
-----------------------------------------------------------------------
UserTest: test: A given user should not be valid if first name is nil. 
-----------------------------------------------------------------------
  [1m[35mUser Load (0.8ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (0.8ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.4ms)[0m  ROLLBACK
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
----------------------------------------------------------------------------
UserTest: test: A given user should not be valid if first name is too long. 
----------------------------------------------------------------------------
  [1m[35mUser Load (0.7ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (1.0ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.4ms)[0m  ROLLBACK
  [1m[36m (0.4ms)[0m  [1mBEGIN[0m
-----------------------------------------------------------------------------
UserTest: test: A given user should not be valid if first name is too short. 
-----------------------------------------------------------------------------
  [1m[35mUser Load (0.9ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (1.0ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.4ms)[0m  ROLLBACK
  [1m[36m (0.4ms)[0m  [1mBEGIN[0m
----------------------------------------------------------------------
UserTest: test: A given user should not be valid if last name is nil. 
----------------------------------------------------------------------
  [1m[35mUser Load (0.9ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (0.9ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.4ms)[0m  ROLLBACK
  [1m[36m (0.4ms)[0m  [1mBEGIN[0m
---------------------------------------------------------------------------
UserTest: test: A given user should not be valid if last name is too long. 
---------------------------------------------------------------------------
  [1m[35mUser Load (0.9ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (0.8ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.5ms)[0m  ROLLBACK
  [1m[36m (0.4ms)[0m  [1mBEGIN[0m
----------------------------------------------------------------------------
UserTest: test: A given user should not be valid if last name is too short. 
----------------------------------------------------------------------------
  [1m[35mUser Load (1.0ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (1.0ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.4ms)[0m  ROLLBACK
  [1m[36m (0.4ms)[0m  [1mBEGIN[0m
-----------------------------------------------------------------------
UserTest: test: A given user should not be valid if login name is nil. 
-----------------------------------------------------------------------
  [1m[35mUser Load (0.9ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (0.8ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" IS NULL AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.4ms)[0m  ROLLBACK
  [1m[36m (0.4ms)[0m  [1mBEGIN[0m
----------------------------------------------------------------------------
UserTest: test: A given user should not be valid if login name is too long. 
----------------------------------------------------------------------------
  [1m[35mUser Load (1.2ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (0.9ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'aabbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.5ms)[0m  ROLLBACK
  [1m[36m (0.4ms)[0m  [1mBEGIN[0m
-----------------------------------------------------------------------------
UserTest: test: A given user should not be valid if login name is too short. 
-----------------------------------------------------------------------------
  [1m[35mUser Load (1.1ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (0.9ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'aaaaa' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.5ms)[0m  ROLLBACK
  [1m[36m (0.5ms)[0m  [1mBEGIN[0m
------------------------------------------------------------------------------------
UserTest: test: A given user should require a start date if an end date is present. 
------------------------------------------------------------------------------------
  [1m[35mUser Load (1.1ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (0.9ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.5ms)[0m  ROLLBACK
  [1m[36m (0.5ms)[0m  [1mBEGIN[0m
--------------------------------------------------------------------------------
UserTest: test: A given user should require an end date on or after start date. 
--------------------------------------------------------------------------------
  [1m[35mUser Load (1.0ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (1.0ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.4ms)[0m  ROLLBACK
  [1m[36m (0.4ms)[0m  [1mBEGIN[0m
---------------------------------------------------------------------
UserTest: test: User should allow first_name to be set to "Charles". 
---------------------------------------------------------------------
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.6ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35m (0.3ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
--------------------------------------------------------------------------
UserTest: test: User should ensure first_name has a length of at least 2. 
--------------------------------------------------------------------------
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.8ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.4ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
---------------------------------------------------------------------------
UserTest: test: User should ensure first_name has a length of at most 254. 
---------------------------------------------------------------------------
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.6ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.5ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.6ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35m (0.6ms)[0m  ROLLBACK
  [1m[36m (0.4ms)[0m  [1mBEGIN[0m
-------------------------------------------------------------------------
UserTest: test: User should ensure last_name has a length of at least 2. 
-------------------------------------------------------------------------
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.6ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.8ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.5ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
--------------------------------------------------------------------------
UserTest: test: User should ensure last_name has a length of at most 254. 
--------------------------------------------------------------------------
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.9ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.5ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35m (0.2ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
--------------------------------------------------------------------------
UserTest: test: User should ensure login_name has a length of at least 6. 
--------------------------------------------------------------------------
  [1m[35mUser Exists (0.5ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxx' LIMIT 1
  [1m[36mUser Exists (0.8ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxx' LIMIT 1[0m
  [1m[35mUser Exists (0.5ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxx' LIMIT 1
  [1m[36mUser Exists (0.6ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxx' LIMIT 1[0m
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxx' LIMIT 1
  [1m[36m (0.4ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.4ms)[0m  BEGIN
---------------------------------------------------------------------------
UserTest: test: User should ensure login_name has a length of at most 254. 
---------------------------------------------------------------------------
  [1m[36mUser Exists (0.8ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' LIMIT 1[0m
  [1m[35mUser Exists (0.9ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' LIMIT 1
  [1m[36mUser Exists (0.5ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' LIMIT 1[0m
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' LIMIT 1
  [1m[36mUser Exists (0.5ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' LIMIT 1[0m
  [1m[35m (0.3ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
-------------------------------------------------------------------------
UserTest: test: User should not allow first_name to be set to "charles". 
-------------------------------------------------------------------------
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35m (0.3ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
--------------------------------------------------------------------------------
UserTest: test: User should require case sensitive unique value for login_name. 
--------------------------------------------------------------------------------
  [1m[35mUser Load (0.8ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'orstedma' LIMIT 1[0m
  [1m[35mUser Exists (0.9ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'orstedma' LIMIT 1
  [1m[36m (0.5ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
----------------------------------------------------------
UserTest: test: User should require first_name to be set. 
----------------------------------------------------------
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.4ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.4ms)[0m  BEGIN
---------------------------------------------------------
UserTest: test: User should require last_name to be set. 
---------------------------------------------------------
  [1m[36mUser Exists (5.3ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.4ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.2ms)[0m  BEGIN
----------------------------------------------------------
UserTest: test: User should require login_name to be set. 
----------------------------------------------------------
  [1m[36mUser Exists (0.6ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.5ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.4ms)[0m  BEGIN
----------------------------------------------------------
UserTest: test: User should require start_date to be set. 
----------------------------------------------------------
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.5ms)[0m  [1mROLLBACK[0m
  [1m[36m (219.8ms)[0m  [1mDROP DATABASE IF EXISTS "ritrack_test"[0m
  [1m[35m (782.8ms)[0m  CREATE DATABASE "ritrack_test" ENCODING = 'unicode'
  [1m[36mSQL (46.8ms)[0m  [1mCREATE EXTENSION IF NOT EXISTS "plpgsql"[0m
  [1m[35m (95.1ms)[0m  CREATE TABLE "users" ("id" serial primary key, "first_name" character varying(255), "last_name" character varying(255), "nick_name" character varying(255), "login_name" character varying(255), "notes" text, "created_at" timestamp, "updated_at" timestamp, "start_date" date, "end_date" date) 
  [1m[36m (10.6ms)[0m  [1mCREATE TABLE "schema_migrations" ("version" character varying(255) NOT NULL) [0m
  [1m[35m (50.5ms)[0m  CREATE UNIQUE INDEX "unique_schema_migrations" ON "schema_migrations" ("version")
  [1m[36m (1.0ms)[0m  [1mSELECT version FROM "schema_migrations"[0m
  [1m[35m (5.9ms)[0m  INSERT INTO "schema_migrations" (version) VALUES ('20130811212425')
  [1m[36m (7.9ms)[0m  [1mINSERT INTO "schema_migrations" (version) VALUES ('20130811195620')[0m
  [1m[35m (8.0ms)[0m  INSERT INTO "schema_migrations" (version) VALUES ('20130811193133')
  [1m[36m (8.0ms)[0m  [1mINSERT INTO "schema_migrations" (version) VALUES ('20130811195557')[0m
  [1m[35mActiveRecord::SchemaMigration Load (1.1ms)[0m  SELECT "schema_migrations".* FROM "schema_migrations"
  [1m[36mActiveRecord::SchemaMigration Load (0.6ms)[0m  [1mSELECT "schema_migrations".* FROM "schema_migrations"[0m
  [1m[36m (322.5ms)[0m  [1mDROP DATABASE IF EXISTS "ritrack_test"[0m
  [1m[35m (749.8ms)[0m  CREATE DATABASE "ritrack_test" ENCODING = 'unicode'
  [1m[36mSQL (41.4ms)[0m  [1mCREATE EXTENSION IF NOT EXISTS "plpgsql"[0m
  [1m[35m (102.8ms)[0m  CREATE TABLE "users" ("id" serial primary key, "first_name" character varying(255), "last_name" character varying(255), "nick_name" character varying(255), "login_name" character varying(255), "notes" text, "created_at" timestamp, "updated_at" timestamp, "start_date" date, "end_date" date) 
  [1m[36m (10.7ms)[0m  [1mCREATE TABLE "schema_migrations" ("version" character varying(255) NOT NULL) [0m
  [1m[35m (42.1ms)[0m  CREATE UNIQUE INDEX "unique_schema_migrations" ON "schema_migrations" ("version")
  [1m[36m (1.0ms)[0m  [1mSELECT version FROM "schema_migrations"[0m
  [1m[35m (5.8ms)[0m  INSERT INTO "schema_migrations" (version) VALUES ('20130811212425')
  [1m[36m (7.9ms)[0m  [1mINSERT INTO "schema_migrations" (version) VALUES ('20130811195620')[0m
  [1m[35m (7.9ms)[0m  INSERT INTO "schema_migrations" (version) VALUES ('20130811193133')
  [1m[36m (7.9ms)[0m  [1mINSERT INTO "schema_migrations" (version) VALUES ('20130811195557')[0m
  [1m[35mActiveRecord::SchemaMigration Load (0.9ms)[0m  SELECT "schema_migrations".* FROM "schema_migrations"
  [1m[36mActiveRecord::SchemaMigration Load (0.5ms)[0m  [1mSELECT "schema_migrations".* FROM "schema_migrations"[0m
  [1m[35m (1.0ms)[0m  ALTER TABLE "users" DISABLE TRIGGER ALL;ALTER TABLE "schema_migrations" DISABLE TRIGGER ALL
  [1m[36m (0.4ms)[0m  [1mBEGIN[0m
  [1m[35mFixture Delete (0.7ms)[0m  DELETE FROM "users"
  [1m[36mFixture Insert (0.9ms)[0m  [1mINSERT INTO "users" ("id", "first_name", "last_name", "nick_name", "login_name", "start_date", "end_date", "notes", "created_at", "updated_at") VALUES (1, 'Michael', 'Orsted', 'Mike', 'orstedma', '2012-02-04', NULL, 'This user lives in Chicago.', '2013-08-16 12:57:30', '2013-08-16 12:57:30')[0m
  [1m[35mFixture Insert (0.8ms)[0m  INSERT INTO "users" ("id", "first_name", "last_name", "nick_name", "login_name", "start_date", "end_date", "notes", "created_at", "updated_at") VALUES (2, 'Frederick', 'Free-Loader', 'Frederick', 'freelofw', '2012-03-04', NULL, 'This user is completely useless', '2013-08-16 12:57:30', '2013-08-16 12:57:30')
  [1m[36mFixture Insert (0.8ms)[0m  [1mINSERT INTO "users" ("id", "first_name", "last_name", "nick_name", "login_name", "start_date", "end_date", "notes", "created_at", "updated_at") VALUES (3, 'Michael', 'Winstead', 'Mike', 'winstem', '2012-02-04', '2013-08-12', 'This user lives in New York. This user is disabled in the system.', '2013-08-16 12:57:30', '2013-08-16 12:57:30')[0m
  [1m[35mFixture Insert (0.7ms)[0m  INSERT INTO "users" ("id", "first_name", "last_name", "nick_name", "login_name", "start_date", "end_date", "notes", "created_at", "updated_at") VALUES (4, 'Allison', 'Wilson', 'Alli', 'wilsona', '2012-03-04', NULL, 'Electrical engineer.', '2013-08-16 12:57:30', '2013-08-16 12:57:30')
  [1m[36m (4.3ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.6ms)[0m  ALTER TABLE "users" ENABLE TRIGGER ALL;ALTER TABLE "schema_migrations" ENABLE TRIGGER ALL
  [1m[36m (0.4ms)[0m  [1mBEGIN[0m
--------------------------------------------------------
UserTest: test: A given user should be valid initially. 
--------------------------------------------------------
  [1m[35mUser Load (1.9ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (2.0ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.5ms)[0m  ROLLBACK
  [1m[36m (0.4ms)[0m  [1mBEGIN[0m
-----------------------------------------------------------------------
UserTest: test: A given user should not be valid if first name is nil. 
-----------------------------------------------------------------------
  [1m[35mUser Load (1.0ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (0.8ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.3ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
----------------------------------------------------------------------------
UserTest: test: A given user should not be valid if first name is too long. 
----------------------------------------------------------------------------
  [1m[35mUser Load (0.9ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (0.9ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.5ms)[0m  ROLLBACK
  [1m[36m (0.4ms)[0m  [1mBEGIN[0m
-----------------------------------------------------------------------------
UserTest: test: A given user should not be valid if first name is too short. 
-----------------------------------------------------------------------------
  [1m[35mUser Load (1.0ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (1.0ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.4ms)[0m  ROLLBACK
  [1m[36m (0.4ms)[0m  [1mBEGIN[0m
----------------------------------------------------------------------
UserTest: test: A given user should not be valid if last name is nil. 
----------------------------------------------------------------------
  [1m[35mUser Load (0.8ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (0.5ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.2ms)[0m  ROLLBACK
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
---------------------------------------------------------------------------
UserTest: test: A given user should not be valid if last name is too long. 
---------------------------------------------------------------------------
  [1m[35mUser Load (0.5ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (0.5ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.3ms)[0m  ROLLBACK
  [1m[36m (0.4ms)[0m  [1mBEGIN[0m
----------------------------------------------------------------------------
UserTest: test: A given user should not be valid if last name is too short. 
----------------------------------------------------------------------------
  [1m[35mUser Load (0.8ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (0.8ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.3ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
-----------------------------------------------------------------------
UserTest: test: A given user should not be valid if login name is nil. 
-----------------------------------------------------------------------
  [1m[35mUser Load (0.8ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" IS NULL AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.4ms)[0m  ROLLBACK
  [1m[36m (0.4ms)[0m  [1mBEGIN[0m
----------------------------------------------------------------------------
UserTest: test: A given user should not be valid if login name is too long. 
----------------------------------------------------------------------------
  [1m[35mUser Load (0.9ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (1.0ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'aabbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.4ms)[0m  ROLLBACK
  [1m[36m (0.4ms)[0m  [1mBEGIN[0m
-----------------------------------------------------------------------------
UserTest: test: A given user should not be valid if login name is too short. 
-----------------------------------------------------------------------------
  [1m[35mUser Load (1.1ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (1.0ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'aaaaa' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.4ms)[0m  ROLLBACK
  [1m[36m (0.5ms)[0m  [1mBEGIN[0m
------------------------------------------------------------------------------------
UserTest: test: A given user should require a start date if an end date is present. 
------------------------------------------------------------------------------------
  [1m[35mUser Load (1.1ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (0.9ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.4ms)[0m  ROLLBACK
  [1m[36m (0.5ms)[0m  [1mBEGIN[0m
--------------------------------------------------------------------------------
UserTest: test: A given user should require an end date on or after start date. 
--------------------------------------------------------------------------------
  [1m[35mUser Load (1.1ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (1.0ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.5ms)[0m  ROLLBACK
  [1m[36m (0.5ms)[0m  [1mBEGIN[0m
---------------------------------------------------------------------
UserTest: test: User should allow first_name to be set to "Charles". 
---------------------------------------------------------------------
  [1m[35mUser Exists (0.8ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35m (0.3ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
--------------------------------------------------------------------------
UserTest: test: User should ensure first_name has a length of at least 2. 
--------------------------------------------------------------------------
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.8ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.6ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.4ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
---------------------------------------------------------------------------
UserTest: test: User should ensure first_name has a length of at most 254. 
---------------------------------------------------------------------------
  [1m[36mUser Exists (0.6ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35m (0.3ms)[0m  ROLLBACK
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
-------------------------------------------------------------------------
UserTest: test: User should ensure last_name has a length of at least 2. 
-------------------------------------------------------------------------
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (1.1ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.6ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.4ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
--------------------------------------------------------------------------
UserTest: test: User should ensure last_name has a length of at most 254. 
--------------------------------------------------------------------------
  [1m[36mUser Exists (0.6ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35m (0.3ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
--------------------------------------------------------------------------
UserTest: test: User should ensure login_name has a length of at least 6. 
--------------------------------------------------------------------------
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxx' LIMIT 1
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxx' LIMIT 1[0m
  [1m[35mUser Exists (0.5ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxx' LIMIT 1
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxx' LIMIT 1[0m
  [1m[35mUser Exists (0.6ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxx' LIMIT 1
  [1m[36m (0.2ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.2ms)[0m  BEGIN
---------------------------------------------------------------------------
UserTest: test: User should ensure login_name has a length of at most 254. 
---------------------------------------------------------------------------
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' LIMIT 1[0m
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' LIMIT 1
  [1m[36mUser Exists (0.8ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' LIMIT 1[0m
  [1m[35mUser Exists (0.6ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' LIMIT 1
  [1m[36mUser Exists (0.5ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' LIMIT 1[0m
  [1m[35m (0.3ms)[0m  ROLLBACK
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
-------------------------------------------------------------------------
UserTest: test: User should not allow first_name to be set to "charles". 
-------------------------------------------------------------------------
  [1m[35mUser Exists (0.6ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35m (0.2ms)[0m  ROLLBACK
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
--------------------------------------------------------------------------------
UserTest: test: User should require case sensitive unique value for login_name. 
--------------------------------------------------------------------------------
  [1m[35mUser Load (0.5ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'orstedma' LIMIT 1[0m
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'orstedma' LIMIT 1
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
----------------------------------------------------------
UserTest: test: User should require first_name to be set. 
----------------------------------------------------------
  [1m[36mUser Exists (4.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.5ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.4ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.4ms)[0m  BEGIN
---------------------------------------------------------
UserTest: test: User should require last_name to be set. 
---------------------------------------------------------
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.5ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
----------------------------------------------------------
UserTest: test: User should require login_name to be set. 
----------------------------------------------------------
  [1m[36mUser Exists (0.8ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.6ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.2ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.2ms)[0m  BEGIN
----------------------------------------------------------
UserTest: test: User should require start_date to be set. 
----------------------------------------------------------
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.6ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.2ms)[0m  [1mROLLBACK[0m
  [1m[36m (220.3ms)[0m  [1mDROP DATABASE IF EXISTS "ritrack_test"[0m
  [1m[35m (741.5ms)[0m  CREATE DATABASE "ritrack_test" ENCODING = 'unicode'
  [1m[36mSQL (48.4ms)[0m  [1mCREATE EXTENSION IF NOT EXISTS "plpgsql"[0m
  [1m[35m (89.1ms)[0m  CREATE TABLE "users" ("id" serial primary key, "first_name" character varying(255), "last_name" character varying(255), "nick_name" character varying(255), "login_name" character varying(255), "notes" text, "created_at" timestamp, "updated_at" timestamp, "start_date" date, "end_date" date) 
  [1m[36m (10.8ms)[0m  [1mCREATE TABLE "schema_migrations" ("version" character varying(255) NOT NULL) [0m
  [1m[35m (42.1ms)[0m  CREATE UNIQUE INDEX "unique_schema_migrations" ON "schema_migrations" ("version")
  [1m[36m (1.0ms)[0m  [1mSELECT version FROM "schema_migrations"[0m
  [1m[35m (5.8ms)[0m  INSERT INTO "schema_migrations" (version) VALUES ('20130811212425')
  [1m[36m (8.0ms)[0m  [1mINSERT INTO "schema_migrations" (version) VALUES ('20130811195620')[0m
  [1m[35m (7.9ms)[0m  INSERT INTO "schema_migrations" (version) VALUES ('20130811193133')
  [1m[36m (8.0ms)[0m  [1mINSERT INTO "schema_migrations" (version) VALUES ('20130811195557')[0m
  [1m[35mActiveRecord::SchemaMigration Load (1.0ms)[0m  SELECT "schema_migrations".* FROM "schema_migrations"
  [1m[36mActiveRecord::SchemaMigration Load (0.6ms)[0m  [1mSELECT "schema_migrations".* FROM "schema_migrations"[0m
  [1m[35m (1.1ms)[0m  ALTER TABLE "users" DISABLE TRIGGER ALL;ALTER TABLE "schema_migrations" DISABLE TRIGGER ALL
  [1m[36m (0.5ms)[0m  [1mBEGIN[0m
  [1m[35mFixture Delete (1.1ms)[0m  DELETE FROM "users"
  [1m[36mFixture Insert (0.9ms)[0m  [1mINSERT INTO "users" ("id", "first_name", "last_name", "nick_name", "login_name", "start_date", "end_date", "notes", "created_at", "updated_at") VALUES (1, 'Michael', 'Orsted', 'Mike', 'orstedma', '2012-02-04', NULL, 'This user lives in Chicago.', '2013-08-16 12:58:19', '2013-08-16 12:58:19')[0m
  [1m[35mFixture Insert (0.9ms)[0m  INSERT INTO "users" ("id", "first_name", "last_name", "nick_name", "login_name", "start_date", "end_date", "notes", "created_at", "updated_at") VALUES (2, 'Frederick', 'Free-Loader', 'Frederick', 'freelofw', '2012-03-04', NULL, 'This user is completely useless', '2013-08-16 12:58:19', '2013-08-16 12:58:19')
  [1m[36mFixture Insert (0.8ms)[0m  [1mINSERT INTO "users" ("id", "first_name", "last_name", "nick_name", "login_name", "start_date", "end_date", "notes", "created_at", "updated_at") VALUES (3, 'Michael', 'Winstead', 'Mike', 'winstem', '2012-02-04', '2013-08-12', 'This user lives in New York. This user is disabled in the system.', '2013-08-16 12:58:19', '2013-08-16 12:58:19')[0m
  [1m[35mFixture Insert (0.8ms)[0m  INSERT INTO "users" ("id", "first_name", "last_name", "nick_name", "login_name", "start_date", "end_date", "notes", "created_at", "updated_at") VALUES (4, 'Allison', 'Wilson', 'Alli', 'wilsona', '2012-03-04', NULL, 'Electrical engineer.', '2013-08-16 12:58:19', '2013-08-16 12:58:19')
  [1m[36m (7.5ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.7ms)[0m  ALTER TABLE "users" ENABLE TRIGGER ALL;ALTER TABLE "schema_migrations" ENABLE TRIGGER ALL
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
--------------------------------------------------------
UserTest: test: A given user should be valid initially. 
--------------------------------------------------------
  [1m[35mUser Load (1.9ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (1.9ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.4ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
-----------------------------------------------------------------------
UserTest: test: A given user should not be valid if first name is nil. 
-----------------------------------------------------------------------
  [1m[35mUser Load (0.8ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (0.8ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.4ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
----------------------------------------------------------------------------
UserTest: test: A given user should not be valid if first name is too long. 
----------------------------------------------------------------------------
  [1m[35mUser Load (1.0ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (1.0ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.4ms)[0m  ROLLBACK
  [1m[36m (0.4ms)[0m  [1mBEGIN[0m
-----------------------------------------------------------------------------
UserTest: test: A given user should not be valid if first name is too short. 
-----------------------------------------------------------------------------
  [1m[35mUser Load (1.1ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (1.0ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.4ms)[0m  ROLLBACK
  [1m[36m (0.4ms)[0m  [1mBEGIN[0m
----------------------------------------------------------------------
UserTest: test: A given user should not be valid if last name is nil. 
----------------------------------------------------------------------
  [1m[35mUser Load (1.0ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (1.0ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.4ms)[0m  ROLLBACK
  [1m[36m (0.4ms)[0m  [1mBEGIN[0m
---------------------------------------------------------------------------
UserTest: test: A given user should not be valid if last name is too long. 
---------------------------------------------------------------------------
  [1m[35mUser Load (1.1ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (0.9ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.4ms)[0m  ROLLBACK
  [1m[36m (0.4ms)[0m  [1mBEGIN[0m
----------------------------------------------------------------------------
UserTest: test: A given user should not be valid if last name is too short. 
----------------------------------------------------------------------------
  [1m[35mUser Load (1.0ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (1.0ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.5ms)[0m  ROLLBACK
  [1m[36m (0.5ms)[0m  [1mBEGIN[0m
-----------------------------------------------------------------------
UserTest: test: A given user should not be valid if login name is nil. 
-----------------------------------------------------------------------
  [1m[35mUser Load (1.0ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (1.0ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" IS NULL AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.4ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
----------------------------------------------------------------------------
UserTest: test: A given user should not be valid if login name is too long. 
----------------------------------------------------------------------------
  [1m[35mUser Load (1.1ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'abbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.4ms)[0m  ROLLBACK
  [1m[36m (0.5ms)[0m  [1mBEGIN[0m
-----------------------------------------------------------------------------
UserTest: test: A given user should not be valid if login name is too short. 
-----------------------------------------------------------------------------
  [1m[35mUser Load (1.1ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (0.6ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'aaaaa' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.3ms)[0m  ROLLBACK
  [1m[36m (0.4ms)[0m  [1mBEGIN[0m
------------------------------------------------------------------------------------
UserTest: test: A given user should require a start date if an end date is present. 
------------------------------------------------------------------------------------
  [1m[35mUser Load (1.0ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (0.9ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.4ms)[0m  ROLLBACK
  [1m[36m (0.4ms)[0m  [1mBEGIN[0m
--------------------------------------------------------------------------------
UserTest: test: A given user should require an end date on or after start date. 
--------------------------------------------------------------------------------
  [1m[35mUser Load (1.0ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (0.9ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.4ms)[0m  ROLLBACK
  [1m[36m (0.5ms)[0m  [1mBEGIN[0m
---------------------------------------------------------------------
UserTest: test: User should allow first_name to be set to "Charles". 
---------------------------------------------------------------------
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.6ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35m (0.4ms)[0m  ROLLBACK
  [1m[36m (0.4ms)[0m  [1mBEGIN[0m
--------------------------------------------------------------------------
UserTest: test: User should ensure first_name has a length of at least 2. 
--------------------------------------------------------------------------
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.8ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.5ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.5ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
---------------------------------------------------------------------------
UserTest: test: User should ensure first_name has a length of at most 254. 
---------------------------------------------------------------------------
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.8ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35m (0.3ms)[0m  ROLLBACK
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
-------------------------------------------------------------------------
UserTest: test: User should ensure last_name has a length of at least 2. 
-------------------------------------------------------------------------
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.6ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.2ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.2ms)[0m  BEGIN
--------------------------------------------------------------------------
UserTest: test: User should ensure last_name has a length of at most 254. 
--------------------------------------------------------------------------
  [1m[36mUser Exists (0.5ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.5ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.5ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35m (0.4ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
--------------------------------------------------------------------------
UserTest: test: User should ensure login_name has a length of at least 6. 
--------------------------------------------------------------------------
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxx' LIMIT 1
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxx' LIMIT 1[0m
  [1m[35mUser Exists (0.8ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxx' LIMIT 1
  [1m[36mUser Exists (0.6ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxx' LIMIT 1[0m
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxx' LIMIT 1
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
---------------------------------------------------------------------------
UserTest: test: User should ensure login_name has a length of at most 254. 
---------------------------------------------------------------------------
  [1m[36mUser Exists (0.8ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' LIMIT 1[0m
  [1m[35mUser Exists (0.8ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' LIMIT 1
  [1m[36mUser Exists (0.9ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' LIMIT 1[0m
  [1m[35mUser Exists (0.5ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' LIMIT 1
  [1m[36mUser Exists (0.6ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' LIMIT 1[0m
  [1m[35m (0.4ms)[0m  ROLLBACK
  [1m[36m (0.4ms)[0m  [1mBEGIN[0m
-------------------------------------------------------------------------
UserTest: test: User should not allow first_name to be set to "charles". 
-------------------------------------------------------------------------
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.5ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35m (0.3ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
--------------------------------------------------------------------------------
UserTest: test: User should require case sensitive unique value for login_name. 
--------------------------------------------------------------------------------
  [1m[35mUser Load (0.8ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (0.5ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'orstedma' LIMIT 1[0m
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'orstedma' LIMIT 1
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
----------------------------------------------------------
UserTest: test: User should require first_name to be set. 
----------------------------------------------------------
  [1m[36mUser Exists (5.3ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.4ms)[0m  BEGIN
---------------------------------------------------------
UserTest: test: User should require last_name to be set. 
---------------------------------------------------------
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.2ms)[0m  BEGIN
----------------------------------------------------------
UserTest: test: User should require login_name to be set. 
----------------------------------------------------------
  [1m[36mUser Exists (0.6ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
----------------------------------------------------------
UserTest: test: User should require start_date to be set. 
----------------------------------------------------------
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.4ms)[0m  [1mROLLBACK[0m
  [1m[36m (220.5ms)[0m  [1mDROP DATABASE IF EXISTS "ritrack_test"[0m
  [1m[35m (707.7ms)[0m  CREATE DATABASE "ritrack_test" ENCODING = 'unicode'
  [1m[36mSQL (45.5ms)[0m  [1mCREATE EXTENSION IF NOT EXISTS "plpgsql"[0m
  [1m[35m (78.5ms)[0m  CREATE TABLE "users" ("id" serial primary key, "first_name" character varying(255), "last_name" character varying(255), "nick_name" character varying(255), "login_name" character varying(255), "notes" text, "created_at" timestamp, "updated_at" timestamp, "start_date" date, "end_date" date) 
  [1m[36m (10.8ms)[0m  [1mCREATE TABLE "schema_migrations" ("version" character varying(255) NOT NULL) [0m
  [1m[35m (42.1ms)[0m  CREATE UNIQUE INDEX "unique_schema_migrations" ON "schema_migrations" ("version")
  [1m[36m (1.0ms)[0m  [1mSELECT version FROM "schema_migrations"[0m
  [1m[35m (5.9ms)[0m  INSERT INTO "schema_migrations" (version) VALUES ('20130811212425')
  [1m[36m (8.0ms)[0m  [1mINSERT INTO "schema_migrations" (version) VALUES ('20130811195620')[0m
  [1m[35m (66.2ms)[0m  INSERT INTO "schema_migrations" (version) VALUES ('20130811193133')
  [1m[36m (7.9ms)[0m  [1mINSERT INTO "schema_migrations" (version) VALUES ('20130811195557')[0m
  [1m[35mActiveRecord::SchemaMigration Load (1.1ms)[0m  SELECT "schema_migrations".* FROM "schema_migrations"
  [1m[36mActiveRecord::SchemaMigration Load (0.7ms)[0m  [1mSELECT "schema_migrations".* FROM "schema_migrations"[0m
  [1m[35m (1.1ms)[0m  ALTER TABLE "users" DISABLE TRIGGER ALL;ALTER TABLE "schema_migrations" DISABLE TRIGGER ALL
  [1m[36m (0.5ms)[0m  [1mBEGIN[0m
  [1m[35mFixture Delete (1.1ms)[0m  DELETE FROM "users"
  [1m[36mFixture Insert (1.4ms)[0m  [1mINSERT INTO "users" ("id", "first_name", "last_name", "nick_name", "login_name", "start_date", "end_date", "notes", "created_at", "updated_at") VALUES (1, 'Michael', 'Orsted', 'Mike', 'orstedma', '2012-02-04', NULL, 'This user lives in Chicago.', '2013-08-16 12:59:34', '2013-08-16 12:59:34')[0m
  [1m[35mFixture Insert (0.9ms)[0m  INSERT INTO "users" ("id", "first_name", "last_name", "nick_name", "login_name", "start_date", "end_date", "notes", "created_at", "updated_at") VALUES (2, 'Frederick', 'Free-Loader', 'Frederick', 'freelofw', '2012-03-04', NULL, 'This user is completely useless', '2013-08-16 12:59:34', '2013-08-16 12:59:34')
  [1m[36mFixture Insert (0.8ms)[0m  [1mINSERT INTO "users" ("id", "first_name", "last_name", "nick_name", "login_name", "start_date", "end_date", "notes", "created_at", "updated_at") VALUES (3, 'Michael', 'Winstead', 'Mike', 'winstem', '2012-02-04', '2013-08-12', 'This user lives in New York. This user is disabled in the system.', '2013-08-16 12:59:34', '2013-08-16 12:59:34')[0m
  [1m[35mFixture Insert (0.8ms)[0m  INSERT INTO "users" ("id", "first_name", "last_name", "nick_name", "login_name", "start_date", "end_date", "notes", "created_at", "updated_at") VALUES (4, 'Allison', 'Wilson', 'Alli', 'wilsona', '2012-03-04', NULL, 'Electrical engineer.', '2013-08-16 12:59:34', '2013-08-16 12:59:34')
  [1m[36m (2.7ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.7ms)[0m  ALTER TABLE "users" ENABLE TRIGGER ALL;ALTER TABLE "schema_migrations" ENABLE TRIGGER ALL
  [1m[36m (0.4ms)[0m  [1mBEGIN[0m
--------------------------------------------------------
UserTest: test: A given user should be valid initially. 
--------------------------------------------------------
  [1m[35mUser Load (1.7ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (1.9ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.4ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
-----------------------------------------------------------------------
UserTest: test: A given user should not be valid if first name is nil. 
-----------------------------------------------------------------------
  [1m[35mUser Load (0.8ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (0.8ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.4ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
----------------------------------------------------------------------------
UserTest: test: A given user should not be valid if first name is too long. 
----------------------------------------------------------------------------
  [1m[35mUser Load (0.8ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (0.8ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.3ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
-----------------------------------------------------------------------------
UserTest: test: A given user should not be valid if first name is too short. 
-----------------------------------------------------------------------------
  [1m[35mUser Load (0.8ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (0.8ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.3ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
----------------------------------------------------------------------
UserTest: test: A given user should not be valid if last name is nil. 
----------------------------------------------------------------------
  [1m[35mUser Load (0.8ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.3ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
---------------------------------------------------------------------------
UserTest: test: A given user should not be valid if last name is too long. 
---------------------------------------------------------------------------
  [1m[35mUser Load (0.8ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (0.8ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.3ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
----------------------------------------------------------------------------
UserTest: test: A given user should not be valid if last name is too short. 
----------------------------------------------------------------------------
  [1m[35mUser Load (0.8ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.3ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
-----------------------------------------------------------------------
UserTest: test: A given user should not be valid if login name is nil. 
-----------------------------------------------------------------------
  [1m[35mUser Load (0.8ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" IS NULL AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.3ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
----------------------------------------------------------------------------
UserTest: test: A given user should not be valid if login name is too long. 
----------------------------------------------------------------------------
  [1m[35mUser Load (0.9ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'abbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.4ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
-----------------------------------------------------------------------------
UserTest: test: A given user should not be valid if login name is too short. 
-----------------------------------------------------------------------------
  [1m[35mUser Load (0.7ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'aaaaa' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.5ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
---------------------------------------------------------------------------------------------
UserTest: test: A given user should not be valid if login name strats with a capital letter. 
---------------------------------------------------------------------------------------------
  [1m[35mUser Load (0.5ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (0.5ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'Johns276' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.4ms)[0m  ROLLBACK
  [1m[36m (0.4ms)[0m  [1mBEGIN[0m
------------------------------------------------------------------------------------
UserTest: test: A given user should require a start date if an end date is present. 
------------------------------------------------------------------------------------
  [1m[35mUser Load (0.7ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.3ms)[0m  ROLLBACK
  [1m[36m (0.4ms)[0m  [1mBEGIN[0m
--------------------------------------------------------------------------------
UserTest: test: A given user should require an end date on or after start date. 
--------------------------------------------------------------------------------
  [1m[35mUser Load (0.8ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (0.9ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.5ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
---------------------------------------------------------------------
UserTest: test: User should allow first_name to be set to "Charles". 
---------------------------------------------------------------------
  [1m[35mUser Exists (0.9ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35m (0.4ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
--------------------------------------------------------------------------
UserTest: test: User should ensure first_name has a length of at least 2. 
--------------------------------------------------------------------------
  [1m[35mUser Exists (0.9ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.5ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.6ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.6ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
---------------------------------------------------------------------------
UserTest: test: User should ensure first_name has a length of at most 254. 
---------------------------------------------------------------------------
  [1m[36mUser Exists (0.8ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.6ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.6ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35m (0.3ms)[0m  ROLLBACK
  [1m[36m (0.4ms)[0m  [1mBEGIN[0m
-------------------------------------------------------------------------
UserTest: test: User should ensure last_name has a length of at least 2. 
-------------------------------------------------------------------------
  [1m[35mUser Exists (0.8ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.9ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.8ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.5ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
--------------------------------------------------------------------------
UserTest: test: User should ensure last_name has a length of at most 254. 
--------------------------------------------------------------------------
  [1m[36mUser Exists (0.8ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.6ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.6ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.5ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35m (0.2ms)[0m  ROLLBACK
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
--------------------------------------------------------------------------
UserTest: test: User should ensure login_name has a length of at least 6. 
--------------------------------------------------------------------------
  [1m[35mUser Exists (0.8ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxx' LIMIT 1
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxx' LIMIT 1[0m
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxx' LIMIT 1
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxx' LIMIT 1[0m
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxx' LIMIT 1
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
---------------------------------------------------------------------------
UserTest: test: User should ensure login_name has a length of at most 254. 
---------------------------------------------------------------------------
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' LIMIT 1[0m
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' LIMIT 1
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' LIMIT 1[0m
  [1m[35mUser Exists (0.8ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' LIMIT 1
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' LIMIT 1[0m
  [1m[35m (0.4ms)[0m  ROLLBACK
  [1m[36m (0.4ms)[0m  [1mBEGIN[0m
-------------------------------------------------------------------------
UserTest: test: User should not allow first_name to be set to "charles". 
-------------------------------------------------------------------------
  [1m[35mUser Exists (0.9ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35m (0.4ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
--------------------------------------------------------------------------------
UserTest: test: User should require case sensitive unique value for login_name. 
--------------------------------------------------------------------------------
  [1m[35mUser Load (0.8ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'orstedma' LIMIT 1[0m
  [1m[35mUser Exists (7.4ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'orstedma' LIMIT 1
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
----------------------------------------------------------
UserTest: test: User should require first_name to be set. 
----------------------------------------------------------
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.6ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.4ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
---------------------------------------------------------
UserTest: test: User should require last_name to be set. 
---------------------------------------------------------
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.4ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
----------------------------------------------------------
UserTest: test: User should require login_name to be set. 
----------------------------------------------------------
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.8ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.4ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
----------------------------------------------------------
UserTest: test: User should require start_date to be set. 
----------------------------------------------------------
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.4ms)[0m  [1mROLLBACK[0m
  [1m[36m (227.7ms)[0m  [1mDROP DATABASE IF EXISTS "ritrack_test"[0m
  [1m[35m (657.6ms)[0m  CREATE DATABASE "ritrack_test" ENCODING = 'unicode'
  [1m[36mSQL (46.3ms)[0m  [1mCREATE EXTENSION IF NOT EXISTS "plpgsql"[0m
  [1m[35m (91.9ms)[0m  CREATE TABLE "users" ("id" serial primary key, "first_name" character varying(255), "last_name" character varying(255), "nick_name" character varying(255), "login_name" character varying(255), "notes" text, "created_at" timestamp, "updated_at" timestamp, "start_date" date, "end_date" date) 
  [1m[36m (11.2ms)[0m  [1mCREATE TABLE "schema_migrations" ("version" character varying(255) NOT NULL) [0m
  [1m[35m (50.4ms)[0m  CREATE UNIQUE INDEX "unique_schema_migrations" ON "schema_migrations" ("version")
  [1m[36m (1.0ms)[0m  [1mSELECT version FROM "schema_migrations"[0m
  [1m[35m (5.9ms)[0m  INSERT INTO "schema_migrations" (version) VALUES ('20130811212425')
  [1m[36m (7.8ms)[0m  [1mINSERT INTO "schema_migrations" (version) VALUES ('20130811195620')[0m
  [1m[35m (8.0ms)[0m  INSERT INTO "schema_migrations" (version) VALUES ('20130811193133')
  [1m[36m (7.9ms)[0m  [1mINSERT INTO "schema_migrations" (version) VALUES ('20130811195557')[0m
  [1m[35mActiveRecord::SchemaMigration Load (1.1ms)[0m  SELECT "schema_migrations".* FROM "schema_migrations"
  [1m[36mActiveRecord::SchemaMigration Load (0.6ms)[0m  [1mSELECT "schema_migrations".* FROM "schema_migrations"[0m
  [1m[35m (1.1ms)[0m  ALTER TABLE "users" DISABLE TRIGGER ALL;ALTER TABLE "schema_migrations" DISABLE TRIGGER ALL
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
  [1m[35mFixture Delete (1.0ms)[0m  DELETE FROM "users"
  [1m[36mFixture Insert (0.9ms)[0m  [1mINSERT INTO "users" ("id", "first_name", "last_name", "nick_name", "login_name", "start_date", "end_date", "notes", "created_at", "updated_at") VALUES (1, 'Michael', 'Orsted', 'Mike', 'orstedma', '2012-02-04', NULL, 'This user lives in Chicago.', '2013-08-16 13:00:34', '2013-08-16 13:00:34')[0m
  [1m[35mFixture Insert (1.0ms)[0m  INSERT INTO "users" ("id", "first_name", "last_name", "nick_name", "login_name", "start_date", "end_date", "notes", "created_at", "updated_at") VALUES (2, 'Frederick', 'Free-Loader', 'Frederick', 'freelofw', '2012-03-04', NULL, 'This user is completely useless', '2013-08-16 13:00:34', '2013-08-16 13:00:34')
  [1m[36mFixture Insert (0.8ms)[0m  [1mINSERT INTO "users" ("id", "first_name", "last_name", "nick_name", "login_name", "start_date", "end_date", "notes", "created_at", "updated_at") VALUES (3, 'Michael', 'Winstead', 'Mike', 'winstem', '2012-02-04', '2013-08-12', 'This user lives in New York. This user is disabled in the system.', '2013-08-16 13:00:34', '2013-08-16 13:00:34')[0m
  [1m[35mFixture Insert (0.8ms)[0m  INSERT INTO "users" ("id", "first_name", "last_name", "nick_name", "login_name", "start_date", "end_date", "notes", "created_at", "updated_at") VALUES (4, 'Allison', 'Wilson', 'Alli', 'wilsona', '2012-03-04', NULL, 'Electrical engineer.', '2013-08-16 13:00:34', '2013-08-16 13:00:34')
  [1m[36m (7.3ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.7ms)[0m  ALTER TABLE "users" ENABLE TRIGGER ALL;ALTER TABLE "schema_migrations" ENABLE TRIGGER ALL
  [1m[36m (0.4ms)[0m  [1mBEGIN[0m
--------------------------------------------------------
UserTest: test: A given user should be valid initially. 
--------------------------------------------------------
  [1m[35mUser Load (1.7ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (2.0ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.3ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
-----------------------------------------------------------------------
UserTest: test: A given user should not be valid if first name is nil. 
-----------------------------------------------------------------------
  [1m[35mUser Load (0.8ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (0.8ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.3ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
----------------------------------------------------------------------------
UserTest: test: A given user should not be valid if first name is too long. 
----------------------------------------------------------------------------
  [1m[35mUser Load (1.1ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (0.9ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.4ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
-----------------------------------------------------------------------------
UserTest: test: A given user should not be valid if first name is too short. 
-----------------------------------------------------------------------------
  [1m[35mUser Load (0.9ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (0.9ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.3ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
----------------------------------------------------------------------
UserTest: test: A given user should not be valid if last name is nil. 
----------------------------------------------------------------------
  [1m[35mUser Load (0.9ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (1.0ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.4ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
---------------------------------------------------------------------------
UserTest: test: A given user should not be valid if last name is too long. 
---------------------------------------------------------------------------
  [1m[35mUser Load (1.0ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (0.9ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.5ms)[0m  ROLLBACK
  [1m[36m (0.4ms)[0m  [1mBEGIN[0m
----------------------------------------------------------------------------
UserTest: test: A given user should not be valid if last name is too short. 
----------------------------------------------------------------------------
  [1m[35mUser Load (1.1ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (1.0ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.5ms)[0m  ROLLBACK
  [1m[36m (0.6ms)[0m  [1mBEGIN[0m
---------------------------------------------------------------------------------------------
UserTest: test: A given user should not be valid if login name has non-alphanumeric letters. 
---------------------------------------------------------------------------------------------
  [1m[35mUser Load (1.1ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (1.0ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'johns-276' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.5ms)[0m  ROLLBACK
  [1m[36m (0.4ms)[0m  [1mBEGIN[0m
-----------------------------------------------------------------------
UserTest: test: A given user should not be valid if login name is nil. 
-----------------------------------------------------------------------
  [1m[35mUser Load (1.2ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (1.0ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" IS NULL AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.5ms)[0m  ROLLBACK
  [1m[36m (0.4ms)[0m  [1mBEGIN[0m
----------------------------------------------------------------------------
UserTest: test: A given user should not be valid if login name is too long. 
----------------------------------------------------------------------------
  [1m[35mUser Load (1.1ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (0.9ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'abbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.5ms)[0m  ROLLBACK
  [1m[36m (0.5ms)[0m  [1mBEGIN[0m
-----------------------------------------------------------------------------
UserTest: test: A given user should not be valid if login name is too short. 
-----------------------------------------------------------------------------
  [1m[35mUser Load (1.1ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (0.9ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'aaaaa' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.5ms)[0m  ROLLBACK
  [1m[36m (0.5ms)[0m  [1mBEGIN[0m
---------------------------------------------------------------------------------------------
UserTest: test: A given user should not be valid if login name strats with a capital letter. 
---------------------------------------------------------------------------------------------
  [1m[35mUser Load (0.9ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (0.8ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'Johns276' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.5ms)[0m  ROLLBACK
  [1m[36m (0.4ms)[0m  [1mBEGIN[0m
------------------------------------------------------------------------------------
UserTest: test: A given user should require a start date if an end date is present. 
------------------------------------------------------------------------------------
  [1m[35mUser Load (0.8ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (0.9ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.4ms)[0m  ROLLBACK
  [1m[36m (0.4ms)[0m  [1mBEGIN[0m
--------------------------------------------------------------------------------
UserTest: test: A given user should require an end date on or after start date. 
--------------------------------------------------------------------------------
  [1m[35mUser Load (1.0ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (1.0ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.5ms)[0m  ROLLBACK
  [1m[36m (0.4ms)[0m  [1mBEGIN[0m
---------------------------------------------------------------------
UserTest: test: User should allow first_name to be set to "Charles". 
---------------------------------------------------------------------
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.6ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35m (0.4ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
--------------------------------------------------------------------------
UserTest: test: User should ensure first_name has a length of at least 2. 
--------------------------------------------------------------------------
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.6ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.8ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
---------------------------------------------------------------------------
UserTest: test: User should ensure first_name has a length of at most 254. 
---------------------------------------------------------------------------
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.8ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35m (0.4ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
-------------------------------------------------------------------------
UserTest: test: User should ensure last_name has a length of at least 2. 
-------------------------------------------------------------------------
  [1m[35mUser Exists (0.9ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.9ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.5ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.6ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.5ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.4ms)[0m  BEGIN
--------------------------------------------------------------------------
UserTest: test: User should ensure last_name has a length of at most 254. 
--------------------------------------------------------------------------
  [1m[36mUser Exists (0.6ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.6ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.8ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35m (0.3ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
--------------------------------------------------------------------------
UserTest: test: User should ensure login_name has a length of at least 6. 
--------------------------------------------------------------------------
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxx' LIMIT 1
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxx' LIMIT 1[0m
  [1m[35mUser Exists (0.9ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxx' LIMIT 1
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxx' LIMIT 1[0m
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxx' LIMIT 1
  [1m[36m (0.4ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.4ms)[0m  BEGIN
---------------------------------------------------------------------------
UserTest: test: User should ensure login_name has a length of at most 254. 
---------------------------------------------------------------------------
  [1m[36mUser Exists (0.9ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' LIMIT 1[0m
  [1m[35mUser Exists (0.6ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' LIMIT 1
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' LIMIT 1[0m
  [1m[35mUser Exists (0.8ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' LIMIT 1
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' LIMIT 1[0m
  [1m[35m (0.3ms)[0m  ROLLBACK
  [1m[36m (0.4ms)[0m  [1mBEGIN[0m
-------------------------------------------------------------------------
UserTest: test: User should not allow first_name to be set to "charles". 
-------------------------------------------------------------------------
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.6ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35m (0.3ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
--------------------------------------------------------------------------------
UserTest: test: User should require case sensitive unique value for login_name. 
--------------------------------------------------------------------------------
  [1m[35mUser Load (1.0ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'orstedma' LIMIT 1[0m
  [1m[35mUser Exists (5.4ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'orstedma' LIMIT 1
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
----------------------------------------------------------
UserTest: test: User should require first_name to be set. 
----------------------------------------------------------
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.6ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
---------------------------------------------------------
UserTest: test: User should require last_name to be set. 
---------------------------------------------------------
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
----------------------------------------------------------
UserTest: test: User should require login_name to be set. 
----------------------------------------------------------
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
----------------------------------------------------------
UserTest: test: User should require start_date to be set. 
----------------------------------------------------------
  [1m[36mUser Exists (0.9ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.8ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[36m (219.4ms)[0m  [1mDROP DATABASE IF EXISTS "ritrack_test"[0m
  [1m[35m (757.8ms)[0m  CREATE DATABASE "ritrack_test" ENCODING = 'unicode'
  [1m[36mSQL (45.4ms)[0m  [1mCREATE EXTENSION IF NOT EXISTS "plpgsql"[0m
  [1m[35m (79.5ms)[0m  CREATE TABLE "users" ("id" serial primary key, "first_name" character varying(255), "last_name" character varying(255), "nick_name" character varying(255), "login_name" character varying(255), "notes" text, "created_at" timestamp, "updated_at" timestamp, "start_date" date, "end_date" date) 
  [1m[36m (10.6ms)[0m  [1mCREATE TABLE "schema_migrations" ("version" character varying(255) NOT NULL) [0m
  [1m[35m (50.5ms)[0m  CREATE UNIQUE INDEX "unique_schema_migrations" ON "schema_migrations" ("version")
  [1m[36m (0.9ms)[0m  [1mSELECT version FROM "schema_migrations"[0m
  [1m[35m (5.9ms)[0m  INSERT INTO "schema_migrations" (version) VALUES ('20130811212425')
  [1m[36m (7.9ms)[0m  [1mINSERT INTO "schema_migrations" (version) VALUES ('20130811195620')[0m
  [1m[35m (7.9ms)[0m  INSERT INTO "schema_migrations" (version) VALUES ('20130811193133')
  [1m[36m (7.9ms)[0m  [1mINSERT INTO "schema_migrations" (version) VALUES ('20130811195557')[0m
  [1m[35mActiveRecord::SchemaMigration Load (1.0ms)[0m  SELECT "schema_migrations".* FROM "schema_migrations"
  [1m[36mActiveRecord::SchemaMigration Load (0.6ms)[0m  [1mSELECT "schema_migrations".* FROM "schema_migrations"[0m
  [1m[35m (0.9ms)[0m  ALTER TABLE "users" DISABLE TRIGGER ALL;ALTER TABLE "schema_migrations" DISABLE TRIGGER ALL
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
  [1m[35mFixture Delete (0.9ms)[0m  DELETE FROM "users"
  [1m[36mFixture Insert (1.2ms)[0m  [1mINSERT INTO "users" ("id", "first_name", "last_name", "nick_name", "login_name", "start_date", "end_date", "notes", "created_at", "updated_at") VALUES (1, 'Michael', 'Orsted', 'Mike', 'orstedma', '2012-02-04', NULL, 'This user lives in Chicago.', '2013-08-16 13:01:51', '2013-08-16 13:01:51')[0m
  [1m[35mFixture Insert (0.8ms)[0m  INSERT INTO "users" ("id", "first_name", "last_name", "nick_name", "login_name", "start_date", "end_date", "notes", "created_at", "updated_at") VALUES (2, 'Frederick', 'Free-Loader', 'Frederick', 'freelofw', '2012-03-04', NULL, 'This user is completely useless', '2013-08-16 13:01:51', '2013-08-16 13:01:51')
  [1m[36mFixture Insert (0.8ms)[0m  [1mINSERT INTO "users" ("id", "first_name", "last_name", "nick_name", "login_name", "start_date", "end_date", "notes", "created_at", "updated_at") VALUES (3, 'Michael', 'Winstead', 'Mike', 'winstem', '2012-02-04', '2013-08-12', 'This user lives in New York. This user is disabled in the system.', '2013-08-16 13:01:51', '2013-08-16 13:01:51')[0m
  [1m[35mFixture Insert (0.6ms)[0m  INSERT INTO "users" ("id", "first_name", "last_name", "nick_name", "login_name", "start_date", "end_date", "notes", "created_at", "updated_at") VALUES (4, 'Allison', 'Wilson', 'Alli', 'wilsona', '2012-03-04', NULL, 'Electrical engineer.', '2013-08-16 13:01:51', '2013-08-16 13:01:51')
  [1m[36m (9.9ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.6ms)[0m  ALTER TABLE "users" ENABLE TRIGGER ALL;ALTER TABLE "schema_migrations" ENABLE TRIGGER ALL
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
--------------------------------------------------------
UserTest: test: A given user should be valid initially. 
--------------------------------------------------------
  [1m[35mUser Load (1.8ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (2.0ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.3ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
-----------------------------------------------------------------------
UserTest: test: A given user should not be valid if first name is nil. 
-----------------------------------------------------------------------
  [1m[35mUser Load (0.8ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (0.8ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.3ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
----------------------------------------------------------------------------
UserTest: test: A given user should not be valid if first name is too long. 
----------------------------------------------------------------------------
  [1m[35mUser Load (0.9ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (0.8ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.3ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
-----------------------------------------------------------------------------
UserTest: test: A given user should not be valid if first name is too short. 
-----------------------------------------------------------------------------
  [1m[35mUser Load (0.9ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.3ms)[0m  ROLLBACK
  [1m[36m (0.4ms)[0m  [1mBEGIN[0m
----------------------------------------------------------------------
UserTest: test: A given user should not be valid if last name is nil. 
----------------------------------------------------------------------
  [1m[35mUser Load (0.8ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (0.8ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.3ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
---------------------------------------------------------------------------
UserTest: test: A given user should not be valid if last name is too long. 
---------------------------------------------------------------------------
  [1m[35mUser Load (0.8ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.3ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
----------------------------------------------------------------------------
UserTest: test: A given user should not be valid if last name is too short. 
----------------------------------------------------------------------------
  [1m[35mUser Load (0.8ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (0.8ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.3ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
---------------------------------------------------------------------------------------------
UserTest: test: A given user should not be valid if login name has non-alphanumeric letters. 
---------------------------------------------------------------------------------------------
  [1m[35mUser Load (0.9ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (0.8ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'johns-276' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.3ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
-----------------------------------------------------------------------
UserTest: test: A given user should not be valid if login name is nil. 
-----------------------------------------------------------------------
  [1m[35mUser Load (0.8ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" IS NULL AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.3ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
----------------------------------------------------------------------------
UserTest: test: A given user should not be valid if login name is too long. 
----------------------------------------------------------------------------
  [1m[35mUser Load (0.9ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (0.6ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'abbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.3ms)[0m  ROLLBACK
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
-----------------------------------------------------------------------------
UserTest: test: A given user should not be valid if login name is too short. 
-----------------------------------------------------------------------------
  [1m[35mUser Load (0.5ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (0.5ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'aaaaa' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.3ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
---------------------------------------------------------------------------------------------
UserTest: test: A given user should not be valid if login name strats with a capital letter. 
---------------------------------------------------------------------------------------------
  [1m[35mUser Load (0.9ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (0.9ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'Johns276' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.5ms)[0m  ROLLBACK
  [1m[36m (0.4ms)[0m  [1mBEGIN[0m
------------------------------------------------------------------------------------
UserTest: test: A given user should require a start date if an end date is present. 
------------------------------------------------------------------------------------
  [1m[35mUser Load (0.8ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (0.9ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.5ms)[0m  ROLLBACK
  [1m[36m (0.4ms)[0m  [1mBEGIN[0m
--------------------------------------------------------------------------------
UserTest: test: A given user should require an end date on or after start date. 
--------------------------------------------------------------------------------
  [1m[35mUser Load (1.0ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (1.0ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.4ms)[0m  ROLLBACK
  [1m[36m (0.4ms)[0m  [1mBEGIN[0m
---------------------------------------------------------------------
UserTest: test: User should allow first_name to be set to "Charles". 
---------------------------------------------------------------------
  [1m[35mUser Exists (0.8ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.5ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35m (0.3ms)[0m  ROLLBACK
  [1m[36m (0.4ms)[0m  [1mBEGIN[0m
--------------------------------------------------------------------------
UserTest: test: User should ensure first_name has a length of at least 2. 
--------------------------------------------------------------------------
  [1m[35mUser Exists (0.5ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.6ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
---------------------------------------------------------------------------
UserTest: test: User should ensure first_name has a length of at most 254. 
---------------------------------------------------------------------------
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.6ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.6ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35m (0.3ms)[0m  ROLLBACK
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
-------------------------------------------------------------------------
UserTest: test: User should ensure last_name has a length of at least 2. 
-------------------------------------------------------------------------
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.2ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
--------------------------------------------------------------------------
UserTest: test: User should ensure last_name has a length of at most 254. 
--------------------------------------------------------------------------
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.5ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.5ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.6ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35m (0.2ms)[0m  ROLLBACK
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
--------------------------------------------------------------------------
UserTest: test: User should ensure login_name has a length of at least 6. 
--------------------------------------------------------------------------
  [1m[35mUser Exists (0.5ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxx' LIMIT 1
  [1m[36mUser Exists (0.8ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxx' LIMIT 1[0m
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxx' LIMIT 1
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxx' LIMIT 1[0m
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxx' LIMIT 1
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
---------------------------------------------------------------------------
UserTest: test: User should ensure login_name has a length of at most 254. 
---------------------------------------------------------------------------
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' LIMIT 1[0m
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' LIMIT 1
  [1m[36mUser Exists (0.9ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' LIMIT 1[0m
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' LIMIT 1
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' LIMIT 1[0m
  [1m[35m (0.3ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
-------------------------------------------------------------------------
UserTest: test: User should not allow first_name to be set to "charles". 
-------------------------------------------------------------------------
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.9ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35m (0.4ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
--------------------------------------------------------------------------------
UserTest: test: User should require case sensitive unique value for login_name. 
--------------------------------------------------------------------------------
  [1m[35mUser Load (0.8ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (0.8ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'orstedma' LIMIT 1[0m
  [1m[35mUser Exists (9.2ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'orstedma' LIMIT 1
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
----------------------------------------------------------
UserTest: test: User should require first_name to be set. 
----------------------------------------------------------
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.6ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.4ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.4ms)[0m  BEGIN
---------------------------------------------------------
UserTest: test: User should require last_name to be set. 
---------------------------------------------------------
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.8ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
----------------------------------------------------------
UserTest: test: User should require login_name to be set. 
----------------------------------------------------------
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.6ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.2ms)[0m  BEGIN
----------------------------------------------------------
UserTest: test: User should require start_date to be set. 
----------------------------------------------------------
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.5ms)[0m  [1mROLLBACK[0m
  [1m[36m (120.3ms)[0m  [1mDROP DATABASE IF EXISTS "ritrack_test"[0m
  [1m[35m (766.6ms)[0m  CREATE DATABASE "ritrack_test" ENCODING = 'unicode'
  [1m[36mSQL (44.5ms)[0m  [1mCREATE EXTENSION IF NOT EXISTS "plpgsql"[0m
  [1m[35m (105.9ms)[0m  CREATE TABLE "users" ("id" serial primary key, "first_name" character varying(255), "last_name" character varying(255), "nick_name" character varying(255), "login_name" character varying(255), "notes" text, "created_at" timestamp, "updated_at" timestamp, "start_date" date, "end_date" date) 
  [1m[36m (10.6ms)[0m  [1mCREATE TABLE "schema_migrations" ("version" character varying(255) NOT NULL) [0m
  [1m[35m (50.6ms)[0m  CREATE UNIQUE INDEX "unique_schema_migrations" ON "schema_migrations" ("version")
  [1m[36m (1.0ms)[0m  [1mSELECT version FROM "schema_migrations"[0m
  [1m[35m (5.9ms)[0m  INSERT INTO "schema_migrations" (version) VALUES ('20130811212425')
  [1m[36m (7.9ms)[0m  [1mINSERT INTO "schema_migrations" (version) VALUES ('20130811195620')[0m
  [1m[35m (8.0ms)[0m  INSERT INTO "schema_migrations" (version) VALUES ('20130811193133')
  [1m[36m (8.0ms)[0m  [1mINSERT INTO "schema_migrations" (version) VALUES ('20130811195557')[0m
  [1m[35mActiveRecord::SchemaMigration Load (1.1ms)[0m  SELECT "schema_migrations".* FROM "schema_migrations"
  [1m[36mActiveRecord::SchemaMigration Load (0.6ms)[0m  [1mSELECT "schema_migrations".* FROM "schema_migrations"[0m
  [1m[35m (1.1ms)[0m  ALTER TABLE "users" DISABLE TRIGGER ALL;ALTER TABLE "schema_migrations" DISABLE TRIGGER ALL
  [1m[36m (0.4ms)[0m  [1mBEGIN[0m
  [1m[35mFixture Delete (1.1ms)[0m  DELETE FROM "users"
  [1m[36mFixture Insert (0.9ms)[0m  [1mINSERT INTO "users" ("id", "first_name", "last_name", "nick_name", "login_name", "start_date", "end_date", "notes", "created_at", "updated_at") VALUES (1, 'Michael', 'Orsted', 'Mike', 'orstedma', '2012-02-04', NULL, 'This user lives in Chicago.', '2013-08-16 13:11:41', '2013-08-16 13:11:41')[0m
  [1m[35mFixture Insert (0.9ms)[0m  INSERT INTO "users" ("id", "first_name", "last_name", "nick_name", "login_name", "start_date", "end_date", "notes", "created_at", "updated_at") VALUES (2, 'Frederick', 'Free-Loader', 'Frederick', 'freelofw', '2012-03-04', NULL, 'This user is completely useless', '2013-08-16 13:11:41', '2013-08-16 13:11:41')
  [1m[36mFixture Insert (0.8ms)[0m  [1mINSERT INTO "users" ("id", "first_name", "last_name", "nick_name", "login_name", "start_date", "end_date", "notes", "created_at", "updated_at") VALUES (3, 'Michael', 'Winstead', 'Mike', 'winstem', '2012-02-04', '2013-08-12', 'This user lives in New York. This user is disabled in the system.', '2013-08-16 13:11:41', '2013-08-16 13:11:41')[0m
  [1m[35mFixture Insert (0.8ms)[0m  INSERT INTO "users" ("id", "first_name", "last_name", "nick_name", "login_name", "start_date", "end_date", "notes", "created_at", "updated_at") VALUES (4, 'Allison', 'Wilson', 'Alli', 'wilsona', '2012-03-04', NULL, 'Electrical engineer.', '2013-08-16 13:11:41', '2013-08-16 13:11:41')
  [1m[36m (7.9ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.7ms)[0m  ALTER TABLE "users" ENABLE TRIGGER ALL;ALTER TABLE "schema_migrations" ENABLE TRIGGER ALL
  [1m[36m (0.4ms)[0m  [1mBEGIN[0m
--------------------------------------------------------
UserTest: test: A given user should be valid initially. 
--------------------------------------------------------
  [1m[35mUser Load (1.7ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (2.0ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.3ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
-----------------------------------------------------------------------
UserTest: test: A given user should not be valid if first name is nil. 
-----------------------------------------------------------------------
  [1m[35mUser Load (0.8ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (0.9ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.3ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
----------------------------------------------------------------------------
UserTest: test: A given user should not be valid if first name is too long. 
----------------------------------------------------------------------------
  [1m[35mUser Load (0.8ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (0.9ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.4ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
-----------------------------------------------------------------------------
UserTest: test: A given user should not be valid if first name is too short. 
-----------------------------------------------------------------------------
  [1m[35mUser Load (0.8ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (1.0ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.4ms)[0m  ROLLBACK
  [1m[36m (0.4ms)[0m  [1mBEGIN[0m
------------------------------------------------------------------------------------------------
UserTest: test: A given user should not be valid if first name starts with a lower case letter. 
------------------------------------------------------------------------------------------------
  [1m[35mUser Load (1.0ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (0.9ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.4ms)[0m  ROLLBACK
  [1m[36m (0.4ms)[0m  [1mBEGIN[0m
----------------------------------------------------------------------
UserTest: test: A given user should not be valid if last name is nil. 
----------------------------------------------------------------------
  [1m[35mUser Load (1.0ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (0.9ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.5ms)[0m  ROLLBACK
  [1m[36m (0.4ms)[0m  [1mBEGIN[0m
---------------------------------------------------------------------------
UserTest: test: A given user should not be valid if last name is too long. 
---------------------------------------------------------------------------
  [1m[35mUser Load (1.0ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (0.9ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.4ms)[0m  ROLLBACK
  [1m[36m (0.4ms)[0m  [1mBEGIN[0m
----------------------------------------------------------------------------
UserTest: test: A given user should not be valid if last name is too short. 
----------------------------------------------------------------------------
  [1m[35mUser Load (1.1ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (1.0ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.4ms)[0m  ROLLBACK
  [1m[36m (0.4ms)[0m  [1mBEGIN[0m
---------------------------------------------------------------------------------------------
UserTest: test: A given user should not be valid if login name has non-alphanumeric letters. 
---------------------------------------------------------------------------------------------
  [1m[35mUser Load (1.1ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (1.0ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'johns-276' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.5ms)[0m  ROLLBACK
  [1m[36m (0.4ms)[0m  [1mBEGIN[0m
-----------------------------------------------------------------------
UserTest: test: A given user should not be valid if login name is nil. 
-----------------------------------------------------------------------
  [1m[35mUser Load (1.0ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (0.9ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" IS NULL AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.5ms)[0m  ROLLBACK
  [1m[36m (0.4ms)[0m  [1mBEGIN[0m
----------------------------------------------------------------------------
UserTest: test: A given user should not be valid if login name is too long. 
----------------------------------------------------------------------------
  [1m[35mUser Load (0.7ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'abbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.2ms)[0m  ROLLBACK
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
-----------------------------------------------------------------------------
UserTest: test: A given user should not be valid if login name is too short. 
-----------------------------------------------------------------------------
  [1m[35mUser Load (0.8ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (0.8ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'aaaaa' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.5ms)[0m  ROLLBACK
  [1m[36m (0.4ms)[0m  [1mBEGIN[0m
---------------------------------------------------------------------------------------------
UserTest: test: A given user should not be valid if login name strats with a capital letter. 
---------------------------------------------------------------------------------------------
  [1m[35mUser Load (0.9ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (0.9ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'Johns276' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.4ms)[0m  ROLLBACK
  [1m[36m (0.4ms)[0m  [1mBEGIN[0m
------------------------------------------------------------------------------------
UserTest: test: A given user should require a start date if an end date is present. 
------------------------------------------------------------------------------------
  [1m[35mUser Load (1.1ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (1.0ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.5ms)[0m  ROLLBACK
  [1m[36m (0.4ms)[0m  [1mBEGIN[0m
--------------------------------------------------------------------------------
UserTest: test: A given user should require an end date on or after start date. 
--------------------------------------------------------------------------------
  [1m[35mUser Load (1.2ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (1.0ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.4ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
---------------------------------------------------------------------
UserTest: test: User should allow first_name to be set to "Charles". 
---------------------------------------------------------------------
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.8ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35m (0.4ms)[0m  ROLLBACK
  [1m[36m (0.4ms)[0m  [1mBEGIN[0m
--------------------------------------------------------------------------
UserTest: test: User should ensure first_name has a length of at least 2. 
--------------------------------------------------------------------------
  [1m[35mUser Exists (0.9ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.5ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.8ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.5ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
---------------------------------------------------------------------------
UserTest: test: User should ensure first_name has a length of at most 254. 
---------------------------------------------------------------------------
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.6ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.6ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.5ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35m (0.4ms)[0m  ROLLBACK
  [1m[36m (0.4ms)[0m  [1mBEGIN[0m
-------------------------------------------------------------------------
UserTest: test: User should ensure last_name has a length of at least 2. 
-------------------------------------------------------------------------
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.8ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.6ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.4ms)[0m  BEGIN
--------------------------------------------------------------------------
UserTest: test: User should ensure last_name has a length of at most 254. 
--------------------------------------------------------------------------
  [1m[36mUser Exists (0.8ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.6ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.6ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35m (0.3ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
--------------------------------------------------------------------------
UserTest: test: User should ensure login_name has a length of at least 6. 
--------------------------------------------------------------------------
  [1m[35mUser Exists (0.5ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxx' LIMIT 1
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxx' LIMIT 1[0m
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxx' LIMIT 1
  [1m[36mUser Exists (0.8ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxx' LIMIT 1[0m
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxx' LIMIT 1
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
---------------------------------------------------------------------------
UserTest: test: User should ensure login_name has a length of at most 254. 
---------------------------------------------------------------------------
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' LIMIT 1[0m
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' LIMIT 1
  [1m[36mUser Exists (0.6ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' LIMIT 1[0m
  [1m[35mUser Exists (0.6ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' LIMIT 1
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' LIMIT 1[0m
  [1m[35m (0.5ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
-------------------------------------------------------------------------
UserTest: test: User should not allow first_name to be set to "charles". 
-------------------------------------------------------------------------
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35m (0.3ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
--------------------------------------------------------------------------------
UserTest: test: User should require case sensitive unique value for login_name. 
--------------------------------------------------------------------------------
  [1m[35mUser Load (0.9ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (0.8ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'orstedma' LIMIT 1[0m
  [1m[35mUser Exists (5.5ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'orstedma' LIMIT 1
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
----------------------------------------------------------
UserTest: test: User should require first_name to be set. 
----------------------------------------------------------
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
---------------------------------------------------------
UserTest: test: User should require last_name to be set. 
---------------------------------------------------------
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.6ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
----------------------------------------------------------
UserTest: test: User should require login_name to be set. 
----------------------------------------------------------
  [1m[36mUser Exists (0.6ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.6ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
----------------------------------------------------------
UserTest: test: User should require start_date to be set. 
----------------------------------------------------------
  [1m[36mUser Exists (0.6ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.6ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.4ms)[0m  [1mROLLBACK[0m
  [1m[36m (223.8ms)[0m  [1mDROP DATABASE IF EXISTS "ritrack_test"[0m
  [1m[35m (699.4ms)[0m  CREATE DATABASE "ritrack_test" ENCODING = 'unicode'
  [1m[36mSQL (46.0ms)[0m  [1mCREATE EXTENSION IF NOT EXISTS "plpgsql"[0m
  [1m[35m (101.3ms)[0m  CREATE TABLE "users" ("id" serial primary key, "first_name" character varying(255), "last_name" character varying(255), "nick_name" character varying(255), "login_name" character varying(255), "notes" text, "created_at" timestamp, "updated_at" timestamp, "start_date" date, "end_date" date) 
  [1m[36m (10.6ms)[0m  [1mCREATE TABLE "schema_migrations" ("version" character varying(255) NOT NULL) [0m
  [1m[35m (58.9ms)[0m  CREATE UNIQUE INDEX "unique_schema_migrations" ON "schema_migrations" ("version")
  [1m[36m (1.0ms)[0m  [1mSELECT version FROM "schema_migrations"[0m
  [1m[35m (5.7ms)[0m  INSERT INTO "schema_migrations" (version) VALUES ('20130811212425')
  [1m[36m (7.8ms)[0m  [1mINSERT INTO "schema_migrations" (version) VALUES ('20130811195620')[0m
  [1m[35m (8.0ms)[0m  INSERT INTO "schema_migrations" (version) VALUES ('20130811193133')
  [1m[36m (7.9ms)[0m  [1mINSERT INTO "schema_migrations" (version) VALUES ('20130811195557')[0m
  [1m[35mActiveRecord::SchemaMigration Load (1.1ms)[0m  SELECT "schema_migrations".* FROM "schema_migrations"
  [1m[36mActiveRecord::SchemaMigration Load (0.8ms)[0m  [1mSELECT "schema_migrations".* FROM "schema_migrations"[0m
  [1m[35m (1.1ms)[0m  ALTER TABLE "users" DISABLE TRIGGER ALL;ALTER TABLE "schema_migrations" DISABLE TRIGGER ALL
  [1m[36m (0.5ms)[0m  [1mBEGIN[0m
  [1m[35mFixture Delete (1.2ms)[0m  DELETE FROM "users"
  [1m[36mFixture Insert (1.1ms)[0m  [1mINSERT INTO "users" ("id", "first_name", "last_name", "nick_name", "login_name", "start_date", "end_date", "notes", "created_at", "updated_at") VALUES (1, 'Michael', 'Orsted', 'Mike', 'orstedma', '2012-02-04', NULL, 'This user lives in Chicago.', '2013-08-16 13:16:06', '2013-08-16 13:16:06')[0m
  [1m[35mFixture Insert (0.7ms)[0m  INSERT INTO "users" ("id", "first_name", "last_name", "nick_name", "login_name", "start_date", "end_date", "notes", "created_at", "updated_at") VALUES (2, 'Frederick', 'Free-Loader', 'Frederick', 'freelofw', '2012-03-04', NULL, 'This user is completely useless', '2013-08-16 13:16:06', '2013-08-16 13:16:06')
  [1m[36mFixture Insert (0.6ms)[0m  [1mINSERT INTO "users" ("id", "first_name", "last_name", "nick_name", "login_name", "start_date", "end_date", "notes", "created_at", "updated_at") VALUES (3, 'Michael', 'Winstead', 'Mike', 'winstem', '2012-02-04', '2013-08-12', 'This user lives in New York. This user is disabled in the system.', '2013-08-16 13:16:06', '2013-08-16 13:16:06')[0m
  [1m[35mFixture Insert (0.5ms)[0m  INSERT INTO "users" ("id", "first_name", "last_name", "nick_name", "login_name", "start_date", "end_date", "notes", "created_at", "updated_at") VALUES (4, 'Allison', 'Wilson', 'Alli', 'wilsona', '2012-03-04', NULL, 'Electrical engineer.', '2013-08-16 13:16:06', '2013-08-16 13:16:06')
  [1m[36m (8.3ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.6ms)[0m  ALTER TABLE "users" ENABLE TRIGGER ALL;ALTER TABLE "schema_migrations" ENABLE TRIGGER ALL
  [1m[36m (0.4ms)[0m  [1mBEGIN[0m
--------------------------------------------------------
UserTest: test: A given user should be valid initially. 
--------------------------------------------------------
  [1m[35mUser Load (1.7ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (1.9ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.4ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
-----------------------------------------------------------------------
UserTest: test: A given user should not be valid if first name is nil. 
-----------------------------------------------------------------------
  [1m[35mUser Load (0.7ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (0.9ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.3ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
----------------------------------------------------------------------------
UserTest: test: A given user should not be valid if first name is too long. 
----------------------------------------------------------------------------
  [1m[35mUser Load (0.8ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.3ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
-----------------------------------------------------------------------------
UserTest: test: A given user should not be valid if first name is too short. 
-----------------------------------------------------------------------------
  [1m[35mUser Load (0.7ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.3ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
------------------------------------------------------------------------------------------------
UserTest: test: A given user should not be valid if first name starts with a lower case letter. 
------------------------------------------------------------------------------------------------
  [1m[35mUser Load (1.0ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (0.8ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.4ms)[0m  ROLLBACK
  [1m[36m (0.4ms)[0m  [1mBEGIN[0m
----------------------------------------------------------------------
UserTest: test: A given user should not be valid if last name is nil. 
----------------------------------------------------------------------
  [1m[35mUser Load (1.0ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (0.9ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.4ms)[0m  ROLLBACK
  [1m[36m (0.4ms)[0m  [1mBEGIN[0m
---------------------------------------------------------------------------
UserTest: test: A given user should not be valid if last name is too long. 
---------------------------------------------------------------------------
  [1m[35mUser Load (1.1ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (1.0ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.4ms)[0m  ROLLBACK
  [1m[36m (0.4ms)[0m  [1mBEGIN[0m
----------------------------------------------------------------------------
UserTest: test: A given user should not be valid if last name is too short. 
----------------------------------------------------------------------------
  [1m[35mUser Load (1.0ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (0.9ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.4ms)[0m  ROLLBACK
  [1m[36m (0.4ms)[0m  [1mBEGIN[0m
---------------------------------------------------------------------------------------------
UserTest: test: A given user should not be valid if login name has non-alphanumeric letters. 
---------------------------------------------------------------------------------------------
  [1m[35mUser Load (1.0ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (0.9ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'johns-276' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.4ms)[0m  ROLLBACK
  [1m[36m (0.4ms)[0m  [1mBEGIN[0m
-------------------------------------------------------------------------------
UserTest: test: A given user should not be valid if login name is a duplicate. 
-------------------------------------------------------------------------------
  [1m[35mUser Load (1.1ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36m (0.5ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.4ms)[0m  BEGIN
-----------------------------------------------------------------------
UserTest: test: A given user should not be valid if login name is nil. 
-----------------------------------------------------------------------
  [1m[36mUser Load (1.0ms)[0m  [1mSELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35mUser Exists (0.9ms)[0m  SELECT 1 AS one FROM "users" WHERE ("users"."login_name" IS NULL AND "users"."id" != 1) LIMIT 1
  [1m[36m (0.4ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.4ms)[0m  BEGIN
----------------------------------------------------------------------------
UserTest: test: A given user should not be valid if login name is too long. 
----------------------------------------------------------------------------
  [1m[36mUser Load (1.0ms)[0m  [1mSELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35mUser Exists (0.9ms)[0m  SELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'abbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb' AND "users"."id" != 1) LIMIT 1
  [1m[36m (0.4ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
-----------------------------------------------------------------------------
UserTest: test: A given user should not be valid if login name is too short. 
-----------------------------------------------------------------------------
  [1m[36mUser Load (1.1ms)[0m  [1mSELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35mUser Exists (0.9ms)[0m  SELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'aaaaa' AND "users"."id" != 1) LIMIT 1
  [1m[36m (0.5ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.4ms)[0m  BEGIN
---------------------------------------------------------------------------------------------
UserTest: test: A given user should not be valid if login name strats with a capital letter. 
---------------------------------------------------------------------------------------------
  [1m[36mUser Load (1.0ms)[0m  [1mSELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35mUser Exists (0.9ms)[0m  SELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'Johns276' AND "users"."id" != 1) LIMIT 1
  [1m[36m (0.4ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.4ms)[0m  BEGIN
------------------------------------------------------------------------------------
UserTest: test: A given user should require a start date if an end date is present. 
------------------------------------------------------------------------------------
  [1m[36mUser Load (1.0ms)[0m  [1mSELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35mUser Exists (0.9ms)[0m  SELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1
  [1m[36m (0.4ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.4ms)[0m  BEGIN
--------------------------------------------------------------------------------
UserTest: test: A given user should require an end date on or after start date. 
--------------------------------------------------------------------------------
  [1m[36mUser Load (1.0ms)[0m  [1mSELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35mUser Exists (1.0ms)[0m  SELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1
  [1m[36m (0.4ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.4ms)[0m  BEGIN
---------------------------------------------------------------------
UserTest: test: User should allow first_name to be set to "Charles". 
---------------------------------------------------------------------
  [1m[36mUser Exists (0.9ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.5ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.2ms)[0m  BEGIN
--------------------------------------------------------------------------
UserTest: test: User should ensure first_name has a length of at least 2. 
--------------------------------------------------------------------------
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.6ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35m (0.5ms)[0m  ROLLBACK
  [1m[36m (0.4ms)[0m  [1mBEGIN[0m
---------------------------------------------------------------------------
UserTest: test: User should ensure first_name has a length of at most 254. 
---------------------------------------------------------------------------
  [1m[35mUser Exists (0.6ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.6ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.2ms)[0m  BEGIN
-------------------------------------------------------------------------
UserTest: test: User should ensure last_name has a length of at least 2. 
-------------------------------------------------------------------------
  [1m[36mUser Exists (0.5ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.9ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.8ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.6ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35m (0.4ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
--------------------------------------------------------------------------
UserTest: test: User should ensure last_name has a length of at most 254. 
--------------------------------------------------------------------------
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.6ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.6ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
--------------------------------------------------------------------------
UserTest: test: User should ensure login_name has a length of at least 6. 
--------------------------------------------------------------------------
  [1m[36mUser Exists (0.6ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxx' LIMIT 1[0m
  [1m[35mUser Exists (0.8ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxx' LIMIT 1
  [1m[36mUser Exists (0.5ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxx' LIMIT 1[0m
  [1m[35mUser Exists (0.5ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxx' LIMIT 1
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxx' LIMIT 1[0m
  [1m[35m (0.3ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
---------------------------------------------------------------------------
UserTest: test: User should ensure login_name has a length of at most 254. 
---------------------------------------------------------------------------
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' LIMIT 1
  [1m[36mUser Exists (0.8ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' LIMIT 1[0m
  [1m[35mUser Exists (0.8ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' LIMIT 1
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' LIMIT 1[0m
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' LIMIT 1
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
-------------------------------------------------------------------------
UserTest: test: User should not allow first_name to be set to "charles". 
-------------------------------------------------------------------------
  [1m[36mUser Exists (0.6ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.4ms)[0m  BEGIN
--------------------------------------------------------------------------------
UserTest: test: User should require case sensitive unique value for login_name. 
--------------------------------------------------------------------------------
  [1m[36mUser Load (0.9ms)[0m  [1mSELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'orstedma' LIMIT 1
  [1m[36mUser Exists (5.3ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'orstedma' LIMIT 1[0m
  [1m[35m (0.4ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
----------------------------------------------------------
UserTest: test: User should require first_name to be set. 
----------------------------------------------------------
  [1m[35mUser Exists (0.8ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.8ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35m (0.5ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
---------------------------------------------------------
UserTest: test: User should require last_name to be set. 
---------------------------------------------------------
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35m (0.5ms)[0m  ROLLBACK
  [1m[36m (0.5ms)[0m  [1mBEGIN[0m
----------------------------------------------------------
UserTest: test: User should require login_name to be set. 
----------------------------------------------------------
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35m (0.4ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
----------------------------------------------------------
UserTest: test: User should require start_date to be set. 
----------------------------------------------------------
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.8ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35m (0.3ms)[0m  ROLLBACK
  [1m[36m (227.6ms)[0m  [1mDROP DATABASE IF EXISTS "ritrack_test"[0m
  [1m[35m (649.3ms)[0m  CREATE DATABASE "ritrack_test" ENCODING = 'unicode'
  [1m[36mSQL (43.0ms)[0m  [1mCREATE EXTENSION IF NOT EXISTS "plpgsql"[0m
  [1m[35m (94.5ms)[0m  CREATE TABLE "users" ("id" serial primary key, "first_name" character varying(255), "last_name" character varying(255), "nick_name" character varying(255), "login_name" character varying(255), "notes" text, "created_at" timestamp, "updated_at" timestamp, "start_date" date, "end_date" date) 
  [1m[36m (10.7ms)[0m  [1mCREATE TABLE "schema_migrations" ("version" character varying(255) NOT NULL) [0m
  [1m[35m (50.6ms)[0m  CREATE UNIQUE INDEX "unique_schema_migrations" ON "schema_migrations" ("version")
  [1m[36m (1.0ms)[0m  [1mSELECT version FROM "schema_migrations"[0m
  [1m[35m (5.9ms)[0m  INSERT INTO "schema_migrations" (version) VALUES ('20130811212425')
  [1m[36m (8.0ms)[0m  [1mINSERT INTO "schema_migrations" (version) VALUES ('20130811195620')[0m
  [1m[35m (8.0ms)[0m  INSERT INTO "schema_migrations" (version) VALUES ('20130811193133')
  [1m[36m (7.9ms)[0m  [1mINSERT INTO "schema_migrations" (version) VALUES ('20130811195557')[0m
  [1m[35mActiveRecord::SchemaMigration Load (1.1ms)[0m  SELECT "schema_migrations".* FROM "schema_migrations"
  [1m[36mActiveRecord::SchemaMigration Load (0.5ms)[0m  [1mSELECT "schema_migrations".* FROM "schema_migrations"[0m
  [1m[35m (1.0ms)[0m  ALTER TABLE "users" DISABLE TRIGGER ALL;ALTER TABLE "schema_migrations" DISABLE TRIGGER ALL
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
  [1m[35mFixture Delete (0.9ms)[0m  DELETE FROM "users"
  [1m[36mFixture Insert (1.2ms)[0m  [1mINSERT INTO "users" ("id", "first_name", "last_name", "nick_name", "login_name", "start_date", "end_date", "notes", "created_at", "updated_at") VALUES (1, 'Michael', 'Orsted', 'Mike', 'orstedma', '2012-02-04', NULL, 'This user lives in Chicago.', '2013-08-16 13:16:42', '2013-08-16 13:16:42')[0m
  [1m[35mFixture Insert (0.8ms)[0m  INSERT INTO "users" ("id", "first_name", "last_name", "nick_name", "login_name", "start_date", "end_date", "notes", "created_at", "updated_at") VALUES (2, 'Frederick', 'Free-Loader', 'Frederick', 'freelofw', '2012-03-04', NULL, 'This user is completely useless', '2013-08-16 13:16:42', '2013-08-16 13:16:42')
  [1m[36mFixture Insert (0.7ms)[0m  [1mINSERT INTO "users" ("id", "first_name", "last_name", "nick_name", "login_name", "start_date", "end_date", "notes", "created_at", "updated_at") VALUES (3, 'Michael', 'Winstead', 'Mike', 'winstem', '2012-02-04', '2013-08-12', 'This user lives in New York. This user is disabled in the system.', '2013-08-16 13:16:42', '2013-08-16 13:16:42')[0m
  [1m[35mFixture Insert (0.7ms)[0m  INSERT INTO "users" ("id", "first_name", "last_name", "nick_name", "login_name", "start_date", "end_date", "notes", "created_at", "updated_at") VALUES (4, 'Allison', 'Wilson', 'Alli', 'wilsona', '2012-03-04', NULL, 'Electrical engineer.', '2013-08-16 13:16:42', '2013-08-16 13:16:42')
  [1m[36m (9.0ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.7ms)[0m  ALTER TABLE "users" ENABLE TRIGGER ALL;ALTER TABLE "schema_migrations" ENABLE TRIGGER ALL
  [1m[36m (0.5ms)[0m  [1mBEGIN[0m
--------------------------------------------------------
UserTest: test: A given user should be valid initially. 
--------------------------------------------------------
  [1m[35mUser Load (1.7ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (1.9ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.3ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
-----------------------------------------------------------------------
UserTest: test: A given user should not be valid if first name is nil. 
-----------------------------------------------------------------------
  [1m[35mUser Load (0.9ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (0.9ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.5ms)[0m  ROLLBACK
  [1m[36m (0.4ms)[0m  [1mBEGIN[0m
----------------------------------------------------------------------------
UserTest: test: A given user should not be valid if first name is too long. 
----------------------------------------------------------------------------
  [1m[35mUser Load (1.0ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (1.0ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.4ms)[0m  ROLLBACK
  [1m[36m (0.4ms)[0m  [1mBEGIN[0m
-----------------------------------------------------------------------------
UserTest: test: A given user should not be valid if first name is too short. 
-----------------------------------------------------------------------------
  [1m[35mUser Load (1.0ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.3ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
------------------------------------------------------------------------------------------------
UserTest: test: A given user should not be valid if first name starts with a lower case letter. 
------------------------------------------------------------------------------------------------
  [1m[35mUser Load (0.8ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.3ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
----------------------------------------------------------------------
UserTest: test: A given user should not be valid if last name is nil. 
----------------------------------------------------------------------
  [1m[35mUser Load (0.8ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.3ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
---------------------------------------------------------------------------
UserTest: test: A given user should not be valid if last name is too long. 
---------------------------------------------------------------------------
  [1m[35mUser Load (0.8ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.3ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
----------------------------------------------------------------------------
UserTest: test: A given user should not be valid if last name is too short. 
----------------------------------------------------------------------------
  [1m[35mUser Load (0.7ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.3ms)[0m  ROLLBACK
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
---------------------------------------------------------------------------------------------
UserTest: test: A given user should not be valid if login name has non-alphanumeric letters. 
---------------------------------------------------------------------------------------------
  [1m[35mUser Load (0.7ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'johns-276' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.5ms)[0m  ROLLBACK
  [1m[36m (0.4ms)[0m  [1mBEGIN[0m
-------------------------------------------------------------------------------
UserTest: test: A given user should not be valid if login name is a duplicate. 
-------------------------------------------------------------------------------
  [1m[35mUser Load (1.0ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36m (0.5ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.4ms)[0m  BEGIN
-----------------------------------------------------------------------
UserTest: test: A given user should not be valid if login name is nil. 
-----------------------------------------------------------------------
  [1m[36mUser Load (1.0ms)[0m  [1mSELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35mUser Exists (0.9ms)[0m  SELECT 1 AS one FROM "users" WHERE ("users"."login_name" IS NULL AND "users"."id" != 1) LIMIT 1
  [1m[36m (0.4ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.4ms)[0m  BEGIN
----------------------------------------------------------------------------
UserTest: test: A given user should not be valid if login name is too long. 
----------------------------------------------------------------------------
  [1m[36mUser Load (1.0ms)[0m  [1mSELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35mUser Exists (1.0ms)[0m  SELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'abbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb' AND "users"."id" != 1) LIMIT 1
  [1m[36m (0.4ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.4ms)[0m  BEGIN
-----------------------------------------------------------------------------
UserTest: test: A given user should not be valid if login name is too short. 
-----------------------------------------------------------------------------
  [1m[36mUser Load (1.1ms)[0m  [1mSELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35mUser Exists (1.0ms)[0m  SELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'aaaaa' AND "users"."id" != 1) LIMIT 1
  [1m[36m (0.5ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.4ms)[0m  BEGIN
---------------------------------------------------------------------------------------------
UserTest: test: A given user should not be valid if login name strats with a capital letter. 
---------------------------------------------------------------------------------------------
  [1m[36mUser Load (1.0ms)[0m  [1mSELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'Johns276' AND "users"."id" != 1) LIMIT 1
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.4ms)[0m  BEGIN
------------------------------------------------------------------------------------
UserTest: test: A given user should require a start date if an end date is present. 
------------------------------------------------------------------------------------
  [1m[36mUser Load (0.8ms)[0m  [1mSELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1
  [1m[36m (0.4ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.4ms)[0m  BEGIN
--------------------------------------------------------------------------------
UserTest: test: A given user should require an end date on or after start date. 
--------------------------------------------------------------------------------
  [1m[36mUser Load (0.8ms)[0m  [1mSELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35mUser Exists (0.8ms)[0m  SELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1
  [1m[36m (0.4ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.4ms)[0m  BEGIN
---------------------------------------------------------------------
UserTest: test: User should allow first_name to be set to "Charles". 
---------------------------------------------------------------------
  [1m[36mUser Exists (0.9ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.8ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.4ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
--------------------------------------------------------------------------
UserTest: test: User should ensure first_name has a length of at least 2. 
--------------------------------------------------------------------------
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.6ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35m (0.3ms)[0m  ROLLBACK
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
---------------------------------------------------------------------------
UserTest: test: User should ensure first_name has a length of at most 254. 
---------------------------------------------------------------------------
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.6ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.6ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.6ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.4ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.4ms)[0m  BEGIN
-------------------------------------------------------------------------
UserTest: test: User should ensure last_name has a length of at least 2. 
-------------------------------------------------------------------------
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.8ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.6ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.6ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35m (0.4ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
--------------------------------------------------------------------------
UserTest: test: User should ensure last_name has a length of at most 254. 
--------------------------------------------------------------------------
  [1m[35mUser Exists (0.6ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.6ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.2ms)[0m  BEGIN
--------------------------------------------------------------------------
UserTest: test: User should ensure login_name has a length of at least 6. 
--------------------------------------------------------------------------
  [1m[36mUser Exists (0.6ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxx' LIMIT 1[0m
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxx' LIMIT 1
  [1m[36mUser Exists (0.5ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxx' LIMIT 1[0m
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxx' LIMIT 1
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxx' LIMIT 1[0m
  [1m[35m (0.3ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
---------------------------------------------------------------------------
UserTest: test: User should ensure login_name has a length of at most 254. 
---------------------------------------------------------------------------
  [1m[35mUser Exists (0.9ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' LIMIT 1
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' LIMIT 1[0m
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' LIMIT 1
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' LIMIT 1[0m
  [1m[35mUser Exists (0.8ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' LIMIT 1
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
-------------------------------------------------------------------------
UserTest: test: User should not allow first_name to be set to "charles". 
-------------------------------------------------------------------------
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.8ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.2ms)[0m  BEGIN
--------------------------------------------------------------------------------
UserTest: test: User should require case sensitive unique value for login_name. 
--------------------------------------------------------------------------------
  [1m[36mUser Load (0.8ms)[0m  [1mSELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35mUser Exists (0.5ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'orstedma' LIMIT 1
  [1m[36mUser Exists (7.3ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'orstedma' LIMIT 1[0m
  [1m[35m (0.4ms)[0m  ROLLBACK
  [1m[36m (0.4ms)[0m  [1mBEGIN[0m
----------------------------------------------------------
UserTest: test: User should require first_name to be set. 
----------------------------------------------------------
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.8ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35m (0.3ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
---------------------------------------------------------
UserTest: test: User should require last_name to be set. 
---------------------------------------------------------
  [1m[35mUser Exists (0.8ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35m (0.4ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
----------------------------------------------------------
UserTest: test: User should require login_name to be set. 
----------------------------------------------------------
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.8ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35m (0.3ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
----------------------------------------------------------
UserTest: test: User should require start_date to be set. 
----------------------------------------------------------
  [1m[35mUser Exists (0.6ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.6ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35m (0.3ms)[0m  ROLLBACK
  [1m[36m (217.1ms)[0m  [1mDROP DATABASE IF EXISTS "ritrack_test"[0m
  [1m[35m (641.0ms)[0m  CREATE DATABASE "ritrack_test" ENCODING = 'unicode'
  [1m[36mSQL (46.7ms)[0m  [1mCREATE EXTENSION IF NOT EXISTS "plpgsql"[0m
  [1m[35m (92.9ms)[0m  CREATE TABLE "users" ("id" serial primary key, "first_name" character varying(255), "last_name" character varying(255), "nick_name" character varying(255), "login_name" character varying(255), "notes" text, "created_at" timestamp, "updated_at" timestamp, "start_date" date, "end_date" date) 
  [1m[36m (10.9ms)[0m  [1mCREATE TABLE "schema_migrations" ("version" character varying(255) NOT NULL) [0m
  [1m[35m (50.4ms)[0m  CREATE UNIQUE INDEX "unique_schema_migrations" ON "schema_migrations" ("version")
  [1m[36m (1.1ms)[0m  [1mSELECT version FROM "schema_migrations"[0m
  [1m[35m (5.7ms)[0m  INSERT INTO "schema_migrations" (version) VALUES ('20130811212425')
  [1m[36m (7.9ms)[0m  [1mINSERT INTO "schema_migrations" (version) VALUES ('20130811195620')[0m
  [1m[35m (8.0ms)[0m  INSERT INTO "schema_migrations" (version) VALUES ('20130811193133')
  [1m[36m (8.0ms)[0m  [1mINSERT INTO "schema_migrations" (version) VALUES ('20130811195557')[0m
  [1m[35mActiveRecord::SchemaMigration Load (1.1ms)[0m  SELECT "schema_migrations".* FROM "schema_migrations"
  [1m[36mActiveRecord::SchemaMigration Load (0.6ms)[0m  [1mSELECT "schema_migrations".* FROM "schema_migrations"[0m
  [1m[35m (1.0ms)[0m  ALTER TABLE "users" DISABLE TRIGGER ALL;ALTER TABLE "schema_migrations" DISABLE TRIGGER ALL
  [1m[36m (0.5ms)[0m  [1mBEGIN[0m
  [1m[35mFixture Delete (0.7ms)[0m  DELETE FROM "users"
  [1m[36mFixture Insert (1.4ms)[0m  [1mINSERT INTO "users" ("id", "first_name", "last_name", "nick_name", "login_name", "start_date", "end_date", "notes", "created_at", "updated_at") VALUES (1, 'Michael', 'Orsted', 'Mike', 'orstedma', '2012-02-04', NULL, 'This user lives in Chicago.', '2013-08-16 13:18:02', '2013-08-16 13:18:02')[0m
  [1m[35mFixture Insert (0.9ms)[0m  INSERT INTO "users" ("id", "first_name", "last_name", "nick_name", "login_name", "start_date", "end_date", "notes", "created_at", "updated_at") VALUES (2, 'Frederick', 'Free-Loader', 'Frederick', 'freelofw', '2012-03-04', NULL, 'This user is completely useless', '2013-08-16 13:18:02', '2013-08-16 13:18:02')
  [1m[36mFixture Insert (0.8ms)[0m  [1mINSERT INTO "users" ("id", "first_name", "last_name", "nick_name", "login_name", "start_date", "end_date", "notes", "created_at", "updated_at") VALUES (3, 'Michael', 'Winstead', 'Mike', 'winstem', '2012-02-04', '2013-08-12', 'This user lives in New York. This user is disabled in the system.', '2013-08-16 13:18:02', '2013-08-16 13:18:02')[0m
  [1m[35mFixture Insert (0.8ms)[0m  INSERT INTO "users" ("id", "first_name", "last_name", "nick_name", "login_name", "start_date", "end_date", "notes", "created_at", "updated_at") VALUES (4, 'Allison', 'Wilson', 'Alli', 'wilsona', '2012-03-04', NULL, 'Electrical engineer.', '2013-08-16 13:18:02', '2013-08-16 13:18:02')
  [1m[36m (6.3ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.7ms)[0m  ALTER TABLE "users" ENABLE TRIGGER ALL;ALTER TABLE "schema_migrations" ENABLE TRIGGER ALL
  [1m[36m (0.5ms)[0m  [1mBEGIN[0m
--------------------------------------------------------
UserTest: test: A given user should be valid initially. 
--------------------------------------------------------
  [1m[35mUser Load (1.8ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (1.9ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.3ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
-----------------------------------------------------------------------
UserTest: test: A given user should not be valid if first name is nil. 
-----------------------------------------------------------------------
  [1m[35mUser Load (0.8ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (0.9ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.3ms)[0m  ROLLBACK
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
----------------------------------------------------------------------------
UserTest: test: A given user should not be valid if first name is too long. 
----------------------------------------------------------------------------
  [1m[35mUser Load (0.5ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (0.6ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.4ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
-----------------------------------------------------------------------------
UserTest: test: A given user should not be valid if first name is too short. 
-----------------------------------------------------------------------------
  [1m[35mUser Load (0.9ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.3ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
------------------------------------------------------------------------------------------------
UserTest: test: A given user should not be valid if first name starts with a lower case letter. 
------------------------------------------------------------------------------------------------
  [1m[35mUser Load (0.8ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.5ms)[0m  ROLLBACK
  [1m[36m (0.4ms)[0m  [1mBEGIN[0m
----------------------------------------------------------------------
UserTest: test: A given user should not be valid if last name is nil. 
----------------------------------------------------------------------
  [1m[35mUser Load (1.0ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (1.0ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.3ms)[0m  ROLLBACK
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
---------------------------------------------------------------------------
UserTest: test: A given user should not be valid if last name is too long. 
---------------------------------------------------------------------------
  [1m[35mUser Load (0.5ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (1.0ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.4ms)[0m  ROLLBACK
  [1m[36m (0.4ms)[0m  [1mBEGIN[0m
----------------------------------------------------------------------------
UserTest: test: A given user should not be valid if last name is too short. 
----------------------------------------------------------------------------
  [1m[35mUser Load (0.8ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.4ms)[0m  ROLLBACK
  [1m[36m (0.4ms)[0m  [1mBEGIN[0m
---------------------------------------------------------------------------------------------
UserTest: test: A given user should not be valid if login name has non-alphanumeric letters. 
---------------------------------------------------------------------------------------------
  [1m[35mUser Load (1.1ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (0.8ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'johns-276' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.3ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
-------------------------------------------------------------------------------
UserTest: test: A given user should not be valid if login name is a duplicate. 
-------------------------------------------------------------------------------
  [1m[35mUser Load (1.0ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36m (0.4ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.4ms)[0m  BEGIN
-----------------------------------------------------------------------
UserTest: test: A given user should not be valid if login name is nil. 
-----------------------------------------------------------------------
  [1m[36mUser Load (1.0ms)[0m  [1mSELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35mUser Exists (0.8ms)[0m  SELECT 1 AS one FROM "users" WHERE ("users"."login_name" IS NULL AND "users"."id" != 1) LIMIT 1
  [1m[36m (0.4ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.4ms)[0m  BEGIN
----------------------------------------------------------------------------
UserTest: test: A given user should not be valid if login name is too long. 
----------------------------------------------------------------------------
  [1m[36mUser Load (0.8ms)[0m  [1mSELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35mUser Exists (1.0ms)[0m  SELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'abbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb' AND "users"."id" != 1) LIMIT 1
  [1m[36m (0.4ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.4ms)[0m  BEGIN
-----------------------------------------------------------------------------
UserTest: test: A given user should not be valid if login name is too short. 
-----------------------------------------------------------------------------
  [1m[36mUser Load (1.0ms)[0m  [1mSELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35mUser Exists (1.0ms)[0m  SELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'aaaaa' AND "users"."id" != 1) LIMIT 1
  [1m[36m (0.4ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
---------------------------------------------------------------------------------------------
UserTest: test: A given user should not be valid if login name strats with a capital letter. 
---------------------------------------------------------------------------------------------
  [1m[36mUser Load (0.8ms)[0m  [1mSELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35mUser Exists (0.8ms)[0m  SELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'Johns276' AND "users"."id" != 1) LIMIT 1
  [1m[36m (0.4ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.4ms)[0m  BEGIN
------------------------------------------------------------------------------------
UserTest: test: A given user should require a start date if an end date is present. 
------------------------------------------------------------------------------------
  [1m[36mUser Load (1.0ms)[0m  [1mSELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35mUser Exists (0.8ms)[0m  SELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1
  [1m[36m (0.5ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.5ms)[0m  BEGIN
--------------------------------------------------------------------------------
UserTest: test: A given user should require an end date on or after start date. 
--------------------------------------------------------------------------------
  [1m[36mUser Load (1.1ms)[0m  [1mSELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35mUser Exists (1.0ms)[0m  SELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1
  [1m[36m (0.5ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.5ms)[0m  BEGIN
---------------------------------------------------------------------
UserTest: test: User should allow first_name to be set to "Charles". 
---------------------------------------------------------------------
  [1m[36mUser Exists (1.0ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.8ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.4ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.4ms)[0m  BEGIN
--------------------------------------------------------------------------
UserTest: test: User should ensure first_name has a length of at least 2. 
--------------------------------------------------------------------------
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.6ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.6ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.6ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35m (0.3ms)[0m  ROLLBACK
  [1m[36m (0.4ms)[0m  [1mBEGIN[0m
---------------------------------------------------------------------------
UserTest: test: User should ensure first_name has a length of at most 254. 
---------------------------------------------------------------------------
  [1m[35mUser Exists (0.6ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.6ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.2ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.2ms)[0m  BEGIN
-------------------------------------------------------------------------
UserTest: test: User should ensure last_name has a length of at least 2. 
-------------------------------------------------------------------------
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.9ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35m (0.4ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
--------------------------------------------------------------------------
UserTest: test: User should ensure last_name has a length of at most 254. 
--------------------------------------------------------------------------
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.8ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.6ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.5ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.6ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
--------------------------------------------------------------------------
UserTest: test: User should ensure login_name has a length of at least 6. 
--------------------------------------------------------------------------
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxx' LIMIT 1[0m
  [1m[35mUser Exists (0.6ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxx' LIMIT 1
  [1m[36mUser Exists (0.8ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxx' LIMIT 1[0m
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxx' LIMIT 1
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxx' LIMIT 1[0m
  [1m[35m (0.3ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
---------------------------------------------------------------------------
UserTest: test: User should ensure login_name has a length of at most 254. 
---------------------------------------------------------------------------
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' LIMIT 1
  [1m[36mUser Exists (0.9ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' LIMIT 1[0m
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' LIMIT 1
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' LIMIT 1[0m
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' LIMIT 1
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
-------------------------------------------------------------------------
UserTest: test: User should not allow first_name to be set to "charles". 
-------------------------------------------------------------------------
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.6ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.5ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
--------------------------------------------------------------------------------
UserTest: test: User should require case sensitive unique value for login_name. 
--------------------------------------------------------------------------------
  [1m[36mUser Load (1.1ms)[0m  [1mSELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'orstedma' LIMIT 1
  [1m[36mUser Exists (5.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'orstedma' LIMIT 1[0m
  [1m[35m (0.4ms)[0m  ROLLBACK
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
----------------------------------------------------------
UserTest: test: User should require first_name to be set. 
----------------------------------------------------------
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.8ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35m (0.2ms)[0m  ROLLBACK
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
---------------------------------------------------------
UserTest: test: User should require last_name to be set. 
---------------------------------------------------------
  [1m[35mUser Exists (0.6ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35m (0.3ms)[0m  ROLLBACK
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
----------------------------------------------------------
UserTest: test: User should require login_name to be set. 
----------------------------------------------------------
  [1m[35mUser Exists (0.6ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35m (0.2ms)[0m  ROLLBACK
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
----------------------------------------------------------
UserTest: test: User should require start_date to be set. 
----------------------------------------------------------
  [1m[35mUser Exists (0.6ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.8ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35m (0.3ms)[0m  ROLLBACK
  [1m[36m (225.3ms)[0m  [1mDROP DATABASE IF EXISTS "ritrack_test"[0m
  [1m[35m (691.5ms)[0m  CREATE DATABASE "ritrack_test" ENCODING = 'unicode'
  [1m[36mSQL (49.5ms)[0m  [1mCREATE EXTENSION IF NOT EXISTS "plpgsql"[0m
  [1m[35m (102.1ms)[0m  CREATE TABLE "users" ("id" serial primary key, "first_name" character varying(255), "last_name" character varying(255), "nick_name" character varying(255), "login_name" character varying(255), "notes" text, "created_at" timestamp, "updated_at" timestamp, "start_date" date, "end_date" date) 
  [1m[36m (10.7ms)[0m  [1mCREATE TABLE "schema_migrations" ("version" character varying(255) NOT NULL) [0m
  [1m[35m (50.5ms)[0m  CREATE UNIQUE INDEX "unique_schema_migrations" ON "schema_migrations" ("version")
  [1m[36m (1.0ms)[0m  [1mSELECT version FROM "schema_migrations"[0m
  [1m[35m (5.9ms)[0m  INSERT INTO "schema_migrations" (version) VALUES ('20130811212425')
  [1m[36m (7.8ms)[0m  [1mINSERT INTO "schema_migrations" (version) VALUES ('20130811195620')[0m
  [1m[35m (8.0ms)[0m  INSERT INTO "schema_migrations" (version) VALUES ('20130811193133')
  [1m[36m (8.0ms)[0m  [1mINSERT INTO "schema_migrations" (version) VALUES ('20130811195557')[0m
  [1m[35mActiveRecord::SchemaMigration Load (0.7ms)[0m  SELECT "schema_migrations".* FROM "schema_migrations"
  [1m[36mActiveRecord::SchemaMigration Load (0.6ms)[0m  [1mSELECT "schema_migrations".* FROM "schema_migrations"[0m
  [1m[35m (1.1ms)[0m  ALTER TABLE "users" DISABLE TRIGGER ALL;ALTER TABLE "schema_migrations" DISABLE TRIGGER ALL
  [1m[36m (0.4ms)[0m  [1mBEGIN[0m
  [1m[35mFixture Delete (1.1ms)[0m  DELETE FROM "users"
  [1m[36mFixture Insert (1.4ms)[0m  [1mINSERT INTO "users" ("id", "first_name", "last_name", "nick_name", "login_name", "start_date", "end_date", "notes", "created_at", "updated_at") VALUES (1, 'Michael', 'Orsted', 'Mike', 'orstedma', '2012-02-04', NULL, 'This user lives in Chicago.', '2013-08-16 13:18:37', '2013-08-16 13:18:37')[0m
  [1m[35mFixture Insert (0.9ms)[0m  INSERT INTO "users" ("id", "first_name", "last_name", "nick_name", "login_name", "start_date", "end_date", "notes", "created_at", "updated_at") VALUES (2, 'Frederick', 'Free-Loader', 'Frederick', 'freelofw', '2012-03-04', NULL, 'This user is completely useless', '2013-08-16 13:18:37', '2013-08-16 13:18:37')
  [1m[36mFixture Insert (0.8ms)[0m  [1mINSERT INTO "users" ("id", "first_name", "last_name", "nick_name", "login_name", "start_date", "end_date", "notes", "created_at", "updated_at") VALUES (3, 'Michael', 'Winstead', 'Mike', 'winstem', '2012-02-04', '2013-08-12', 'This user lives in New York. This user is disabled in the system.', '2013-08-16 13:18:37', '2013-08-16 13:18:37')[0m
  [1m[35mFixture Insert (0.8ms)[0m  INSERT INTO "users" ("id", "first_name", "last_name", "nick_name", "login_name", "start_date", "end_date", "notes", "created_at", "updated_at") VALUES (4, 'Allison', 'Wilson', 'Alli', 'wilsona', '2012-03-04', NULL, 'Electrical engineer.', '2013-08-16 13:18:37', '2013-08-16 13:18:37')
  [1m[36m (3.5ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.8ms)[0m  ALTER TABLE "users" ENABLE TRIGGER ALL;ALTER TABLE "schema_migrations" ENABLE TRIGGER ALL
  [1m[36m (0.4ms)[0m  [1mBEGIN[0m
--------------------------------------------------------
UserTest: test: A given user should be valid initially. 
--------------------------------------------------------
  [1m[35mUser Load (1.8ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (2.0ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.3ms)[0m  ROLLBACK
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
-----------------------------------------------------------------------
UserTest: test: A given user should not be valid if first name is nil. 
-----------------------------------------------------------------------
  [1m[35mUser Load (0.8ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (0.8ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.3ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
----------------------------------------------------------------------------
UserTest: test: A given user should not be valid if first name is too long. 
----------------------------------------------------------------------------
  [1m[35mUser Load (0.9ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (0.8ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.3ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
-----------------------------------------------------------------------------
UserTest: test: A given user should not be valid if first name is too short. 
-----------------------------------------------------------------------------
  [1m[35mUser Load (0.8ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (0.8ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.3ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
------------------------------------------------------------------------------------------------
UserTest: test: A given user should not be valid if first name starts with a lower case letter. 
------------------------------------------------------------------------------------------------
  [1m[35mUser Load (0.9ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (0.8ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.3ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
----------------------------------------------------------------------
UserTest: test: A given user should not be valid if last name is nil. 
----------------------------------------------------------------------
  [1m[35mUser Load (0.8ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (0.9ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.3ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
---------------------------------------------------------------------------
UserTest: test: A given user should not be valid if last name is too long. 
---------------------------------------------------------------------------
  [1m[35mUser Load (0.7ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.4ms)[0m  ROLLBACK
  [1m[36m (0.4ms)[0m  [1mBEGIN[0m
----------------------------------------------------------------------------
UserTest: test: A given user should not be valid if last name is too short. 
----------------------------------------------------------------------------
  [1m[35mUser Load (1.0ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (1.0ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.5ms)[0m  ROLLBACK
  [1m[36m (0.5ms)[0m  [1mBEGIN[0m
---------------------------------------------------------------------------------------------
UserTest: test: A given user should not be valid if login name has non-alphanumeric letters. 
---------------------------------------------------------------------------------------------
  [1m[35mUser Load (1.0ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (1.0ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'johns-276' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.5ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
-------------------------------------------------------------------------------
UserTest: test: A given user should not be valid if login name is a duplicate. 
-------------------------------------------------------------------------------
  [1m[35mUser Load (0.8ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36m (0.4ms)[0m  [1mSAVEPOINT active_record_1[0m
  [1m[35mUser Exists (0.9ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'orstedma' LIMIT 1
  [1m[36m (0.4ms)[0m  [1mROLLBACK TO SAVEPOINT active_record_1[0m
  [1m[35mUser Exists (0.8ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'orstedma' LIMIT 1
  [1m[36m (0.4ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.4ms)[0m  BEGIN
-----------------------------------------------------------------------
UserTest: test: A given user should not be valid if login name is nil. 
-----------------------------------------------------------------------
  [1m[36mUser Load (0.9ms)[0m  [1mSELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35mUser Exists (0.9ms)[0m  SELECT 1 AS one FROM "users" WHERE ("users"."login_name" IS NULL AND "users"."id" != 1) LIMIT 1
  [1m[36m (0.4ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.4ms)[0m  BEGIN
----------------------------------------------------------------------------
UserTest: test: A given user should not be valid if login name is too long. 
----------------------------------------------------------------------------
  [1m[36mUser Load (1.0ms)[0m  [1mSELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35mUser Exists (0.9ms)[0m  SELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'abbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb' AND "users"."id" != 1) LIMIT 1
  [1m[36m (0.5ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.4ms)[0m  BEGIN
-----------------------------------------------------------------------------
UserTest: test: A given user should not be valid if login name is too short. 
-----------------------------------------------------------------------------
  [1m[36mUser Load (1.1ms)[0m  [1mSELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35mUser Exists (0.6ms)[0m  SELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'aaaaa' AND "users"."id" != 1) LIMIT 1
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.4ms)[0m  BEGIN
---------------------------------------------------------------------------------------------
UserTest: test: A given user should not be valid if login name strats with a capital letter. 
---------------------------------------------------------------------------------------------
  [1m[36mUser Load (1.0ms)[0m  [1mSELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35mUser Exists (0.8ms)[0m  SELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'Johns276' AND "users"."id" != 1) LIMIT 1
  [1m[36m (0.5ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.5ms)[0m  BEGIN
------------------------------------------------------------------------------------
UserTest: test: A given user should require a start date if an end date is present. 
------------------------------------------------------------------------------------
  [1m[36mUser Load (1.0ms)[0m  [1mSELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35mUser Exists (0.9ms)[0m  SELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1
  [1m[36m (0.4ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.5ms)[0m  BEGIN
--------------------------------------------------------------------------------
UserTest: test: A given user should require an end date on or after start date. 
--------------------------------------------------------------------------------
  [1m[36mUser Load (1.1ms)[0m  [1mSELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35mUser Exists (1.0ms)[0m  SELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1
  [1m[36m (0.5ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.5ms)[0m  BEGIN
---------------------------------------------------------------------
UserTest: test: User should allow first_name to be set to "Charles". 
---------------------------------------------------------------------
  [1m[36mUser Exists (0.9ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.4ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
--------------------------------------------------------------------------
UserTest: test: User should ensure first_name has a length of at least 2. 
--------------------------------------------------------------------------
  [1m[36mUser Exists (0.6ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.5ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35m (0.5ms)[0m  ROLLBACK
  [1m[36m (0.4ms)[0m  [1mBEGIN[0m
---------------------------------------------------------------------------
UserTest: test: User should ensure first_name has a length of at most 254. 
---------------------------------------------------------------------------
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.8ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.5ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
-------------------------------------------------------------------------
UserTest: test: User should ensure last_name has a length of at least 2. 
-------------------------------------------------------------------------
  [1m[36mUser Exists (0.9ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.6ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.6ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.6ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.6ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35m (0.2ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
--------------------------------------------------------------------------
UserTest: test: User should ensure last_name has a length of at most 254. 
--------------------------------------------------------------------------
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.5ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.6ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
--------------------------------------------------------------------------
UserTest: test: User should ensure login_name has a length of at least 6. 
--------------------------------------------------------------------------
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxx' LIMIT 1[0m
  [1m[35mUser Exists (0.6ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxx' LIMIT 1
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxx' LIMIT 1[0m
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxx' LIMIT 1
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxx' LIMIT 1[0m
  [1m[35m (0.5ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
---------------------------------------------------------------------------
UserTest: test: User should ensure login_name has a length of at most 254. 
---------------------------------------------------------------------------
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' LIMIT 1
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' LIMIT 1[0m
  [1m[35mUser Exists (0.5ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' LIMIT 1
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' LIMIT 1[0m
  [1m[35mUser Exists (0.6ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' LIMIT 1
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
-------------------------------------------------------------------------
UserTest: test: User should not allow first_name to be set to "charles". 
-------------------------------------------------------------------------
  [1m[36mUser Exists (0.6ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.6ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.4ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.4ms)[0m  BEGIN
--------------------------------------------------------------------------------
UserTest: test: User should require case sensitive unique value for login_name. 
--------------------------------------------------------------------------------
  [1m[36mUser Load (0.9ms)[0m  [1mSELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35mUser Exists (0.9ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'orstedma' LIMIT 1
  [1m[36mUser Exists (5.0ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'orstedma' LIMIT 1[0m
  [1m[35m (0.4ms)[0m  ROLLBACK
  [1m[36m (0.4ms)[0m  [1mBEGIN[0m
----------------------------------------------------------
UserTest: test: User should require first_name to be set. 
----------------------------------------------------------
  [1m[35mUser Exists (0.8ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.9ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35m (0.3ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
---------------------------------------------------------
UserTest: test: User should require last_name to be set. 
---------------------------------------------------------
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35m (0.4ms)[0m  ROLLBACK
  [1m[36m (0.4ms)[0m  [1mBEGIN[0m
----------------------------------------------------------
UserTest: test: User should require login_name to be set. 
----------------------------------------------------------
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.6ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35m (0.3ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
----------------------------------------------------------
UserTest: test: User should require start_date to be set. 
----------------------------------------------------------
  [1m[35mUser Exists (0.6ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.6ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35m (0.3ms)[0m  ROLLBACK
  [1m[36m (519.9ms)[0m  [1mDROP DATABASE IF EXISTS "ritrack_test"[0m
  [1m[35m (717.0ms)[0m  CREATE DATABASE "ritrack_test" ENCODING = 'unicode'
  [1m[36mSQL (42.6ms)[0m  [1mCREATE EXTENSION IF NOT EXISTS "plpgsql"[0m
  [1m[35m (109.4ms)[0m  CREATE TABLE "phones" ("id" serial primary key, "number" character varying(255), "tag" character varying(255), "user_id" integer, "created_at" timestamp, "updated_at" timestamp) 
  [1m[36m (49.7ms)[0m  [1mCREATE INDEX "index_phones_on_number" ON "phones" USING btree ("number")[0m
  [1m[35m (52.4ms)[0m  CREATE INDEX "index_phones_on_user_id" ON "phones" USING btree ("user_id")
  [1m[36m (88.6ms)[0m  [1mCREATE TABLE "users" ("id" serial primary key, "first_name" character varying(255), "last_name" character varying(255), "nick_name" character varying(255), "login_name" character varying(255), "notes" text, "created_at" timestamp, "updated_at" timestamp, "start_date" date, "end_date" date) [0m
  [1m[35m (10.9ms)[0m  CREATE TABLE "schema_migrations" ("version" character varying(255) NOT NULL) 
  [1m[36m (54.4ms)[0m  [1mCREATE UNIQUE INDEX "unique_schema_migrations" ON "schema_migrations" ("version")[0m
  [1m[35m (1.0ms)[0m  SELECT version FROM "schema_migrations"
  [1m[36m (5.9ms)[0m  [1mINSERT INTO "schema_migrations" (version) VALUES ('20130816142047')[0m
  [1m[35m (7.9ms)[0m  INSERT INTO "schema_migrations" (version) VALUES ('20130811212425')
  [1m[36m (7.9ms)[0m  [1mINSERT INTO "schema_migrations" (version) VALUES ('20130811195620')[0m
  [1m[35m (7.9ms)[0m  INSERT INTO "schema_migrations" (version) VALUES ('20130811193133')
  [1m[36m (8.1ms)[0m  [1mINSERT INTO "schema_migrations" (version) VALUES ('20130811195557')[0m
  [1m[35mActiveRecord::SchemaMigration Load (1.1ms)[0m  SELECT "schema_migrations".* FROM "schema_migrations"
  [1m[36mActiveRecord::SchemaMigration Load (0.6ms)[0m  [1mSELECT "schema_migrations".* FROM "schema_migrations"[0m
  [1m[35m (1.3ms)[0m  ALTER TABLE "phones" DISABLE TRIGGER ALL;ALTER TABLE "users" DISABLE TRIGGER ALL;ALTER TABLE "schema_migrations" DISABLE TRIGGER ALL
  [1m[36m (0.5ms)[0m  [1mBEGIN[0m
  [1m[35mFixture Delete (0.8ms)[0m  DELETE FROM "users"
  [1m[36mFixture Insert (1.2ms)[0m  [1mINSERT INTO "users" ("id", "first_name", "last_name", "nick_name", "login_name", "start_date", "end_date", "notes", "created_at", "updated_at") VALUES (1, 'Michael', 'Orsted', 'Mike', 'orstedma', '2012-02-04', NULL, 'This user lives in Chicago.', '2013-08-16 14:28:39', '2013-08-16 14:28:39')[0m
  [1m[35mFixture Insert (0.9ms)[0m  INSERT INTO "users" ("id", "first_name", "last_name", "nick_name", "login_name", "start_date", "end_date", "notes", "created_at", "updated_at") VALUES (2, 'Frederick', 'Free-Loader', 'Frederick', 'freelofw', '2012-03-04', NULL, 'This user is completely useless', '2013-08-16 14:28:39', '2013-08-16 14:28:39')
  [1m[36mFixture Insert (0.6ms)[0m  [1mINSERT INTO "users" ("id", "first_name", "last_name", "nick_name", "login_name", "start_date", "end_date", "notes", "created_at", "updated_at") VALUES (3, 'Michael', 'Winstead', 'Mike', 'winstem', '2012-02-04', '2013-08-12', 'This user lives in New York. This user is disabled in the system.', '2013-08-16 14:28:39', '2013-08-16 14:28:39')[0m
  [1m[35mFixture Insert (0.8ms)[0m  INSERT INTO "users" ("id", "first_name", "last_name", "nick_name", "login_name", "start_date", "end_date", "notes", "created_at", "updated_at") VALUES (4, 'Allison', 'Wilson', 'Alli', 'wilsona', '2012-03-04', NULL, 'Electrical engineer.', '2013-08-16 14:28:39', '2013-08-16 14:28:39')
  [1m[36mFixture Delete (0.8ms)[0m  [1mDELETE FROM "phones"[0m
  [1m[35mFixture Insert (1.2ms)[0m  INSERT INTO "phones" ("id", "number", "tag", "user_id", "created_at", "updated_at") VALUES (1, '(512) 234-5678', 'Office', 1, '2013-08-16 14:28:39', '2013-08-16 14:28:39')
  [1m[36mFixture Insert (0.9ms)[0m  [1mINSERT INTO "phones" ("id", "number", "tag", "user_id", "created_at", "updated_at") VALUES (2, '(512) 345-6789', 'Home', 1, '2013-08-16 14:28:39', '2013-08-16 14:28:39')[0m
  [1m[35m (8.3ms)[0m  COMMIT
  [1m[36m (0.5ms)[0m  [1mALTER TABLE "phones" ENABLE TRIGGER ALL;ALTER TABLE "users" ENABLE TRIGGER ALL;ALTER TABLE "schema_migrations" ENABLE TRIGGER ALL[0m
  [1m[35m (0.4ms)[0m  BEGIN
--------------------------------------------------------
UserTest: test: A given user should be valid initially. 
--------------------------------------------------------
  [1m[36mUser Load (1.8ms)[0m  [1mSELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35mUser Exists (1.9ms)[0m  SELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
-----------------------------------------------------------------------
UserTest: test: A given user should not be valid if first name is nil. 
-----------------------------------------------------------------------
  [1m[36mUser Load (0.8ms)[0m  [1mSELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35mUser Exists (0.9ms)[0m  SELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1
  [1m[36m (0.4ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.4ms)[0m  BEGIN
----------------------------------------------------------------------------
UserTest: test: A given user should not be valid if first name is too long. 
----------------------------------------------------------------------------
  [1m[36mUser Load (0.9ms)[0m  [1mSELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35mUser Exists (0.8ms)[0m  SELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1
  [1m[36m (0.4ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
-----------------------------------------------------------------------------
UserTest: test: A given user should not be valid if first name is too short. 
-----------------------------------------------------------------------------
  [1m[36mUser Load (0.9ms)[0m  [1mSELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35mUser Exists (1.0ms)[0m  SELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1
  [1m[36m (0.4ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.4ms)[0m  BEGIN
------------------------------------------------------------------------------------------------
UserTest: test: A given user should not be valid if first name starts with a lower case letter. 
------------------------------------------------------------------------------------------------
  [1m[36mUser Load (1.0ms)[0m  [1mSELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1
  [1m[36m (0.5ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.5ms)[0m  BEGIN
----------------------------------------------------------------------
UserTest: test: A given user should not be valid if last name is nil. 
----------------------------------------------------------------------
  [1m[36mUser Load (1.0ms)[0m  [1mSELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35mUser Exists (1.0ms)[0m  SELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1
  [1m[36m (0.5ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.4ms)[0m  BEGIN
---------------------------------------------------------------------------
UserTest: test: A given user should not be valid if last name is too long. 
---------------------------------------------------------------------------
  [1m[36mUser Load (1.1ms)[0m  [1mSELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35mUser Exists (1.0ms)[0m  SELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1
  [1m[36m (0.5ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.5ms)[0m  BEGIN
----------------------------------------------------------------------------
UserTest: test: A given user should not be valid if last name is too short. 
----------------------------------------------------------------------------
  [1m[36mUser Load (1.0ms)[0m  [1mSELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35mUser Exists (1.0ms)[0m  SELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1
  [1m[36m (0.5ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.4ms)[0m  BEGIN
---------------------------------------------------------------------------------------------
UserTest: test: A given user should not be valid if login name has non-alphanumeric letters. 
---------------------------------------------------------------------------------------------
  [1m[36mUser Load (1.1ms)[0m  [1mSELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35mUser Exists (1.0ms)[0m  SELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'johns-276' AND "users"."id" != 1) LIMIT 1
  [1m[36m (0.4ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
-------------------------------------------------------------------------------
UserTest: test: A given user should not be valid if login name is a duplicate. 
-------------------------------------------------------------------------------
  [1m[36mUser Load (0.8ms)[0m  [1mSELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35m (0.3ms)[0m  SAVEPOINT active_record_1
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'orstedma' LIMIT 1[0m
  [1m[35m (0.4ms)[0m  ROLLBACK TO SAVEPOINT active_record_1
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'orstedma' LIMIT 1[0m
  [1m[35m (0.4ms)[0m  ROLLBACK
  [1m[36m (0.4ms)[0m  [1mBEGIN[0m
-----------------------------------------------------------------------
UserTest: test: A given user should not be valid if login name is nil. 
-----------------------------------------------------------------------
  [1m[35mUser Load (0.9ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (0.8ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" IS NULL AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.3ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
----------------------------------------------------------------------------
UserTest: test: A given user should not be valid if login name is too long. 
----------------------------------------------------------------------------
  [1m[35mUser Load (0.9ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (0.8ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'abbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.3ms)[0m  ROLLBACK
  [1m[36m (0.4ms)[0m  [1mBEGIN[0m
-----------------------------------------------------------------------------
UserTest: test: A given user should not be valid if login name is too short. 
-----------------------------------------------------------------------------
  [1m[35mUser Load (0.8ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (0.9ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'aaaaa' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.4ms)[0m  ROLLBACK
  [1m[36m (0.4ms)[0m  [1mBEGIN[0m
---------------------------------------------------------------------------------------------
UserTest: test: A given user should not be valid if login name starts with a capital letter. 
---------------------------------------------------------------------------------------------
  [1m[35mUser Load (1.1ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'Johns276' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.4ms)[0m  ROLLBACK
  [1m[36m (0.5ms)[0m  [1mBEGIN[0m
------------------------------------------------------------------------------------
UserTest: test: A given user should require a start date if an end date is present. 
------------------------------------------------------------------------------------
  [1m[35mUser Load (1.0ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (0.9ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.4ms)[0m  ROLLBACK
  [1m[36m (0.4ms)[0m  [1mBEGIN[0m
--------------------------------------------------------------------------------
UserTest: test: A given user should require an end date on or after start date. 
--------------------------------------------------------------------------------
  [1m[35mUser Load (1.1ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (1.0ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.5ms)[0m  ROLLBACK
  [1m[36m (0.4ms)[0m  [1mBEGIN[0m
---------------------------------------------------------------------
UserTest: test: User should allow first_name to be set to "Charles". 
---------------------------------------------------------------------
  [1m[35mUser Exists (0.6ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35m (0.3ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
--------------------------------------------------------------------------
UserTest: test: User should ensure first_name has a length of at least 2. 
--------------------------------------------------------------------------
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.6ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.5ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.5ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
---------------------------------------------------------------------------
UserTest: test: User should ensure first_name has a length of at most 254. 
---------------------------------------------------------------------------
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.6ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.6ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.6ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35m (0.4ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
-------------------------------------------------------------------------
UserTest: test: User should ensure last_name has a length of at least 2. 
-------------------------------------------------------------------------
  [1m[35mUser Exists (0.9ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.5ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
--------------------------------------------------------------------------
UserTest: test: User should ensure last_name has a length of at most 254. 
--------------------------------------------------------------------------
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.6ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.8ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.5ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.5ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35m (0.3ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
--------------------------------------------------------------------------
UserTest: test: User should ensure login_name has a length of at least 6. 
--------------------------------------------------------------------------
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxx' LIMIT 1
  [1m[36mUser Exists (0.6ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxx' LIMIT 1[0m
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxx' LIMIT 1
  [1m[36mUser Exists (0.6ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxx' LIMIT 1[0m
  [1m[35mUser Exists (0.5ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxx' LIMIT 1
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
---------------------------------------------------------------------------
UserTest: test: User should ensure login_name has a length of at most 254. 
---------------------------------------------------------------------------
  [1m[36mUser Exists (0.6ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' LIMIT 1[0m
  [1m[35mUser Exists (0.5ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' LIMIT 1
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' LIMIT 1[0m
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' LIMIT 1
  [1m[36mUser Exists (0.6ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' LIMIT 1[0m
  [1m[35m (0.4ms)[0m  ROLLBACK
  [1m[36m (0.4ms)[0m  [1mBEGIN[0m
----------------------------------------------
UserTest: test: User should have many phones. 
----------------------------------------------
  [1m[35m (0.5ms)[0m  ROLLBACK
  [1m[36m (0.6ms)[0m  [1mBEGIN[0m
-------------------------------------------------------------------------
UserTest: test: User should not allow first_name to be set to "charles". 
-------------------------------------------------------------------------
  [1m[35mUser Exists (5.4ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35m (0.2ms)[0m  ROLLBACK
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
--------------------------------------------------------------------------------
UserTest: test: User should require case sensitive unique value for login_name. 
--------------------------------------------------------------------------------
  [1m[35mUser Load (0.7ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'orstedma' LIMIT 1[0m
  [1m[35mUser Exists (0.5ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'orstedma' LIMIT 1
  [1m[36m (0.5ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.4ms)[0m  BEGIN
----------------------------------------------------------
UserTest: test: User should require first_name to be set. 
----------------------------------------------------------
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.4ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.4ms)[0m  BEGIN
---------------------------------------------------------
UserTest: test: User should require last_name to be set. 
---------------------------------------------------------
  [1m[36mUser Exists (0.6ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.4ms)[0m  BEGIN
----------------------------------------------------------
UserTest: test: User should require login_name to be set. 
----------------------------------------------------------
  [1m[36mUser Exists (0.5ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.4ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
----------------------------------------------------------
UserTest: test: User should require start_date to be set. 
----------------------------------------------------------
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.8ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.4ms)[0m  [1mROLLBACK[0m
  [1m[36m (118.8ms)[0m  [1mDROP DATABASE IF EXISTS "ritrack_test"[0m
  [1m[35m (666.1ms)[0m  CREATE DATABASE "ritrack_test" ENCODING = 'unicode'
  [1m[36mSQL (46.5ms)[0m  [1mCREATE EXTENSION IF NOT EXISTS "plpgsql"[0m
  [1m[35m (100.0ms)[0m  CREATE TABLE "phones" ("id" serial primary key, "number" character varying(255), "tag" character varying(255), "user_id" integer, "created_at" timestamp, "updated_at" timestamp) 
  [1m[36m (58.1ms)[0m  [1mCREATE INDEX "index_phones_on_number" ON "phones" USING btree ("number")[0m
  [1m[35m (50.9ms)[0m  CREATE INDEX "index_phones_on_user_id" ON "phones" USING btree ("user_id")
  [1m[36m (97.0ms)[0m  [1mCREATE TABLE "users" ("id" serial primary key, "first_name" character varying(255), "last_name" character varying(255), "nick_name" character varying(255), "login_name" character varying(255), "notes" text, "created_at" timestamp, "updated_at" timestamp, "start_date" date, "end_date" date) [0m
  [1m[35m (10.9ms)[0m  CREATE TABLE "schema_migrations" ("version" character varying(255) NOT NULL) 
  [1m[36m (54.3ms)[0m  [1mCREATE UNIQUE INDEX "unique_schema_migrations" ON "schema_migrations" ("version")[0m
  [1m[35m (1.0ms)[0m  SELECT version FROM "schema_migrations"
  [1m[36m (5.8ms)[0m  [1mINSERT INTO "schema_migrations" (version) VALUES ('20130816142047')[0m
  [1m[35m (8.2ms)[0m  INSERT INTO "schema_migrations" (version) VALUES ('20130811212425')
  [1m[36m (7.8ms)[0m  [1mINSERT INTO "schema_migrations" (version) VALUES ('20130811195620')[0m
  [1m[35m (7.8ms)[0m  INSERT INTO "schema_migrations" (version) VALUES ('20130811193133')
  [1m[36m (8.1ms)[0m  [1mINSERT INTO "schema_migrations" (version) VALUES ('20130811195557')[0m
  [1m[35mActiveRecord::SchemaMigration Load (1.1ms)[0m  SELECT "schema_migrations".* FROM "schema_migrations"
  [1m[36mActiveRecord::SchemaMigration Load (0.5ms)[0m  [1mSELECT "schema_migrations".* FROM "schema_migrations"[0m
  [1m[35m (0.5ms)[0m  ALTER TABLE "phones" DISABLE TRIGGER ALL;ALTER TABLE "users" DISABLE TRIGGER ALL;ALTER TABLE "schema_migrations" DISABLE TRIGGER ALL
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
  [1m[35mFixture Delete (0.6ms)[0m  DELETE FROM "users"
  [1m[36mFixture Insert (1.3ms)[0m  [1mINSERT INTO "users" ("id", "first_name", "last_name", "nick_name", "login_name", "start_date", "end_date", "notes", "created_at", "updated_at") VALUES (1, 'Michael', 'Orsted', 'Mike', 'orstedma', '2012-02-04', NULL, 'This user lives in Chicago.', '2013-08-16 14:34:01', '2013-08-16 14:34:01')[0m
  [1m[35mFixture Insert (0.8ms)[0m  INSERT INTO "users" ("id", "first_name", "last_name", "nick_name", "login_name", "start_date", "end_date", "notes", "created_at", "updated_at") VALUES (2, 'Frederick', 'Free-Loader', 'Frederick', 'freelofw', '2012-03-04', NULL, 'This user is completely useless', '2013-08-16 14:34:01', '2013-08-16 14:34:01')
  [1m[36mFixture Insert (0.8ms)[0m  [1mINSERT INTO "users" ("id", "first_name", "last_name", "nick_name", "login_name", "start_date", "end_date", "notes", "created_at", "updated_at") VALUES (3, 'Michael', 'Winstead', 'Mike', 'winstem', '2012-02-04', '2013-08-12', 'This user lives in New York. This user is disabled in the system.', '2013-08-16 14:34:01', '2013-08-16 14:34:01')[0m
  [1m[35mFixture Insert (0.8ms)[0m  INSERT INTO "users" ("id", "first_name", "last_name", "nick_name", "login_name", "start_date", "end_date", "notes", "created_at", "updated_at") VALUES (4, 'Allison', 'Wilson', 'Alli', 'wilsona', '2012-03-04', NULL, 'Electrical engineer.', '2013-08-16 14:34:01', '2013-08-16 14:34:01')
  [1m[36mFixture Delete (1.0ms)[0m  [1mDELETE FROM "phones"[0m
  [1m[35mFixture Insert (1.3ms)[0m  INSERT INTO "phones" ("id", "number", "tag", "user_id", "created_at", "updated_at") VALUES (1, '(111) 234-5678', 'Office', 1, '2013-08-16 14:34:01', '2013-08-16 14:34:01')
  [1m[36mFixture Insert (0.9ms)[0m  [1mINSERT INTO "phones" ("id", "number", "tag", "user_id", "created_at", "updated_at") VALUES (2, '(111) 345-6789', 'Home', 1, '2013-08-16 14:34:01', '2013-08-16 14:34:01')[0m
  [1m[35mFixture Insert (0.8ms)[0m  INSERT INTO "phones" ("id", "number", "tag", "user_id", "created_at", "updated_at") VALUES (3, '(333) 234-5678', 'Mobile', 1, '2013-08-16 14:34:01', '2013-08-16 14:34:01')
  [1m[36mFixture Insert (0.8ms)[0m  [1mINSERT INTO "phones" ("id", "number", "tag", "user_id", "created_at", "updated_at") VALUES (4, '(444) 345-6789', 'Pager', 1, '2013-08-16 14:34:01', '2013-08-16 14:34:01')[0m
  [1m[35mFixture Insert (0.7ms)[0m  INSERT INTO "phones" ("id", "number", "tag", "user_id", "created_at", "updated_at") VALUES (5, '(555) 234-5678', 'Mobile', 1, '2013-08-16 14:34:01', '2013-08-16 14:34:01')
  [1m[36mFixture Insert (0.8ms)[0m  [1mINSERT INTO "phones" ("id", "number", "tag", "user_id", "created_at", "updated_at") VALUES (6, '(666) 345-6789', 'Mobile', 1, '2013-08-16 14:34:01', '2013-08-16 14:34:01')[0m
  [1m[35m (7.0ms)[0m  COMMIT
  [1m[36m (0.7ms)[0m  [1mALTER TABLE "phones" ENABLE TRIGGER ALL;ALTER TABLE "users" ENABLE TRIGGER ALL;ALTER TABLE "schema_migrations" ENABLE TRIGGER ALL[0m
  [1m[35m (0.3ms)[0m  BEGIN
--------------------------------------------------------
UserTest: test: A given user should be valid initially. 
--------------------------------------------------------
  [1m[36mUser Load (1.6ms)[0m  [1mSELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35mUser Exists (2.1ms)[0m  SELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
-----------------------------------------------------------------------
UserTest: test: A given user should not be valid if first name is nil. 
-----------------------------------------------------------------------
  [1m[36mUser Load (0.8ms)[0m  [1mSELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35mUser Exists (0.6ms)[0m  SELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
----------------------------------------------------------------------------
UserTest: test: A given user should not be valid if first name is too long. 
----------------------------------------------------------------------------
  [1m[36mUser Load (0.9ms)[0m  [1mSELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35mUser Exists (0.8ms)[0m  SELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
-----------------------------------------------------------------------------
UserTest: test: A given user should not be valid if first name is too short. 
-----------------------------------------------------------------------------
  [1m[36mUser Load (0.7ms)[0m  [1mSELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1
  [1m[36m (0.4ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.4ms)[0m  BEGIN
------------------------------------------------------------------------------------------------
UserTest: test: A given user should not be valid if first name starts with a lower case letter. 
------------------------------------------------------------------------------------------------
  [1m[36mUser Load (1.2ms)[0m  [1mSELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35mUser Exists (0.9ms)[0m  SELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1
  [1m[36m (0.5ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.5ms)[0m  BEGIN
----------------------------------------------------------------------
UserTest: test: A given user should not be valid if last name is nil. 
----------------------------------------------------------------------
  [1m[36mUser Load (1.0ms)[0m  [1mSELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35mUser Exists (0.9ms)[0m  SELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1
  [1m[36m (0.4ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.4ms)[0m  BEGIN
---------------------------------------------------------------------------
UserTest: test: A given user should not be valid if last name is too long. 
---------------------------------------------------------------------------
  [1m[36mUser Load (1.1ms)[0m  [1mSELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35mUser Exists (0.9ms)[0m  SELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1
  [1m[36m (0.4ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.5ms)[0m  BEGIN
----------------------------------------------------------------------------
UserTest: test: A given user should not be valid if last name is too short. 
----------------------------------------------------------------------------
  [1m[36mUser Load (1.0ms)[0m  [1mSELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35mUser Exists (1.0ms)[0m  SELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1
  [1m[36m (0.4ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.4ms)[0m  BEGIN
---------------------------------------------------------------------------------------------
UserTest: test: A given user should not be valid if login name has non-alphanumeric letters. 
---------------------------------------------------------------------------------------------
  [1m[36mUser Load (1.2ms)[0m  [1mSELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35mUser Exists (0.8ms)[0m  SELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'johns-276' AND "users"."id" != 1) LIMIT 1
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
-------------------------------------------------------------------------------
UserTest: test: A given user should not be valid if login name is a duplicate. 
-------------------------------------------------------------------------------
  [1m[36mUser Load (1.1ms)[0m  [1mSELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35m (0.4ms)[0m  SAVEPOINT active_record_1
  [1m[36mUser Exists (0.9ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'orstedma' LIMIT 1[0m
  [1m[35m (0.4ms)[0m  ROLLBACK TO SAVEPOINT active_record_1
  [1m[36mUser Exists (0.9ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'orstedma' LIMIT 1[0m
  [1m[35m (0.5ms)[0m  ROLLBACK
  [1m[36m (0.4ms)[0m  [1mBEGIN[0m
-----------------------------------------------------------------------
UserTest: test: A given user should not be valid if login name is nil. 
-----------------------------------------------------------------------
  [1m[35mUser Load (1.1ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (0.8ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" IS NULL AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.5ms)[0m  ROLLBACK
  [1m[36m (0.5ms)[0m  [1mBEGIN[0m
----------------------------------------------------------------------------
UserTest: test: A given user should not be valid if login name is too long. 
----------------------------------------------------------------------------
  [1m[35mUser Load (0.8ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (0.9ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'abbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.3ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
-----------------------------------------------------------------------------
UserTest: test: A given user should not be valid if login name is too short. 
-----------------------------------------------------------------------------
  [1m[35mUser Load (0.9ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'aaaaa' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.4ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
---------------------------------------------------------------------------------------------
UserTest: test: A given user should not be valid if login name starts with a capital letter. 
---------------------------------------------------------------------------------------------
  [1m[35mUser Load (0.9ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (0.8ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'Johns276' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.4ms)[0m  ROLLBACK
  [1m[36m (0.4ms)[0m  [1mBEGIN[0m
------------------------------------------------------------------------------------
UserTest: test: A given user should require a start date if an end date is present. 
------------------------------------------------------------------------------------
  [1m[35mUser Load (1.0ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (0.9ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.5ms)[0m  ROLLBACK
  [1m[36m (0.4ms)[0m  [1mBEGIN[0m
--------------------------------------------------------------------------------
UserTest: test: A given user should require an end date on or after start date. 
--------------------------------------------------------------------------------
  [1m[35mUser Load (1.0ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (0.9ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.5ms)[0m  ROLLBACK
  [1m[36m (0.4ms)[0m  [1mBEGIN[0m
---------------------------------------------------------------------
UserTest: test: User should allow first_name to be set to "Charles". 
---------------------------------------------------------------------
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35m (0.3ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
--------------------------------------------------------------------------
UserTest: test: User should ensure first_name has a length of at least 2. 
--------------------------------------------------------------------------
  [1m[35mUser Exists (0.5ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.6ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.5ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.5ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
---------------------------------------------------------------------------
UserTest: test: User should ensure first_name has a length of at most 254. 
---------------------------------------------------------------------------
  [1m[36mUser Exists (0.5ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.5ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.5ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35m (0.3ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
-------------------------------------------------------------------------
UserTest: test: User should ensure last_name has a length of at least 2. 
-------------------------------------------------------------------------
  [1m[35mUser Exists (0.6ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.6ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.6ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.6ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.4ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
--------------------------------------------------------------------------
UserTest: test: User should ensure last_name has a length of at most 254. 
--------------------------------------------------------------------------
  [1m[36mUser Exists (0.6ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35m (0.4ms)[0m  ROLLBACK
  [1m[36m (0.4ms)[0m  [1mBEGIN[0m
--------------------------------------------------------------------------
UserTest: test: User should ensure login_name has a length of at least 6. 
--------------------------------------------------------------------------
  [1m[35mUser Exists (0.9ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxx' LIMIT 1
  [1m[36mUser Exists (0.6ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxx' LIMIT 1[0m
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxx' LIMIT 1
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxx' LIMIT 1[0m
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxx' LIMIT 1
  [1m[36m (0.4ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.2ms)[0m  BEGIN
---------------------------------------------------------------------------
UserTest: test: User should ensure login_name has a length of at most 254. 
---------------------------------------------------------------------------
  [1m[36mUser Exists (0.6ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' LIMIT 1[0m
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' LIMIT 1
  [1m[36mUser Exists (0.5ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' LIMIT 1[0m
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' LIMIT 1
  [1m[36mUser Exists (0.6ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' LIMIT 1[0m
  [1m[35m (0.3ms)[0m  ROLLBACK
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
----------------------------------------------
UserTest: test: User should have many phones. 
----------------------------------------------
  [1m[35m (0.4ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
-------------------------------------------------------------------------
UserTest: test: User should not allow first_name to be set to "charles". 
-------------------------------------------------------------------------
  [1m[35mUser Exists (5.3ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35m (0.3ms)[0m  ROLLBACK
  [1m[36m (0.4ms)[0m  [1mBEGIN[0m
--------------------------------------------------------------------------------
UserTest: test: User should require case sensitive unique value for login_name. 
--------------------------------------------------------------------------------
  [1m[35mUser Load (0.8ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (0.9ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'orstedma' LIMIT 1[0m
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'orstedma' LIMIT 1
  [1m[36m (0.5ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
----------------------------------------------------------
UserTest: test: User should require first_name to be set. 
----------------------------------------------------------
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.6ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.5ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.4ms)[0m  BEGIN
---------------------------------------------------------
UserTest: test: User should require last_name to be set. 
---------------------------------------------------------
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.9ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.4ms)[0m  BEGIN
----------------------------------------------------------
UserTest: test: User should require login_name to be set. 
----------------------------------------------------------
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.6ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.4ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
----------------------------------------------------------
UserTest: test: User should require start_date to be set. 
----------------------------------------------------------
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.4ms)[0m  [1mROLLBACK[0m
  [1m[36m (124.9ms)[0m  [1mDROP DATABASE IF EXISTS "ritrack_test"[0m
  [1m[35m (715.9ms)[0m  CREATE DATABASE "ritrack_test" ENCODING = 'unicode'
  [1m[36mSQL (48.0ms)[0m  [1mCREATE EXTENSION IF NOT EXISTS "plpgsql"[0m
  [1m[35m (96.2ms)[0m  CREATE TABLE "phones" ("id" serial primary key, "number" character varying(255), "tag" character varying(255), "user_id" integer, "created_at" timestamp, "updated_at" timestamp) 
  [1m[36m (58.0ms)[0m  [1mCREATE INDEX "index_phones_on_number" ON "phones" USING btree ("number")[0m
  [1m[35m (59.2ms)[0m  CREATE INDEX "index_phones_on_user_id" ON "phones" USING btree ("user_id")
  [1m[36m (88.6ms)[0m  [1mCREATE TABLE "users" ("id" serial primary key, "first_name" character varying(255), "last_name" character varying(255), "nick_name" character varying(255), "login_name" character varying(255), "notes" text, "created_at" timestamp, "updated_at" timestamp, "start_date" date, "end_date" date) [0m
  [1m[35m (10.9ms)[0m  CREATE TABLE "schema_migrations" ("version" character varying(255) NOT NULL) 
  [1m[36m (54.4ms)[0m  [1mCREATE UNIQUE INDEX "unique_schema_migrations" ON "schema_migrations" ("version")[0m
  [1m[35m (1.0ms)[0m  SELECT version FROM "schema_migrations"
  [1m[36m (5.8ms)[0m  [1mINSERT INTO "schema_migrations" (version) VALUES ('20130816142047')[0m
  [1m[35m (7.9ms)[0m  INSERT INTO "schema_migrations" (version) VALUES ('20130811212425')
  [1m[36m (8.1ms)[0m  [1mINSERT INTO "schema_migrations" (version) VALUES ('20130811195620')[0m
  [1m[35m (7.7ms)[0m  INSERT INTO "schema_migrations" (version) VALUES ('20130811193133')
  [1m[36m (8.0ms)[0m  [1mINSERT INTO "schema_migrations" (version) VALUES ('20130811195557')[0m
  [1m[35mActiveRecord::SchemaMigration Load (1.1ms)[0m  SELECT "schema_migrations".* FROM "schema_migrations"
  [1m[36mActiveRecord::SchemaMigration Load (0.6ms)[0m  [1mSELECT "schema_migrations".* FROM "schema_migrations"[0m
  [1m[36m (223.2ms)[0m  [1mDROP DATABASE IF EXISTS "ritrack_test"[0m
  [1m[35m (699.8ms)[0m  CREATE DATABASE "ritrack_test" ENCODING = 'unicode'
  [1m[36mSQL (47.1ms)[0m  [1mCREATE EXTENSION IF NOT EXISTS "plpgsql"[0m
  [1m[35m (99.5ms)[0m  CREATE TABLE "phones" ("id" serial primary key, "number" character varying(255), "tag" character varying(255), "user_id" integer, "created_at" timestamp, "updated_at" timestamp) 
  [1m[36m (49.8ms)[0m  [1mCREATE INDEX "index_phones_on_number" ON "phones" USING btree ("number")[0m
  [1m[35m (51.0ms)[0m  CREATE INDEX "index_phones_on_user_id" ON "phones" USING btree ("user_id")
  [1m[36m (96.8ms)[0m  [1mCREATE TABLE "users" ("id" serial primary key, "first_name" character varying(255), "last_name" character varying(255), "nick_name" character varying(255), "login_name" character varying(255), "notes" text, "created_at" timestamp, "updated_at" timestamp, "start_date" date, "end_date" date) [0m
  [1m[35m (10.9ms)[0m  CREATE TABLE "schema_migrations" ("version" character varying(255) NOT NULL) 
  [1m[36m (54.2ms)[0m  [1mCREATE UNIQUE INDEX "unique_schema_migrations" ON "schema_migrations" ("version")[0m
  [1m[35m (1.0ms)[0m  SELECT version FROM "schema_migrations"
  [1m[36m (5.9ms)[0m  [1mINSERT INTO "schema_migrations" (version) VALUES ('20130816142047')[0m
  [1m[35m (7.9ms)[0m  INSERT INTO "schema_migrations" (version) VALUES ('20130811212425')
  [1m[36m (7.9ms)[0m  [1mINSERT INTO "schema_migrations" (version) VALUES ('20130811195620')[0m
  [1m[35m (8.2ms)[0m  INSERT INTO "schema_migrations" (version) VALUES ('20130811193133')
  [1m[36m (7.8ms)[0m  [1mINSERT INTO "schema_migrations" (version) VALUES ('20130811195557')[0m
  [1m[35mActiveRecord::SchemaMigration Load (1.1ms)[0m  SELECT "schema_migrations".* FROM "schema_migrations"
  [1m[36mActiveRecord::SchemaMigration Load (0.5ms)[0m  [1mSELECT "schema_migrations".* FROM "schema_migrations"[0m
  [1m[35m (1.0ms)[0m  ALTER TABLE "phones" DISABLE TRIGGER ALL;ALTER TABLE "users" DISABLE TRIGGER ALL;ALTER TABLE "schema_migrations" DISABLE TRIGGER ALL
  [1m[36m (0.5ms)[0m  [1mBEGIN[0m
  [1m[35mFixture Delete (1.0ms)[0m  DELETE FROM "users"
  [1m[36mFixture Insert (1.4ms)[0m  [1mINSERT INTO "users" ("id", "first_name", "last_name", "nick_name", "login_name", "start_date", "end_date", "notes", "created_at", "updated_at") VALUES (1, 'Michael', 'Orsted', 'Mike', 'orstedma', '2012-02-04', NULL, 'This user lives in Chicago.', '2013-08-16 14:47:33', '2013-08-16 14:47:33')[0m
  [1m[35mFixture Insert (0.9ms)[0m  INSERT INTO "users" ("id", "first_name", "last_name", "nick_name", "login_name", "start_date", "end_date", "notes", "created_at", "updated_at") VALUES (2, 'Frederick', 'Free-Loader', 'Frederick', 'freelofw', '2012-03-04', NULL, 'This user is completely useless', '2013-08-16 14:47:33', '2013-08-16 14:47:33')
  [1m[36mFixture Insert (0.9ms)[0m  [1mINSERT INTO "users" ("id", "first_name", "last_name", "nick_name", "login_name", "start_date", "end_date", "notes", "created_at", "updated_at") VALUES (3, 'Michael', 'Winstead', 'Mike', 'winstem', '2012-02-04', '2013-08-12', 'This user lives in New York. This user is disabled in the system.', '2013-08-16 14:47:33', '2013-08-16 14:47:33')[0m
  [1m[35mFixture Insert (0.8ms)[0m  INSERT INTO "users" ("id", "first_name", "last_name", "nick_name", "login_name", "start_date", "end_date", "notes", "created_at", "updated_at") VALUES (4, 'Allison', 'Wilson', 'Alli', 'wilsona', '2012-03-04', NULL, 'Electrical engineer.', '2013-08-16 14:47:33', '2013-08-16 14:47:33')
  [1m[36mFixture Delete (1.1ms)[0m  [1mDELETE FROM "phones"[0m
  [1m[35mFixture Insert (1.4ms)[0m  INSERT INTO "phones" ("id", "number", "tag", "user_id", "created_at", "updated_at") VALUES (1, '(211) 234-1111', 'Office', 1, '2013-08-16 14:47:33', '2013-08-16 14:47:33')
  [1m[36mFixture Insert (1.0ms)[0m  [1mINSERT INTO "phones" ("id", "number", "tag", "user_id", "created_at", "updated_at") VALUES (2, '(222) 345-2222', 'Home', 1, '2013-08-16 14:47:33', '2013-08-16 14:47:33')[0m
  [1m[35mFixture Insert (0.8ms)[0m  INSERT INTO "phones" ("id", "number", "tag", "user_id", "created_at", "updated_at") VALUES (3, '(333) 456-3333', 'Mobile', 1, '2013-08-16 14:47:33', '2013-08-16 14:47:33')
  [1m[36mFixture Insert (0.7ms)[0m  [1mINSERT INTO "phones" ("id", "number", "tag", "user_id", "created_at", "updated_at") VALUES (4, '(444) 567-4444', 'Pager', 1, '2013-08-16 14:47:33', '2013-08-16 14:47:33')[0m
  [1m[35mFixture Insert (0.7ms)[0m  INSERT INTO "phones" ("id", "number", "tag", "user_id", "created_at", "updated_at") VALUES (5, '(555) 678-5555', 'Mobile', 1, '2013-08-16 14:47:33', '2013-08-16 14:47:33')
  [1m[36mFixture Insert (0.6ms)[0m  [1mINSERT INTO "phones" ("id", "number", "tag", "user_id", "created_at", "updated_at") VALUES (6, '(666) 789-6666', 'Mobile', 1, '2013-08-16 14:47:33', '2013-08-16 14:47:33')[0m
  [1m[35m (8.9ms)[0m  COMMIT
  [1m[36m (0.7ms)[0m  [1mALTER TABLE "phones" ENABLE TRIGGER ALL;ALTER TABLE "users" ENABLE TRIGGER ALL;ALTER TABLE "schema_migrations" ENABLE TRIGGER ALL[0m
  [1m[35m (0.3ms)[0m  BEGIN
--------------------------------------------------------
PhoneTest: test: Phone should require number to be set. 
--------------------------------------------------------
  [1m[36m (0.5ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.4ms)[0m  BEGIN
--------------------------------------------------------
UserTest: test: A given user should be valid initially. 
--------------------------------------------------------
  [1m[36mUser Load (1.8ms)[0m  [1mSELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35mUser Exists (1.9ms)[0m  SELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
-----------------------------------------------------------------------
UserTest: test: A given user should not be valid if first name is nil. 
-----------------------------------------------------------------------
  [1m[36mUser Load (1.1ms)[0m  [1mSELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35mUser Exists (1.0ms)[0m  SELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1
  [1m[36m (0.4ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.4ms)[0m  BEGIN
----------------------------------------------------------------------------
UserTest: test: A given user should not be valid if first name is too long. 
----------------------------------------------------------------------------
  [1m[36mUser Load (1.0ms)[0m  [1mSELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35mUser Exists (1.1ms)[0m  SELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1
  [1m[36m (0.5ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.5ms)[0m  BEGIN
-----------------------------------------------------------------------------
UserTest: test: A given user should not be valid if first name is too short. 
-----------------------------------------------------------------------------
  [1m[36mUser Load (1.2ms)[0m  [1mSELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35mUser Exists (1.0ms)[0m  SELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1
  [1m[36m (0.4ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
------------------------------------------------------------------------------------------------
UserTest: test: A given user should not be valid if first name starts with a lower case letter. 
------------------------------------------------------------------------------------------------
  [1m[36mUser Load (0.9ms)[0m  [1mSELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35mUser Exists (0.8ms)[0m  SELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1
  [1m[36m (0.4ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.2ms)[0m  BEGIN
----------------------------------------------------------------------
UserTest: test: A given user should not be valid if last name is nil. 
----------------------------------------------------------------------
  [1m[36mUser Load (0.9ms)[0m  [1mSELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35mUser Exists (1.0ms)[0m  SELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1
  [1m[36m (0.4ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.4ms)[0m  BEGIN
---------------------------------------------------------------------------
UserTest: test: A given user should not be valid if last name is too long. 
---------------------------------------------------------------------------
  [1m[36mUser Load (1.1ms)[0m  [1mSELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1
  [1m[36m (0.5ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.4ms)[0m  BEGIN
----------------------------------------------------------------------------
UserTest: test: A given user should not be valid if last name is too short. 
----------------------------------------------------------------------------
  [1m[36mUser Load (1.0ms)[0m  [1mSELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35mUser Exists (0.9ms)[0m  SELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1
  [1m[36m (0.2ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.4ms)[0m  BEGIN
---------------------------------------------------------------------------------------------
UserTest: test: A given user should not be valid if login name has non-alphanumeric letters. 
---------------------------------------------------------------------------------------------
  [1m[36mUser Load (0.8ms)[0m  [1mSELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35mUser Exists (0.8ms)[0m  SELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'johns-276' AND "users"."id" != 1) LIMIT 1
  [1m[36m (0.4ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.4ms)[0m  BEGIN
-------------------------------------------------------------------------------
UserTest: test: A given user should not be valid if login name is a duplicate. 
-------------------------------------------------------------------------------
  [1m[36mUser Load (1.0ms)[0m  [1mSELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35m (0.5ms)[0m  SAVEPOINT active_record_1
  [1m[36mUser Exists (0.9ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'orstedma' LIMIT 1[0m
  [1m[35m (0.6ms)[0m  ROLLBACK TO SAVEPOINT active_record_1
  [1m[36mUser Exists (1.0ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'orstedma' LIMIT 1[0m
  [1m[35m (0.5ms)[0m  ROLLBACK
  [1m[36m (0.4ms)[0m  [1mBEGIN[0m
-----------------------------------------------------------------------
UserTest: test: A given user should not be valid if login name is nil. 
-----------------------------------------------------------------------
  [1m[35mUser Load (1.1ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (1.0ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" IS NULL AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.5ms)[0m  ROLLBACK
  [1m[36m (0.5ms)[0m  [1mBEGIN[0m
----------------------------------------------------------------------------
UserTest: test: A given user should not be valid if login name is too long. 
----------------------------------------------------------------------------
  [1m[35mUser Load (1.0ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'abbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.5ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
-----------------------------------------------------------------------------
UserTest: test: A given user should not be valid if login name is too short. 
-----------------------------------------------------------------------------
  [1m[35mUser Load (1.1ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (1.0ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'aaaaa' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.4ms)[0m  ROLLBACK
  [1m[36m (0.4ms)[0m  [1mBEGIN[0m
---------------------------------------------------------------------------------------------
UserTest: test: A given user should not be valid if login name starts with a capital letter. 
---------------------------------------------------------------------------------------------
  [1m[35mUser Load (1.1ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (1.0ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'Johns276' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.6ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
------------------------------------------------------------------------------------
UserTest: test: A given user should require a start date if an end date is present. 
------------------------------------------------------------------------------------
  [1m[35mUser Load (1.1ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (1.0ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.5ms)[0m  ROLLBACK
  [1m[36m (0.5ms)[0m  [1mBEGIN[0m
--------------------------------------------------------------------------------
UserTest: test: A given user should require an end date on or after start date. 
--------------------------------------------------------------------------------
  [1m[35mUser Load (1.0ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (0.9ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.5ms)[0m  ROLLBACK
  [1m[36m (0.5ms)[0m  [1mBEGIN[0m
---------------------------------------------------------------------
UserTest: test: User should allow first_name to be set to "Charles". 
---------------------------------------------------------------------
  [1m[35mUser Exists (0.9ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.6ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35m (0.3ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
--------------------------------------------------------------------------
UserTest: test: User should ensure first_name has a length of at least 2. 
--------------------------------------------------------------------------
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.6ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.6ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.2ms)[0m  BEGIN
---------------------------------------------------------------------------
UserTest: test: User should ensure first_name has a length of at most 254. 
---------------------------------------------------------------------------
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.6ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.5ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35m (0.2ms)[0m  ROLLBACK
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
-------------------------------------------------------------------------
UserTest: test: User should ensure last_name has a length of at least 2. 
-------------------------------------------------------------------------
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.5ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.6ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
--------------------------------------------------------------------------
UserTest: test: User should ensure last_name has a length of at most 254. 
--------------------------------------------------------------------------
  [1m[36mUser Exists (0.6ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.8ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35m (0.3ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
--------------------------------------------------------------------------
UserTest: test: User should ensure login_name has a length of at least 6. 
--------------------------------------------------------------------------
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxx' LIMIT 1
  [1m[36mUser Exists (0.5ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxx' LIMIT 1[0m
  [1m[35mUser Exists (0.5ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxx' LIMIT 1
  [1m[36mUser Exists (1.0ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxx' LIMIT 1[0m
  [1m[35mUser Exists (0.6ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxx' LIMIT 1
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.2ms)[0m  BEGIN
---------------------------------------------------------------------------
UserTest: test: User should ensure login_name has a length of at most 254. 
---------------------------------------------------------------------------
  [1m[36mUser Exists (5.6ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' LIMIT 1[0m
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' LIMIT 1
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' LIMIT 1[0m
  [1m[35mUser Exists (1.0ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' LIMIT 1
  [1m[36mUser Exists (0.6ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' LIMIT 1[0m
  [1m[35m (0.4ms)[0m  ROLLBACK
  [1m[36m (0.4ms)[0m  [1mBEGIN[0m
----------------------------------------------
UserTest: test: User should have many phones. 
----------------------------------------------
  [1m[35m (0.4ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
-------------------------------------------------------------------------
UserTest: test: User should not allow first_name to be set to "charles". 
-------------------------------------------------------------------------
  [1m[35mUser Exists (0.5ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35m (0.4ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
--------------------------------------------------------------------------------
UserTest: test: User should require case sensitive unique value for login_name. 
--------------------------------------------------------------------------------
  [1m[35mUser Load (0.9ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'orstedma' LIMIT 1[0m
  [1m[35mUser Exists (0.8ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'orstedma' LIMIT 1
  [1m[36m (0.4ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
----------------------------------------------------------
UserTest: test: User should require first_name to be set. 
----------------------------------------------------------
  [1m[36mUser Exists (0.8ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.4ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
---------------------------------------------------------
UserTest: test: User should require last_name to be set. 
---------------------------------------------------------
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.5ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.4ms)[0m  BEGIN
----------------------------------------------------------
UserTest: test: User should require login_name to be set. 
----------------------------------------------------------
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.4ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.4ms)[0m  BEGIN
----------------------------------------------------------
UserTest: test: User should require start_date to be set. 
----------------------------------------------------------
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.4ms)[0m  [1mROLLBACK[0m
  [1m[36m (125.9ms)[0m  [1mDROP DATABASE IF EXISTS "ritrack_test"[0m
  [1m[35m (792.2ms)[0m  CREATE DATABASE "ritrack_test" ENCODING = 'unicode'
  [1m[36mSQL (41.6ms)[0m  [1mCREATE EXTENSION IF NOT EXISTS "plpgsql"[0m
  [1m[35m (115.6ms)[0m  CREATE TABLE "phones" ("id" serial primary key, "number" character varying(255), "tag" character varying(255), "user_id" integer, "created_at" timestamp, "updated_at" timestamp) 
  [1m[36m (49.7ms)[0m  [1mCREATE INDEX "index_phones_on_number" ON "phones" USING btree ("number")[0m
  [1m[35m (50.9ms)[0m  CREATE INDEX "index_phones_on_user_id" ON "phones" USING btree ("user_id")
  [1m[36m (97.0ms)[0m  [1mCREATE TABLE "users" ("id" serial primary key, "first_name" character varying(255), "last_name" character varying(255), "nick_name" character varying(255), "login_name" character varying(255), "notes" text, "created_at" timestamp, "updated_at" timestamp, "start_date" date, "end_date" date) [0m
  [1m[35m (10.9ms)[0m  CREATE TABLE "schema_migrations" ("version" character varying(255) NOT NULL) 
  [1m[36m (46.2ms)[0m  [1mCREATE UNIQUE INDEX "unique_schema_migrations" ON "schema_migrations" ("version")[0m
  [1m[35m (1.0ms)[0m  SELECT version FROM "schema_migrations"
  [1m[36m (5.5ms)[0m  [1mINSERT INTO "schema_migrations" (version) VALUES ('20130816142047')[0m
  [1m[35m (8.0ms)[0m  INSERT INTO "schema_migrations" (version) VALUES ('20130811212425')
  [1m[36m (7.9ms)[0m  [1mINSERT INTO "schema_migrations" (version) VALUES ('20130811195620')[0m
  [1m[35m (8.1ms)[0m  INSERT INTO "schema_migrations" (version) VALUES ('20130811193133')
  [1m[36m (7.8ms)[0m  [1mINSERT INTO "schema_migrations" (version) VALUES ('20130811195557')[0m
  [1m[35mActiveRecord::SchemaMigration Load (1.1ms)[0m  SELECT "schema_migrations".* FROM "schema_migrations"
  [1m[36mActiveRecord::SchemaMigration Load (0.7ms)[0m  [1mSELECT "schema_migrations".* FROM "schema_migrations"[0m
  [1m[35m (0.8ms)[0m  ALTER TABLE "phones" DISABLE TRIGGER ALL;ALTER TABLE "users" DISABLE TRIGGER ALL;ALTER TABLE "schema_migrations" DISABLE TRIGGER ALL
  [1m[36m (0.5ms)[0m  [1mBEGIN[0m
  [1m[35mFixture Delete (1.1ms)[0m  DELETE FROM "users"
  [1m[36mFixture Insert (1.5ms)[0m  [1mINSERT INTO "users" ("id", "first_name", "last_name", "nick_name", "login_name", "start_date", "end_date", "notes", "created_at", "updated_at") VALUES (1, 'Michael', 'Orsted', 'Mike', 'orstedma', '2012-02-04', NULL, 'This user lives in Chicago.', '2013-08-16 14:56:31', '2013-08-16 14:56:31')[0m
  [1m[35mFixture Insert (0.9ms)[0m  INSERT INTO "users" ("id", "first_name", "last_name", "nick_name", "login_name", "start_date", "end_date", "notes", "created_at", "updated_at") VALUES (2, 'Frederick', 'Free-Loader', 'Frederick', 'freelofw', '2012-03-04', NULL, 'This user is completely useless', '2013-08-16 14:56:31', '2013-08-16 14:56:31')
  [1m[36mFixture Insert (0.9ms)[0m  [1mINSERT INTO "users" ("id", "first_name", "last_name", "nick_name", "login_name", "start_date", "end_date", "notes", "created_at", "updated_at") VALUES (3, 'Michael', 'Winstead', 'Mike', 'winstem', '2012-02-04', '2013-08-12', 'This user lives in New York. This user is disabled in the system.', '2013-08-16 14:56:31', '2013-08-16 14:56:31')[0m
  [1m[35mFixture Insert (0.8ms)[0m  INSERT INTO "users" ("id", "first_name", "last_name", "nick_name", "login_name", "start_date", "end_date", "notes", "created_at", "updated_at") VALUES (4, 'Allison', 'Wilson', 'Alli', 'wilsona', '2012-03-04', NULL, 'Electrical engineer.', '2013-08-16 14:56:31', '2013-08-16 14:56:31')
  [1m[36mFixture Delete (1.1ms)[0m  [1mDELETE FROM "phones"[0m
  [1m[35mFixture Insert (1.3ms)[0m  INSERT INTO "phones" ("id", "number", "tag", "user_id", "created_at", "updated_at") VALUES (1, '(211) 234-1111', 'Office', 1, '2013-08-16 14:56:31', '2013-08-16 14:56:31')
  [1m[36mFixture Insert (1.0ms)[0m  [1mINSERT INTO "phones" ("id", "number", "tag", "user_id", "created_at", "updated_at") VALUES (2, '(222) 345-2222', 'Home', 1, '2013-08-16 14:56:31', '2013-08-16 14:56:31')[0m
  [1m[35mFixture Insert (0.8ms)[0m  INSERT INTO "phones" ("id", "number", "tag", "user_id", "created_at", "updated_at") VALUES (3, '(333) 456-3333', 'Mobile', 1, '2013-08-16 14:56:31', '2013-08-16 14:56:31')
  [1m[36mFixture Insert (0.8ms)[0m  [1mINSERT INTO "phones" ("id", "number", "tag", "user_id", "created_at", "updated_at") VALUES (4, '(444) 567-4444', 'Pager', 1, '2013-08-16 14:56:31', '2013-08-16 14:56:31')[0m
  [1m[35mFixture Insert (0.8ms)[0m  INSERT INTO "phones" ("id", "number", "tag", "user_id", "created_at", "updated_at") VALUES (5, '(555) 678-5555', 'Mobile', 1, '2013-08-16 14:56:31', '2013-08-16 14:56:31')
  [1m[36mFixture Insert (0.7ms)[0m  [1mINSERT INTO "phones" ("id", "number", "tag", "user_id", "created_at", "updated_at") VALUES (6, '(666) 789-6666', 'Mobile', 1, '2013-08-16 14:56:31', '2013-08-16 14:56:31')[0m
  [1m[35m (10.6ms)[0m  COMMIT
  [1m[36m (0.7ms)[0m  [1mALTER TABLE "phones" ENABLE TRIGGER ALL;ALTER TABLE "users" ENABLE TRIGGER ALL;ALTER TABLE "schema_migrations" ENABLE TRIGGER ALL[0m
  [1m[35m (0.4ms)[0m  BEGIN
--------------------------------------------------------
PhoneTest: test: Phone should require number to be set. 
--------------------------------------------------------
  [1m[36m (0.4ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
--------------------------------------------------------
UserTest: test: A given user should be valid initially. 
--------------------------------------------------------
  [1m[36mUser Load (1.5ms)[0m  [1mSELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35mUser Exists (1.9ms)[0m  SELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
-----------------------------------------------------------------------
UserTest: test: A given user should not be valid if first name is nil. 
-----------------------------------------------------------------------
  [1m[36mUser Load (0.8ms)[0m  [1mSELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35mUser Exists (0.8ms)[0m  SELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
----------------------------------------------------------------------------
UserTest: test: A given user should not be valid if first name is too long. 
----------------------------------------------------------------------------
  [1m[36mUser Load (0.8ms)[0m  [1mSELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
-----------------------------------------------------------------------------
UserTest: test: A given user should not be valid if first name is too short. 
-----------------------------------------------------------------------------
  [1m[36mUser Load (0.9ms)[0m  [1mSELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35mUser Exists (0.8ms)[0m  SELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1
  [1m[36m (0.4ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
------------------------------------------------------------------------------------------------
UserTest: test: A given user should not be valid if first name starts with a lower case letter. 
------------------------------------------------------------------------------------------------
  [1m[36mUser Load (0.8ms)[0m  [1mSELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35mUser Exists (0.8ms)[0m  SELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
----------------------------------------------------------------------
UserTest: test: A given user should not be valid if last name is nil. 
----------------------------------------------------------------------
  [1m[36mUser Load (0.8ms)[0m  [1mSELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35mUser Exists (0.8ms)[0m  SELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
---------------------------------------------------------------------------
UserTest: test: A given user should not be valid if last name is too long. 
---------------------------------------------------------------------------
  [1m[36mUser Load (0.8ms)[0m  [1mSELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
----------------------------------------------------------------------------
UserTest: test: A given user should not be valid if last name is too short. 
----------------------------------------------------------------------------
  [1m[36mUser Load (0.8ms)[0m  [1mSELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35mUser Exists (0.8ms)[0m  SELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1
  [1m[36m (0.4ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
---------------------------------------------------------------------------------------------
UserTest: test: A given user should not be valid if login name has non-alphanumeric letters. 
---------------------------------------------------------------------------------------------
  [1m[36mUser Load (0.8ms)[0m  [1mSELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35mUser Exists (1.0ms)[0m  SELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'johns-276' AND "users"."id" != 1) LIMIT 1
  [1m[36m (0.4ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.4ms)[0m  BEGIN
-------------------------------------------------------------------------------
UserTest: test: A given user should not be valid if login name is a duplicate. 
-------------------------------------------------------------------------------
  [1m[36mUser Load (1.1ms)[0m  [1mSELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35m (0.5ms)[0m  SAVEPOINT active_record_1
  [1m[36mUser Exists (0.9ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'orstedma' LIMIT 1[0m
  [1m[35m (0.4ms)[0m  ROLLBACK TO SAVEPOINT active_record_1
  [1m[36mUser Exists (0.9ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'orstedma' LIMIT 1[0m
  [1m[35m (0.5ms)[0m  ROLLBACK
  [1m[36m (0.5ms)[0m  [1mBEGIN[0m
-----------------------------------------------------------------------
UserTest: test: A given user should not be valid if login name is nil. 
-----------------------------------------------------------------------
  [1m[35mUser Load (1.1ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (0.9ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" IS NULL AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.4ms)[0m  ROLLBACK
  [1m[36m (0.4ms)[0m  [1mBEGIN[0m
----------------------------------------------------------------------------
UserTest: test: A given user should not be valid if login name is too long. 
----------------------------------------------------------------------------
  [1m[35mUser Load (0.7ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'abbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.4ms)[0m  ROLLBACK
  [1m[36m (0.4ms)[0m  [1mBEGIN[0m
-----------------------------------------------------------------------------
UserTest: test: A given user should not be valid if login name is too short. 
-----------------------------------------------------------------------------
  [1m[35mUser Load (1.1ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (1.0ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'aaaaa' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.4ms)[0m  ROLLBACK
  [1m[36m (0.4ms)[0m  [1mBEGIN[0m
---------------------------------------------------------------------------------------------
UserTest: test: A given user should not be valid if login name starts with a capital letter. 
---------------------------------------------------------------------------------------------
  [1m[35mUser Load (1.0ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (0.9ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'Johns276' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.5ms)[0m  ROLLBACK
  [1m[36m (0.4ms)[0m  [1mBEGIN[0m
------------------------------------------------------------------------------------
UserTest: test: A given user should require a start date if an end date is present. 
------------------------------------------------------------------------------------
  [1m[35mUser Load (1.1ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (1.1ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.5ms)[0m  ROLLBACK
  [1m[36m (0.5ms)[0m  [1mBEGIN[0m
--------------------------------------------------------------------------------
UserTest: test: A given user should require an end date on or after start date. 
--------------------------------------------------------------------------------
  [1m[35mUser Load (1.0ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (0.9ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.6ms)[0m  ROLLBACK
  [1m[36m (0.4ms)[0m  [1mBEGIN[0m
---------------------------------------------------------------------
UserTest: test: User should allow first_name to be set to "Charles". 
---------------------------------------------------------------------
  [1m[35mUser Exists (0.8ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.6ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35m (0.3ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
--------------------------------------------------------------------------
UserTest: test: User should ensure first_name has a length of at least 2. 
--------------------------------------------------------------------------
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.5ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.6ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
---------------------------------------------------------------------------
UserTest: test: User should ensure first_name has a length of at most 254. 
---------------------------------------------------------------------------
  [1m[36mUser Exists (0.6ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.6ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.6ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.6ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.6ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35m (0.4ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
-------------------------------------------------------------------------
UserTest: test: User should ensure last_name has a length of at least 2. 
-------------------------------------------------------------------------
  [1m[35mUser Exists (0.6ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.5ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.4ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.4ms)[0m  BEGIN
--------------------------------------------------------------------------
UserTest: test: User should ensure last_name has a length of at most 254. 
--------------------------------------------------------------------------
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.8ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.6ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35m (0.4ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
--------------------------------------------------------------------------
UserTest: test: User should ensure login_name has a length of at least 6. 
--------------------------------------------------------------------------
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxx' LIMIT 1
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxx' LIMIT 1[0m
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxx' LIMIT 1
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxx' LIMIT 1[0m
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxx' LIMIT 1
  [1m[36m (0.4ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.2ms)[0m  BEGIN
---------------------------------------------------------------------------
UserTest: test: User should ensure login_name has a length of at most 254. 
---------------------------------------------------------------------------
  [1m[36mUser Exists (5.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' LIMIT 1[0m
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' LIMIT 1
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' LIMIT 1[0m
  [1m[35mUser Exists (0.9ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' LIMIT 1
  [1m[36mUser Exists (0.6ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' LIMIT 1[0m
  [1m[35m (0.3ms)[0m  ROLLBACK
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
----------------------------------------------
UserTest: test: User should have many phones. 
----------------------------------------------
  [1m[35m (0.2ms)[0m  ROLLBACK
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
-------------------------------------------------------------------------
UserTest: test: User should not allow first_name to be set to "charles". 
-------------------------------------------------------------------------
  [1m[35mUser Exists (0.6ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.6ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35m (0.3ms)[0m  ROLLBACK
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
--------------------------------------------------------------------------------
UserTest: test: User should require case sensitive unique value for login_name. 
--------------------------------------------------------------------------------
  [1m[35mUser Load (0.8ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'orstedma' LIMIT 1[0m
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'orstedma' LIMIT 1
  [1m[36m (0.4ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
----------------------------------------------------------
UserTest: test: User should require first_name to be set. 
----------------------------------------------------------
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.8ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
---------------------------------------------------------
UserTest: test: User should require last_name to be set. 
---------------------------------------------------------
  [1m[36mUser Exists (0.8ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
----------------------------------------------------------
UserTest: test: User should require login_name to be set. 
----------------------------------------------------------
  [1m[36mUser Exists (0.5ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.4ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
----------------------------------------------------------
UserTest: test: User should require start_date to be set. 
----------------------------------------------------------
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.4ms)[0m  [1mROLLBACK[0m
  [1m[36m (222.4ms)[0m  [1mDROP DATABASE IF EXISTS "ritrack_test"[0m
  [1m[35m (832.6ms)[0m  CREATE DATABASE "ritrack_test" ENCODING = 'unicode'
  [1m[36mSQL (45.1ms)[0m  [1mCREATE EXTENSION IF NOT EXISTS "plpgsql"[0m
  [1m[35m (101.7ms)[0m  CREATE TABLE "phones" ("id" serial primary key, "number" character varying(255), "tag" character varying(255), "user_id" integer, "created_at" timestamp, "updated_at" timestamp) 
  [1m[36m (41.3ms)[0m  [1mCREATE INDEX "index_phones_on_number" ON "phones" USING btree ("number")[0m
  [1m[35m (36.0ms)[0m  CREATE INDEX "index_phones_on_user_id" ON "phones" USING btree ("user_id")
  [1m[36m (97.0ms)[0m  [1mCREATE TABLE "users" ("id" serial primary key, "first_name" character varying(255), "last_name" character varying(255), "nick_name" character varying(255), "login_name" character varying(255), "notes" text, "created_at" timestamp, "updated_at" timestamp, "start_date" date, "end_date" date) [0m
  [1m[35m (10.7ms)[0m  CREATE TABLE "schema_migrations" ("version" character varying(255) NOT NULL) 
  [1m[36m (37.8ms)[0m  [1mCREATE UNIQUE INDEX "unique_schema_migrations" ON "schema_migrations" ("version")[0m
  [1m[35m (1.0ms)[0m  SELECT version FROM "schema_migrations"
  [1m[36m (5.7ms)[0m  [1mINSERT INTO "schema_migrations" (version) VALUES ('20130816142047')[0m
  [1m[35m (7.9ms)[0m  INSERT INTO "schema_migrations" (version) VALUES ('20130811212425')
  [1m[36m (7.9ms)[0m  [1mINSERT INTO "schema_migrations" (version) VALUES ('20130811195620')[0m
  [1m[35m (8.0ms)[0m  INSERT INTO "schema_migrations" (version) VALUES ('20130811193133')
  [1m[36m (7.9ms)[0m  [1mINSERT INTO "schema_migrations" (version) VALUES ('20130811195557')[0m
  [1m[35mActiveRecord::SchemaMigration Load (1.1ms)[0m  SELECT "schema_migrations".* FROM "schema_migrations"
  [1m[36mActiveRecord::SchemaMigration Load (0.6ms)[0m  [1mSELECT "schema_migrations".* FROM "schema_migrations"[0m
  [1m[35m (1.3ms)[0m  ALTER TABLE "phones" DISABLE TRIGGER ALL;ALTER TABLE "users" DISABLE TRIGGER ALL;ALTER TABLE "schema_migrations" DISABLE TRIGGER ALL
  [1m[36m (0.5ms)[0m  [1mBEGIN[0m
  [1m[35mFixture Delete (1.0ms)[0m  DELETE FROM "users"
  [1m[36mFixture Insert (1.4ms)[0m  [1mINSERT INTO "users" ("id", "first_name", "last_name", "nick_name", "login_name", "start_date", "end_date", "notes", "created_at", "updated_at") VALUES (1, 'Michael', 'Orsted', 'Mike', 'orstedma', '2012-02-04', NULL, 'This user lives in Chicago.', '2013-08-16 15:01:02', '2013-08-16 15:01:02')[0m
  [1m[35mFixture Insert (0.9ms)[0m  INSERT INTO "users" ("id", "first_name", "last_name", "nick_name", "login_name", "start_date", "end_date", "notes", "created_at", "updated_at") VALUES (2, 'Frederick', 'Free-Loader', 'Frederick', 'freelofw', '2012-03-04', NULL, 'This user is completely useless', '2013-08-16 15:01:02', '2013-08-16 15:01:02')
  [1m[36mFixture Insert (0.8ms)[0m  [1mINSERT INTO "users" ("id", "first_name", "last_name", "nick_name", "login_name", "start_date", "end_date", "notes", "created_at", "updated_at") VALUES (3, 'Michael', 'Winstead', 'Mike', 'winstem', '2012-02-04', '2013-08-12', 'This user lives in New York. This user is disabled in the system.', '2013-08-16 15:01:02', '2013-08-16 15:01:02')[0m
  [1m[35mFixture Insert (0.8ms)[0m  INSERT INTO "users" ("id", "first_name", "last_name", "nick_name", "login_name", "start_date", "end_date", "notes", "created_at", "updated_at") VALUES (4, 'Allison', 'Wilson', 'Alli', 'wilsona', '2012-03-04', NULL, 'Electrical engineer.', '2013-08-16 15:01:02', '2013-08-16 15:01:02')
  [1m[36mFixture Delete (1.6ms)[0m  [1mDELETE FROM "phones"[0m
  [1m[35mFixture Insert (1.3ms)[0m  INSERT INTO "phones" ("id", "number", "tag", "user_id", "created_at", "updated_at") VALUES (1, '(211) 234-1111', 'Office', 1, '2013-08-16 15:01:02', '2013-08-16 15:01:02')
  [1m[36mFixture Insert (1.0ms)[0m  [1mINSERT INTO "phones" ("id", "number", "tag", "user_id", "created_at", "updated_at") VALUES (2, '(222) 345-2222', 'Home', 1, '2013-08-16 15:01:02', '2013-08-16 15:01:02')[0m
  [1m[35mFixture Insert (0.8ms)[0m  INSERT INTO "phones" ("id", "number", "tag", "user_id", "created_at", "updated_at") VALUES (3, '(333) 456-3333', 'Mobile', 1, '2013-08-16 15:01:02', '2013-08-16 15:01:02')
  [1m[36mFixture Insert (0.8ms)[0m  [1mINSERT INTO "phones" ("id", "number", "tag", "user_id", "created_at", "updated_at") VALUES (4, '(444) 567-4444', 'Pager', 1, '2013-08-16 15:01:02', '2013-08-16 15:01:02')[0m
  [1m[35mFixture Insert (0.8ms)[0m  INSERT INTO "phones" ("id", "number", "tag", "user_id", "created_at", "updated_at") VALUES (5, '(555) 678-5555', 'Mobile', 1, '2013-08-16 15:01:02', '2013-08-16 15:01:02')
  [1m[36mFixture Insert (0.7ms)[0m  [1mINSERT INTO "phones" ("id", "number", "tag", "user_id", "created_at", "updated_at") VALUES (6, '(666) 789-6666', 'Mobile', 1, '2013-08-16 15:01:02', '2013-08-16 15:01:02')[0m
  [1m[35m (6.0ms)[0m  COMMIT
  [1m[36m (0.5ms)[0m  [1mALTER TABLE "phones" ENABLE TRIGGER ALL;ALTER TABLE "users" ENABLE TRIGGER ALL;ALTER TABLE "schema_migrations" ENABLE TRIGGER ALL[0m
  [1m[35m (0.4ms)[0m  BEGIN
------------------------------------------------------------------------
PhoneTest: test: Phone should ensure number has a length of at least 7. 
------------------------------------------------------------------------
  [1m[36m (0.4ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
------------------------------------------------------------------------
PhoneTest: test: Phone should ensure number has a length of at most 17. 
------------------------------------------------------------------------
  [1m[36m (0.5ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
--------------------------------------------------------
PhoneTest: test: Phone should require number to be set. 
--------------------------------------------------------
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.2ms)[0m  BEGIN
--------------------------------------------------------
UserTest: test: A given user should be valid initially. 
--------------------------------------------------------
  [1m[36mUser Load (0.8ms)[0m  [1mSELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35mUser Exists (1.8ms)[0m  SELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1
  [1m[36m (0.4ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
-----------------------------------------------------------------------
UserTest: test: A given user should not be valid if first name is nil. 
-----------------------------------------------------------------------
  [1m[36mUser Load (0.8ms)[0m  [1mSELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35mUser Exists (0.6ms)[0m  SELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.2ms)[0m  BEGIN
----------------------------------------------------------------------------
UserTest: test: A given user should not be valid if first name is too long. 
----------------------------------------------------------------------------
  [1m[36mUser Load (0.6ms)[0m  [1mSELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35mUser Exists (0.5ms)[0m  SELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.2ms)[0m  BEGIN
-----------------------------------------------------------------------------
UserTest: test: A given user should not be valid if first name is too short. 
-----------------------------------------------------------------------------
  [1m[36mUser Load (0.9ms)[0m  [1mSELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35mUser Exists (0.8ms)[0m  SELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1
  [1m[36m (0.4ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.4ms)[0m  BEGIN
------------------------------------------------------------------------------------------------
UserTest: test: A given user should not be valid if first name starts with a lower case letter. 
------------------------------------------------------------------------------------------------
  [1m[36mUser Load (0.9ms)[0m  [1mSELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35mUser Exists (0.8ms)[0m  SELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1
  [1m[36m (0.5ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.4ms)[0m  BEGIN
----------------------------------------------------------------------
UserTest: test: A given user should not be valid if last name is nil. 
----------------------------------------------------------------------
  [1m[36mUser Load (1.0ms)[0m  [1mSELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35mUser Exists (0.8ms)[0m  SELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1
  [1m[36m (0.4ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.4ms)[0m  BEGIN
---------------------------------------------------------------------------
UserTest: test: A given user should not be valid if last name is too long. 
---------------------------------------------------------------------------
  [1m[36mUser Load (0.9ms)[0m  [1mSELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35mUser Exists (0.8ms)[0m  SELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1
  [1m[36m (0.4ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.4ms)[0m  BEGIN
----------------------------------------------------------------------------
UserTest: test: A given user should not be valid if last name is too short. 
----------------------------------------------------------------------------
  [1m[36mUser Load (1.1ms)[0m  [1mSELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35mUser Exists (0.9ms)[0m  SELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1
  [1m[36m (0.5ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.5ms)[0m  BEGIN
---------------------------------------------------------------------------------------------
UserTest: test: A given user should not be valid if login name has non-alphanumeric letters. 
---------------------------------------------------------------------------------------------
  [1m[36mUser Load (0.9ms)[0m  [1mSELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35mUser Exists (1.0ms)[0m  SELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'johns-276' AND "users"."id" != 1) LIMIT 1
  [1m[36m (0.4ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.4ms)[0m  BEGIN
-------------------------------------------------------------------------------
UserTest: test: A given user should not be valid if login name is a duplicate. 
-------------------------------------------------------------------------------
  [1m[36mUser Load (0.9ms)[0m  [1mSELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35m (0.5ms)[0m  SAVEPOINT active_record_1
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'orstedma' LIMIT 1[0m
  [1m[35m (0.5ms)[0m  ROLLBACK TO SAVEPOINT active_record_1
  [1m[36mUser Exists (0.9ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'orstedma' LIMIT 1[0m
  [1m[35m (0.4ms)[0m  ROLLBACK
  [1m[36m (0.5ms)[0m  [1mBEGIN[0m
-----------------------------------------------------------------------
UserTest: test: A given user should not be valid if login name is nil. 
-----------------------------------------------------------------------
  [1m[35mUser Load (1.0ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (1.0ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" IS NULL AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.3ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
----------------------------------------------------------------------------
UserTest: test: A given user should not be valid if login name is too long. 
----------------------------------------------------------------------------
  [1m[35mUser Load (1.1ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'abbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.4ms)[0m  ROLLBACK
  [1m[36m (0.5ms)[0m  [1mBEGIN[0m
-----------------------------------------------------------------------------
UserTest: test: A given user should not be valid if login name is too short. 
-----------------------------------------------------------------------------
  [1m[35mUser Load (0.8ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (0.9ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'aaaaa' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.4ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
---------------------------------------------------------------------------------------------
UserTest: test: A given user should not be valid if login name starts with a capital letter. 
---------------------------------------------------------------------------------------------
  [1m[35mUser Load (0.8ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (0.8ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'Johns276' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.5ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
------------------------------------------------------------------------------------
UserTest: test: A given user should require a start date if an end date is present. 
------------------------------------------------------------------------------------
  [1m[35mUser Load (0.7ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (0.8ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.5ms)[0m  ROLLBACK
  [1m[36m (0.4ms)[0m  [1mBEGIN[0m
--------------------------------------------------------------------------------
UserTest: test: A given user should require an end date on or after start date. 
--------------------------------------------------------------------------------
  [1m[35mUser Load (0.9ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (0.9ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.4ms)[0m  ROLLBACK
  [1m[36m (0.4ms)[0m  [1mBEGIN[0m
---------------------------------------------------------------------
UserTest: test: User should allow first_name to be set to "Charles". 
---------------------------------------------------------------------
  [1m[35mUser Exists (0.9ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.5ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35m (0.3ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
--------------------------------------------------------------------------
UserTest: test: User should ensure first_name has a length of at least 2. 
--------------------------------------------------------------------------
  [1m[35mUser Exists (0.8ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.6ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.8ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.5ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.2ms)[0m  BEGIN
---------------------------------------------------------------------------
UserTest: test: User should ensure first_name has a length of at most 254. 
---------------------------------------------------------------------------
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.6ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.8ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35m (0.4ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
-------------------------------------------------------------------------
UserTest: test: User should ensure last_name has a length of at least 2. 
-------------------------------------------------------------------------
  [1m[35mUser Exists (0.8ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.6ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.8ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.5ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.4ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
--------------------------------------------------------------------------
UserTest: test: User should ensure last_name has a length of at most 254. 
--------------------------------------------------------------------------
  [1m[36mUser Exists (0.5ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.5ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.6ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35m (0.4ms)[0m  ROLLBACK
  [1m[36m (0.4ms)[0m  [1mBEGIN[0m
--------------------------------------------------------------------------
UserTest: test: User should ensure login_name has a length of at least 6. 
--------------------------------------------------------------------------
  [1m[35mUser Exists (1.2ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxx' LIMIT 1
  [1m[36mUser Exists (5.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxx' LIMIT 1[0m
  [1m[35mUser Exists (1.0ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxx' LIMIT 1
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxx' LIMIT 1[0m
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxx' LIMIT 1
  [1m[36m (0.4ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.4ms)[0m  BEGIN
---------------------------------------------------------------------------
UserTest: test: User should ensure login_name has a length of at most 254. 
---------------------------------------------------------------------------
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' LIMIT 1[0m
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' LIMIT 1
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' LIMIT 1[0m
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' LIMIT 1
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' LIMIT 1[0m
  [1m[35m (0.4ms)[0m  ROLLBACK
  [1m[36m (0.4ms)[0m  [1mBEGIN[0m
----------------------------------------------
UserTest: test: User should have many phones. 
----------------------------------------------
  [1m[35m (0.5ms)[0m  ROLLBACK
  [1m[36m (0.4ms)[0m  [1mBEGIN[0m
-------------------------------------------------------------------------
UserTest: test: User should not allow first_name to be set to "charles". 
-------------------------------------------------------------------------
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35m (0.5ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
--------------------------------------------------------------------------------
UserTest: test: User should require case sensitive unique value for login_name. 
--------------------------------------------------------------------------------
  [1m[35mUser Load (0.7ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (0.5ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'orstedma' LIMIT 1[0m
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'orstedma' LIMIT 1
  [1m[36m (0.2ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
----------------------------------------------------------
UserTest: test: User should require first_name to be set. 
----------------------------------------------------------
  [1m[36mUser Exists (0.6ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
---------------------------------------------------------
UserTest: test: User should require last_name to be set. 
---------------------------------------------------------
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.6ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
----------------------------------------------------------
UserTest: test: User should require login_name to be set. 
----------------------------------------------------------
  [1m[36mUser Exists (0.8ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.4ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
----------------------------------------------------------
UserTest: test: User should require start_date to be set. 
----------------------------------------------------------
  [1m[36mUser Exists (6.0ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[36m (123.6ms)[0m  [1mDROP DATABASE IF EXISTS "ritrack_test"[0m
  [1m[35m (724.3ms)[0m  CREATE DATABASE "ritrack_test" ENCODING = 'unicode'
  [1m[36mSQL (47.7ms)[0m  [1mCREATE EXTENSION IF NOT EXISTS "plpgsql"[0m
  [1m[35m (99.1ms)[0m  CREATE TABLE "phones" ("id" serial primary key, "number" character varying(255), "tag" character varying(255), "user_id" integer, "created_at" timestamp, "updated_at" timestamp) 
  [1m[36m (58.2ms)[0m  [1mCREATE INDEX "index_phones_on_number" ON "phones" USING btree ("number")[0m
  [1m[35m (61.6ms)[0m  CREATE INDEX "index_phones_on_user_id" ON "phones" USING btree ("user_id")
  [1m[36m (97.2ms)[0m  [1mCREATE TABLE "users" ("id" serial primary key, "first_name" character varying(255), "last_name" character varying(255), "nick_name" character varying(255), "login_name" character varying(255), "notes" text, "created_at" timestamp, "updated_at" timestamp, "start_date" date, "end_date" date) [0m
  [1m[35m (10.5ms)[0m  CREATE TABLE "schema_migrations" ("version" character varying(255) NOT NULL) 
  [1m[36m (54.5ms)[0m  [1mCREATE UNIQUE INDEX "unique_schema_migrations" ON "schema_migrations" ("version")[0m
  [1m[35m (1.0ms)[0m  SELECT version FROM "schema_migrations"
  [1m[36m (5.9ms)[0m  [1mINSERT INTO "schema_migrations" (version) VALUES ('20130816142047')[0m
  [1m[35m (8.1ms)[0m  INSERT INTO "schema_migrations" (version) VALUES ('20130811212425')
  [1m[36m (7.8ms)[0m  [1mINSERT INTO "schema_migrations" (version) VALUES ('20130811195620')[0m
  [1m[35m (7.9ms)[0m  INSERT INTO "schema_migrations" (version) VALUES ('20130811193133')
  [1m[36m (7.9ms)[0m  [1mINSERT INTO "schema_migrations" (version) VALUES ('20130811195557')[0m
  [1m[35mActiveRecord::SchemaMigration Load (1.1ms)[0m  SELECT "schema_migrations".* FROM "schema_migrations"
  [1m[36mActiveRecord::SchemaMigration Load (0.6ms)[0m  [1mSELECT "schema_migrations".* FROM "schema_migrations"[0m
  [1m[36m (225.8ms)[0m  [1mDROP DATABASE IF EXISTS "ritrack_test"[0m
  [1m[35m (749.2ms)[0m  CREATE DATABASE "ritrack_test" ENCODING = 'unicode'
  [1m[36mSQL (46.3ms)[0m  [1mCREATE EXTENSION IF NOT EXISTS "plpgsql"[0m
  [1m[35m (93.6ms)[0m  CREATE TABLE "phones" ("id" serial primary key, "number" character varying(255), "tag" character varying(255), "user_id" integer, "created_at" timestamp, "updated_at" timestamp) 
  [1m[36m (49.7ms)[0m  [1mCREATE INDEX "index_phones_on_number" ON "phones" USING btree ("number")[0m
  [1m[35m (51.0ms)[0m  CREATE INDEX "index_phones_on_user_id" ON "phones" USING btree ("user_id")
  [1m[36m (88.6ms)[0m  [1mCREATE TABLE "users" ("id" serial primary key, "first_name" character varying(255), "last_name" character varying(255), "nick_name" character varying(255), "login_name" character varying(255), "notes" text, "created_at" timestamp, "updated_at" timestamp, "start_date" date, "end_date" date) [0m
  [1m[35m (10.8ms)[0m  CREATE TABLE "schema_migrations" ("version" character varying(255) NOT NULL) 
  [1m[36m (54.4ms)[0m  [1mCREATE UNIQUE INDEX "unique_schema_migrations" ON "schema_migrations" ("version")[0m
  [1m[35m (1.0ms)[0m  SELECT version FROM "schema_migrations"
  [1m[36m (5.9ms)[0m  [1mINSERT INTO "schema_migrations" (version) VALUES ('20130816142047')[0m
  [1m[35m (7.9ms)[0m  INSERT INTO "schema_migrations" (version) VALUES ('20130811212425')
  [1m[36m (7.9ms)[0m  [1mINSERT INTO "schema_migrations" (version) VALUES ('20130811195620')[0m
  [1m[35m (8.0ms)[0m  INSERT INTO "schema_migrations" (version) VALUES ('20130811193133')
  [1m[36m (8.0ms)[0m  [1mINSERT INTO "schema_migrations" (version) VALUES ('20130811195557')[0m
  [1m[35mActiveRecord::SchemaMigration Load (1.1ms)[0m  SELECT "schema_migrations".* FROM "schema_migrations"
  [1m[36mActiveRecord::SchemaMigration Load (0.6ms)[0m  [1mSELECT "schema_migrations".* FROM "schema_migrations"[0m
  [1m[35m (1.2ms)[0m  ALTER TABLE "phones" DISABLE TRIGGER ALL;ALTER TABLE "users" DISABLE TRIGGER ALL;ALTER TABLE "schema_migrations" DISABLE TRIGGER ALL
  [1m[36m (0.4ms)[0m  [1mBEGIN[0m
  [1m[35mFixture Delete (1.1ms)[0m  DELETE FROM "users"
  [1m[36mFixture Insert (1.5ms)[0m  [1mINSERT INTO "users" ("id", "first_name", "last_name", "nick_name", "login_name", "start_date", "end_date", "notes", "created_at", "updated_at") VALUES (1, 'Michael', 'Orsted', 'Mike', 'orstedma', '2012-02-04', NULL, 'This user lives in Chicago.', '2013-08-16 15:09:11', '2013-08-16 15:09:11')[0m
  [1m[35mFixture Insert (0.9ms)[0m  INSERT INTO "users" ("id", "first_name", "last_name", "nick_name", "login_name", "start_date", "end_date", "notes", "created_at", "updated_at") VALUES (2, 'Frederick', 'Free-Loader', 'Frederick', 'freelofw', '2012-03-04', NULL, 'This user is completely useless', '2013-08-16 15:09:11', '2013-08-16 15:09:11')
  [1m[36mFixture Insert (0.8ms)[0m  [1mINSERT INTO "users" ("id", "first_name", "last_name", "nick_name", "login_name", "start_date", "end_date", "notes", "created_at", "updated_at") VALUES (3, 'Michael', 'Winstead', 'Mike', 'winstem', '2012-02-04', '2013-08-12', 'This user lives in New York. This user is disabled in the system.', '2013-08-16 15:09:11', '2013-08-16 15:09:11')[0m
  [1m[35mFixture Insert (0.8ms)[0m  INSERT INTO "users" ("id", "first_name", "last_name", "nick_name", "login_name", "start_date", "end_date", "notes", "created_at", "updated_at") VALUES (4, 'Allison', 'Wilson', 'Alli', 'wilsona', '2012-03-04', NULL, 'Electrical engineer.', '2013-08-16 15:09:11', '2013-08-16 15:09:11')
  [1m[36mFixture Delete (1.1ms)[0m  [1mDELETE FROM "phones"[0m
  [1m[35mFixture Insert (1.2ms)[0m  INSERT INTO "phones" ("id", "number", "tag", "user_id", "created_at", "updated_at") VALUES (1, '(211) 234-1111', 'Office', 1, '2013-08-16 15:09:11', '2013-08-16 15:09:11')
  [1m[36mFixture Insert (0.9ms)[0m  [1mINSERT INTO "phones" ("id", "number", "tag", "user_id", "created_at", "updated_at") VALUES (2, '(222) 345-2222', 'Home', 1, '2013-08-16 15:09:11', '2013-08-16 15:09:11')[0m
  [1m[35mFixture Insert (0.7ms)[0m  INSERT INTO "phones" ("id", "number", "tag", "user_id", "created_at", "updated_at") VALUES (3, '(333) 456-3333', 'Mobile', 1, '2013-08-16 15:09:11', '2013-08-16 15:09:11')
  [1m[36mFixture Insert (0.6ms)[0m  [1mINSERT INTO "phones" ("id", "number", "tag", "user_id", "created_at", "updated_at") VALUES (4, '(444) 567-4444', 'Pager', 1, '2013-08-16 15:09:11', '2013-08-16 15:09:11')[0m
  [1m[35mFixture Insert (0.6ms)[0m  INSERT INTO "phones" ("id", "number", "tag", "user_id", "created_at", "updated_at") VALUES (5, '(555) 678-5555', 'Mobile', 1, '2013-08-16 15:09:11', '2013-08-16 15:09:11')
  [1m[36mFixture Insert (0.7ms)[0m  [1mINSERT INTO "phones" ("id", "number", "tag", "user_id", "created_at", "updated_at") VALUES (6, '(666) 789-6666', 'Mobile', 1, '2013-08-16 15:09:11', '2013-08-16 15:09:11')[0m
  [1m[35m (2.0ms)[0m  COMMIT
  [1m[36m (0.7ms)[0m  [1mALTER TABLE "phones" ENABLE TRIGGER ALL;ALTER TABLE "users" ENABLE TRIGGER ALL;ALTER TABLE "schema_migrations" ENABLE TRIGGER ALL[0m
  [1m[35m (0.3ms)[0m  BEGIN
----------------------------------------------
PhoneTest: test: Phone should belong to user. 
----------------------------------------------
  [1m[36m (0.5ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.4ms)[0m  BEGIN
------------------------------------------------------------------------
PhoneTest: test: Phone should ensure number has a length of at least 7. 
------------------------------------------------------------------------
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
------------------------------------------------------------------------
PhoneTest: test: Phone should ensure number has a length of at most 17. 
------------------------------------------------------------------------
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
--------------------------------------------------------
PhoneTest: test: Phone should require number to be set. 
--------------------------------------------------------
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
-----------------------------------------------------
PhoneTest: test: Phone should require tag to be set. 
-----------------------------------------------------
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.4ms)[0m  BEGIN
--------------------------------------------------------
UserTest: test: A given user should be valid initially. 
--------------------------------------------------------
  [1m[36mUser Load (1.0ms)[0m  [1mSELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35mUser Exists (1.8ms)[0m  SELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1
  [1m[36m (0.4ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
-----------------------------------------------------------------------
UserTest: test: A given user should not be valid if first name is nil. 
-----------------------------------------------------------------------
  [1m[36mUser Load (0.5ms)[0m  [1mSELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35mUser Exists (0.8ms)[0m  SELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1
  [1m[36m (0.4ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
----------------------------------------------------------------------------
UserTest: test: A given user should not be valid if first name is too long. 
----------------------------------------------------------------------------
  [1m[36mUser Load (0.8ms)[0m  [1mSELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35mUser Exists (0.8ms)[0m  SELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1
  [1m[36m (0.4ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.4ms)[0m  BEGIN
-----------------------------------------------------------------------------
UserTest: test: A given user should not be valid if first name is too short. 
-----------------------------------------------------------------------------
  [1m[36mUser Load (1.1ms)[0m  [1mSELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35mUser Exists (0.9ms)[0m  SELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1
  [1m[36m (0.5ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.5ms)[0m  BEGIN
------------------------------------------------------------------------------------------------
UserTest: test: A given user should not be valid if first name starts with a lower case letter. 
------------------------------------------------------------------------------------------------
  [1m[36mUser Load (1.1ms)[0m  [1mSELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35mUser Exists (0.9ms)[0m  SELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1
  [1m[36m (0.4ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
----------------------------------------------------------------------
UserTest: test: A given user should not be valid if last name is nil. 
----------------------------------------------------------------------
  [1m[36mUser Load (0.7ms)[0m  [1mSELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35mUser Exists (0.8ms)[0m  SELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.4ms)[0m  BEGIN
---------------------------------------------------------------------------
UserTest: test: A given user should not be valid if last name is too long. 
---------------------------------------------------------------------------
  [1m[36mUser Load (1.0ms)[0m  [1mSELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35mUser Exists (0.8ms)[0m  SELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1
  [1m[36m (0.5ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.5ms)[0m  BEGIN
----------------------------------------------------------------------------
UserTest: test: A given user should not be valid if last name is too short. 
----------------------------------------------------------------------------
  [1m[36mUser Load (1.1ms)[0m  [1mSELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35mUser Exists (1.2ms)[0m  SELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1
  [1m[36m (0.5ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
---------------------------------------------------------------------------------------------
UserTest: test: A given user should not be valid if login name has non-alphanumeric letters. 
---------------------------------------------------------------------------------------------
  [1m[36mUser Load (0.8ms)[0m  [1mSELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'johns-276' AND "users"."id" != 1) LIMIT 1
  [1m[36m (0.4ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
-------------------------------------------------------------------------------
UserTest: test: A given user should not be valid if login name is a duplicate. 
-------------------------------------------------------------------------------
  [1m[36mUser Load (0.8ms)[0m  [1mSELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35m (0.4ms)[0m  SAVEPOINT active_record_1
  [1m[36mUser Exists (0.8ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'orstedma' LIMIT 1[0m
  [1m[35m (0.4ms)[0m  ROLLBACK TO SAVEPOINT active_record_1
  [1m[36mUser Exists (1.0ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'orstedma' LIMIT 1[0m
  [1m[35m (0.5ms)[0m  ROLLBACK
  [1m[36m (0.5ms)[0m  [1mBEGIN[0m
-----------------------------------------------------------------------
UserTest: test: A given user should not be valid if login name is nil. 
-----------------------------------------------------------------------
  [1m[35mUser Load (1.1ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (1.0ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" IS NULL AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.3ms)[0m  ROLLBACK
  [1m[36m (0.4ms)[0m  [1mBEGIN[0m
----------------------------------------------------------------------------
UserTest: test: A given user should not be valid if login name is too long. 
----------------------------------------------------------------------------
  [1m[35mUser Load (0.8ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (0.6ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'abbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.4ms)[0m  ROLLBACK
  [1m[36m (0.4ms)[0m  [1mBEGIN[0m
-----------------------------------------------------------------------------
UserTest: test: A given user should not be valid if login name is too short. 
-----------------------------------------------------------------------------
  [1m[35mUser Load (0.7ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (1.0ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'aaaaa' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.4ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
---------------------------------------------------------------------------------------------
UserTest: test: A given user should not be valid if login name starts with a capital letter. 
---------------------------------------------------------------------------------------------
  [1m[35mUser Load (1.1ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (1.0ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'Johns276' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.5ms)[0m  ROLLBACK
  [1m[36m (0.4ms)[0m  [1mBEGIN[0m
------------------------------------------------------------------------------------
UserTest: test: A given user should require a start date if an end date is present. 
------------------------------------------------------------------------------------
  [1m[35mUser Load (1.0ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (0.9ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.5ms)[0m  ROLLBACK
  [1m[36m (0.4ms)[0m  [1mBEGIN[0m
--------------------------------------------------------------------------------
UserTest: test: A given user should require an end date on or after start date. 
--------------------------------------------------------------------------------
  [1m[35mUser Load (1.0ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (1.0ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.5ms)[0m  ROLLBACK
  [1m[36m (0.5ms)[0m  [1mBEGIN[0m
---------------------------------------------------------------------
UserTest: test: User should allow first_name to be set to "Charles". 
---------------------------------------------------------------------
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.8ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35m (0.4ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
--------------------------------------------------------------------------
UserTest: test: User should ensure first_name has a length of at least 2. 
--------------------------------------------------------------------------
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.6ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.6ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.8ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.4ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
---------------------------------------------------------------------------
UserTest: test: User should ensure first_name has a length of at most 254. 
---------------------------------------------------------------------------
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.8ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.6ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.6ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.6ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35m (0.3ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
-------------------------------------------------------------------------
UserTest: test: User should ensure last_name has a length of at least 2. 
-------------------------------------------------------------------------
  [1m[35mUser Exists (0.6ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.6ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.6ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.5ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.6ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
--------------------------------------------------------------------------
UserTest: test: User should ensure last_name has a length of at most 254. 
--------------------------------------------------------------------------
  [1m[36mUser Exists (0.5ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (6.3ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.6ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35m (0.3ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
--------------------------------------------------------------------------
UserTest: test: User should ensure login_name has a length of at least 6. 
--------------------------------------------------------------------------
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxx' LIMIT 1
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxx' LIMIT 1[0m
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxx' LIMIT 1
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxx' LIMIT 1[0m
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxx' LIMIT 1
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
---------------------------------------------------------------------------
UserTest: test: User should ensure login_name has a length of at most 254. 
---------------------------------------------------------------------------
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' LIMIT 1[0m
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' LIMIT 1
  [1m[36mUser Exists (0.9ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' LIMIT 1[0m
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' LIMIT 1
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' LIMIT 1[0m
  [1m[35m (0.4ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
----------------------------------------------
UserTest: test: User should have many phones. 
----------------------------------------------
  [1m[35m (0.5ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
-------------------------------------------------------------------------
UserTest: test: User should not allow first_name to be set to "charles". 
-------------------------------------------------------------------------
  [1m[35mUser Exists (0.5ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.6ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35m (0.3ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
--------------------------------------------------------------------------------
UserTest: test: User should require case sensitive unique value for login_name. 
--------------------------------------------------------------------------------
  [1m[35mUser Load (1.0ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (0.9ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'orstedma' LIMIT 1[0m
  [1m[35mUser Exists (0.8ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'orstedma' LIMIT 1
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
----------------------------------------------------------
UserTest: test: User should require first_name to be set. 
----------------------------------------------------------
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.8ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.4ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.4ms)[0m  BEGIN
---------------------------------------------------------
UserTest: test: User should require last_name to be set. 
---------------------------------------------------------
  [1m[36mUser Exists (0.8ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (5.8ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.4ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
----------------------------------------------------------
UserTest: test: User should require login_name to be set. 
----------------------------------------------------------
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
----------------------------------------------------------
UserTest: test: User should require start_date to be set. 
----------------------------------------------------------
  [1m[36mUser Exists (0.9ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.6ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[36m (222.9ms)[0m  [1mDROP DATABASE IF EXISTS "ritrack_test"[0m
  [1m[35m (716.0ms)[0m  CREATE DATABASE "ritrack_test" ENCODING = 'unicode'
  [1m[36mSQL (47.5ms)[0m  [1mCREATE EXTENSION IF NOT EXISTS "plpgsql"[0m
  [1m[35m (94.3ms)[0m  CREATE TABLE "phones" ("id" serial primary key, "number" character varying(255), "tag" character varying(255), "user_id" integer, "created_at" timestamp, "updated_at" timestamp) 
  [1m[36m (66.4ms)[0m  [1mCREATE INDEX "index_phones_on_number" ON "phones" USING btree ("number")[0m
  [1m[35m (59.3ms)[0m  CREATE INDEX "index_phones_on_user_id" ON "phones" USING btree ("user_id")
  [1m[36m (97.0ms)[0m  [1mCREATE TABLE "users" ("id" serial primary key, "first_name" character varying(255), "last_name" character varying(255), "nick_name" character varying(255), "login_name" character varying(255), "notes" text, "created_at" timestamp, "updated_at" timestamp, "start_date" date, "end_date" date) [0m
  [1m[35m (10.9ms)[0m  CREATE TABLE "schema_migrations" ("version" character varying(255) NOT NULL) 
  [1m[36m (62.7ms)[0m  [1mCREATE UNIQUE INDEX "unique_schema_migrations" ON "schema_migrations" ("version")[0m
  [1m[35m (1.3ms)[0m  SELECT version FROM "schema_migrations"
  [1m[36m (5.6ms)[0m  [1mINSERT INTO "schema_migrations" (version) VALUES ('20130816142047')[0m
  [1m[35m (7.8ms)[0m  INSERT INTO "schema_migrations" (version) VALUES ('20130811212425')
  [1m[36m (8.2ms)[0m  [1mINSERT INTO "schema_migrations" (version) VALUES ('20130811195620')[0m
  [1m[35m (7.9ms)[0m  INSERT INTO "schema_migrations" (version) VALUES ('20130811193133')
  [1m[36m (8.0ms)[0m  [1mINSERT INTO "schema_migrations" (version) VALUES ('20130811195557')[0m
  [1m[35mActiveRecord::SchemaMigration Load (1.1ms)[0m  SELECT "schema_migrations".* FROM "schema_migrations"
  [1m[36mActiveRecord::SchemaMigration Load (0.7ms)[0m  [1mSELECT "schema_migrations".* FROM "schema_migrations"[0m
  [1m[35m (0.7ms)[0m  ALTER TABLE "phones" DISABLE TRIGGER ALL;ALTER TABLE "users" DISABLE TRIGGER ALL;ALTER TABLE "schema_migrations" DISABLE TRIGGER ALL
  [1m[36m (0.4ms)[0m  [1mBEGIN[0m
  [1m[35mFixture Delete (1.1ms)[0m  DELETE FROM "users"
  [1m[36mFixture Insert (1.3ms)[0m  [1mINSERT INTO "users" ("id", "first_name", "last_name", "nick_name", "login_name", "start_date", "end_date", "notes", "created_at", "updated_at") VALUES (1, 'Michael', 'Orsted', 'Mike', 'orstedma', '2012-02-04', NULL, 'This user lives in Chicago.', '2013-08-16 15:10:31', '2013-08-16 15:10:31')[0m
  [1m[35mFixture Insert (0.9ms)[0m  INSERT INTO "users" ("id", "first_name", "last_name", "nick_name", "login_name", "start_date", "end_date", "notes", "created_at", "updated_at") VALUES (2, 'Frederick', 'Free-Loader', 'Frederick', 'freelofw', '2012-03-04', NULL, 'This user is completely useless', '2013-08-16 15:10:31', '2013-08-16 15:10:31')
  [1m[36mFixture Insert (0.8ms)[0m  [1mINSERT INTO "users" ("id", "first_name", "last_name", "nick_name", "login_name", "start_date", "end_date", "notes", "created_at", "updated_at") VALUES (3, 'Michael', 'Winstead', 'Mike', 'winstem', '2012-02-04', '2013-08-12', 'This user lives in New York. This user is disabled in the system.', '2013-08-16 15:10:31', '2013-08-16 15:10:31')[0m
  [1m[35mFixture Insert (0.8ms)[0m  INSERT INTO "users" ("id", "first_name", "last_name", "nick_name", "login_name", "start_date", "end_date", "notes", "created_at", "updated_at") VALUES (4, 'Allison', 'Wilson', 'Alli', 'wilsona', '2012-03-04', NULL, 'Electrical engineer.', '2013-08-16 15:10:31', '2013-08-16 15:10:31')
  [1m[36mFixture Delete (1.1ms)[0m  [1mDELETE FROM "phones"[0m
  [1m[35mFixture Insert (1.3ms)[0m  INSERT INTO "phones" ("id", "number", "tag", "user_id", "created_at", "updated_at") VALUES (1, '(211) 234-1111', 'Office', 1, '2013-08-16 15:10:31', '2013-08-16 15:10:31')
  [1m[36mFixture Insert (1.0ms)[0m  [1mINSERT INTO "phones" ("id", "number", "tag", "user_id", "created_at", "updated_at") VALUES (2, '(222) 345-2222', 'Home', 1, '2013-08-16 15:10:31', '2013-08-16 15:10:31')[0m
  [1m[35mFixture Insert (0.7ms)[0m  INSERT INTO "phones" ("id", "number", "tag", "user_id", "created_at", "updated_at") VALUES (3, '(333) 456-3333', 'Mobile', 1, '2013-08-16 15:10:31', '2013-08-16 15:10:31')
  [1m[36mFixture Insert (0.8ms)[0m  [1mINSERT INTO "phones" ("id", "number", "tag", "user_id", "created_at", "updated_at") VALUES (4, '(444) 567-4444', 'Pager', 1, '2013-08-16 15:10:31', '2013-08-16 15:10:31')[0m
  [1m[35mFixture Insert (0.7ms)[0m  INSERT INTO "phones" ("id", "number", "tag", "user_id", "created_at", "updated_at") VALUES (5, '(555) 678-5555', 'Mobile', 1, '2013-08-16 15:10:31', '2013-08-16 15:10:31')
  [1m[36mFixture Insert (0.8ms)[0m  [1mINSERT INTO "phones" ("id", "number", "tag", "user_id", "created_at", "updated_at") VALUES (6, '(666) 789-6666', 'Mobile', 1, '2013-08-16 15:10:31', '2013-08-16 15:10:31')[0m
  [1m[35m (9.0ms)[0m  COMMIT
  [1m[36m (0.7ms)[0m  [1mALTER TABLE "phones" ENABLE TRIGGER ALL;ALTER TABLE "users" ENABLE TRIGGER ALL;ALTER TABLE "schema_migrations" ENABLE TRIGGER ALL[0m
  [1m[35m (0.4ms)[0m  BEGIN
----------------------------------------------
PhoneTest: test: Phone should belong to user. 
----------------------------------------------
  [1m[36m (0.4ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.4ms)[0m  BEGIN
------------------------------------------------------------------------
PhoneTest: test: Phone should ensure number has a length of at least 7. 
------------------------------------------------------------------------
  [1m[36m (0.4ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
------------------------------------------------------------------------
PhoneTest: test: Phone should ensure number has a length of at most 17. 
------------------------------------------------------------------------
  [1m[36m (0.2ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.2ms)[0m  BEGIN
--------------------------------------------------------
PhoneTest: test: Phone should require number to be set. 
--------------------------------------------------------
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
-----------------------------------------------------
PhoneTest: test: Phone should require tag to be set. 
-----------------------------------------------------
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
---------------------------------------------------------
PhoneTest: test: Phone should require user_id to be set. 
---------------------------------------------------------
  [1m[36m (0.4ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
--------------------------------------------------------
UserTest: test: A given user should be valid initially. 
--------------------------------------------------------
  [1m[36mUser Load (0.7ms)[0m  [1mSELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35mUser Exists (1.9ms)[0m  SELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.4ms)[0m  BEGIN
-----------------------------------------------------------------------
UserTest: test: A given user should not be valid if first name is nil. 
-----------------------------------------------------------------------
  [1m[36mUser Load (0.5ms)[0m  [1mSELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35mUser Exists (0.8ms)[0m  SELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
----------------------------------------------------------------------------
UserTest: test: A given user should not be valid if first name is too long. 
----------------------------------------------------------------------------
  [1m[36mUser Load (0.5ms)[0m  [1mSELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35mUser Exists (0.5ms)[0m  SELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
-----------------------------------------------------------------------------
UserTest: test: A given user should not be valid if first name is too short. 
-----------------------------------------------------------------------------
  [1m[36mUser Load (0.8ms)[0m  [1mSELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35mUser Exists (0.8ms)[0m  SELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1
  [1m[36m (0.4ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
------------------------------------------------------------------------------------------------
UserTest: test: A given user should not be valid if first name starts with a lower case letter. 
------------------------------------------------------------------------------------------------
  [1m[36mUser Load (0.7ms)[0m  [1mSELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35mUser Exists (0.8ms)[0m  SELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1
  [1m[36m (0.4ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.4ms)[0m  BEGIN
----------------------------------------------------------------------
UserTest: test: A given user should not be valid if last name is nil. 
----------------------------------------------------------------------
  [1m[36mUser Load (0.8ms)[0m  [1mSELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35mUser Exists (0.5ms)[0m  SELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1
  [1m[36m (0.2ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.2ms)[0m  BEGIN
---------------------------------------------------------------------------
UserTest: test: A given user should not be valid if last name is too long. 
---------------------------------------------------------------------------
  [1m[36mUser Load (1.1ms)[0m  [1mSELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35mUser Exists (0.9ms)[0m  SELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1
  [1m[36m (0.6ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.4ms)[0m  BEGIN
----------------------------------------------------------------------------
UserTest: test: A given user should not be valid if last name is too short. 
----------------------------------------------------------------------------
  [1m[36mUser Load (0.9ms)[0m  [1mSELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35mUser Exists (0.9ms)[0m  SELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1
  [1m[36m (0.4ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
---------------------------------------------------------------------------------------------
UserTest: test: A given user should not be valid if login name has non-alphanumeric letters. 
---------------------------------------------------------------------------------------------
  [1m[36mUser Load (1.0ms)[0m  [1mSELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35mUser Exists (0.9ms)[0m  SELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'johns-276' AND "users"."id" != 1) LIMIT 1
  [1m[36m (0.4ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.4ms)[0m  BEGIN
-------------------------------------------------------------------------------
UserTest: test: A given user should not be valid if login name is a duplicate. 
-------------------------------------------------------------------------------
  [1m[36mUser Load (1.1ms)[0m  [1mSELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35m (0.4ms)[0m  SAVEPOINT active_record_1
  [1m[36mUser Exists (0.8ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'orstedma' LIMIT 1[0m
  [1m[35m (0.5ms)[0m  ROLLBACK TO SAVEPOINT active_record_1
  [1m[36mUser Exists (0.8ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'orstedma' LIMIT 1[0m
  [1m[35m (0.3ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
-----------------------------------------------------------------------
UserTest: test: A given user should not be valid if login name is nil. 
-----------------------------------------------------------------------
  [1m[35mUser Load (0.9ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" IS NULL AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.3ms)[0m  ROLLBACK
  [1m[36m (0.4ms)[0m  [1mBEGIN[0m
----------------------------------------------------------------------------
UserTest: test: A given user should not be valid if login name is too long. 
----------------------------------------------------------------------------
  [1m[35mUser Load (0.8ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (0.9ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'abbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.4ms)[0m  ROLLBACK
  [1m[36m (0.5ms)[0m  [1mBEGIN[0m
-----------------------------------------------------------------------------
UserTest: test: A given user should not be valid if login name is too short. 
-----------------------------------------------------------------------------
  [1m[35mUser Load (1.0ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (1.0ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'aaaaa' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.4ms)[0m  ROLLBACK
  [1m[36m (0.4ms)[0m  [1mBEGIN[0m
---------------------------------------------------------------------------------------------
UserTest: test: A given user should not be valid if login name starts with a capital letter. 
---------------------------------------------------------------------------------------------
  [1m[35mUser Load (1.1ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'Johns276' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.3ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
------------------------------------------------------------------------------------
UserTest: test: A given user should require a start date if an end date is present. 
------------------------------------------------------------------------------------
  [1m[35mUser Load (0.7ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (0.9ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.4ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
--------------------------------------------------------------------------------
UserTest: test: A given user should require an end date on or after start date. 
--------------------------------------------------------------------------------
  [1m[35mUser Load (0.8ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (0.8ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.4ms)[0m  ROLLBACK
  [1m[36m (0.4ms)[0m  [1mBEGIN[0m
---------------------------------------------------------------------
UserTest: test: User should allow first_name to be set to "Charles". 
---------------------------------------------------------------------
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.6ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35m (0.3ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
--------------------------------------------------------------------------
UserTest: test: User should ensure first_name has a length of at least 2. 
--------------------------------------------------------------------------
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.6ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.6ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.5ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.4ms)[0m  BEGIN
---------------------------------------------------------------------------
UserTest: test: User should ensure first_name has a length of at most 254. 
---------------------------------------------------------------------------
  [1m[36mUser Exists (0.5ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.5ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.8ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.6ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35m (0.3ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
-------------------------------------------------------------------------
UserTest: test: User should ensure last_name has a length of at least 2. 
-------------------------------------------------------------------------
  [1m[35mUser Exists (0.6ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.8ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.5ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
--------------------------------------------------------------------------
UserTest: test: User should ensure last_name has a length of at most 254. 
--------------------------------------------------------------------------
  [1m[36mUser Exists (5.2ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.6ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35m (0.3ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
--------------------------------------------------------------------------
UserTest: test: User should ensure login_name has a length of at least 6. 
--------------------------------------------------------------------------
  [1m[35mUser Exists (0.8ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxx' LIMIT 1
  [1m[36mUser Exists (0.5ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxx' LIMIT 1[0m
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxx' LIMIT 1
  [1m[36mUser Exists (0.8ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxx' LIMIT 1[0m
  [1m[35mUser Exists (0.6ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxx' LIMIT 1
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
---------------------------------------------------------------------------
UserTest: test: User should ensure login_name has a length of at most 254. 
---------------------------------------------------------------------------
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' LIMIT 1[0m
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' LIMIT 1
  [1m[36mUser Exists (0.8ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' LIMIT 1[0m
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' LIMIT 1
  [1m[36mUser Exists (0.6ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' LIMIT 1[0m
  [1m[35m (0.5ms)[0m  ROLLBACK
  [1m[36m (0.4ms)[0m  [1mBEGIN[0m
----------------------------------------------
UserTest: test: User should have many phones. 
----------------------------------------------
  [1m[35m (0.4ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
-------------------------------------------------------------------------
UserTest: test: User should not allow first_name to be set to "charles". 
-------------------------------------------------------------------------
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.6ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35m (0.3ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
--------------------------------------------------------------------------------
UserTest: test: User should require case sensitive unique value for login_name. 
--------------------------------------------------------------------------------
  [1m[35mUser Load (0.8ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (0.5ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'orstedma' LIMIT 1[0m
  [1m[35mUser Exists (0.6ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'orstedma' LIMIT 1
  [1m[36m (0.4ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
----------------------------------------------------------
UserTest: test: User should require first_name to be set. 
----------------------------------------------------------
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.6ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.2ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.2ms)[0m  BEGIN
---------------------------------------------------------
UserTest: test: User should require last_name to be set. 
---------------------------------------------------------
  [1m[36mUser Exists (5.6ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
----------------------------------------------------------
UserTest: test: User should require login_name to be set. 
----------------------------------------------------------
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.4ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
----------------------------------------------------------
UserTest: test: User should require start_date to be set. 
----------------------------------------------------------
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[36m (123.0ms)[0m  [1mDROP DATABASE IF EXISTS "ritrack_test"[0m
  [1m[35m (699.3ms)[0m  CREATE DATABASE "ritrack_test" ENCODING = 'unicode'
  [1m[36mSQL (49.2ms)[0m  [1mCREATE EXTENSION IF NOT EXISTS "plpgsql"[0m
  [1m[35m (85.5ms)[0m  CREATE TABLE "phones" ("id" serial primary key, "number" character varying(255), "tag" character varying(255), "user_id" integer, "created_at" timestamp, "updated_at" timestamp) 
  [1m[36m (49.8ms)[0m  [1mCREATE INDEX "index_phones_on_number" ON "phones" USING btree ("number")[0m
  [1m[35m (44.8ms)[0m  CREATE INDEX "index_phones_on_user_id" ON "phones" USING btree ("user_id")
  [1m[36m (80.3ms)[0m  [1mCREATE TABLE "users" ("id" serial primary key, "first_name" character varying(255), "last_name" character varying(255), "nick_name" character varying(255), "login_name" character varying(255), "notes" text, "created_at" timestamp, "updated_at" timestamp, "start_date" date, "end_date" date) [0m
  [1m[35m (10.9ms)[0m  CREATE TABLE "schema_migrations" ("version" character varying(255) NOT NULL) 
  [1m[36m (46.0ms)[0m  [1mCREATE UNIQUE INDEX "unique_schema_migrations" ON "schema_migrations" ("version")[0m
  [1m[35m (1.0ms)[0m  SELECT version FROM "schema_migrations"
  [1m[36m (5.8ms)[0m  [1mINSERT INTO "schema_migrations" (version) VALUES ('20130816142047')[0m
  [1m[35m (8.0ms)[0m  INSERT INTO "schema_migrations" (version) VALUES ('20130811212425')
  [1m[36m (8.0ms)[0m  [1mINSERT INTO "schema_migrations" (version) VALUES ('20130811195620')[0m
  [1m[35m (7.9ms)[0m  INSERT INTO "schema_migrations" (version) VALUES ('20130811193133')
  [1m[36m (8.0ms)[0m  [1mINSERT INTO "schema_migrations" (version) VALUES ('20130811195557')[0m
  [1m[35mActiveRecord::SchemaMigration Load (1.1ms)[0m  SELECT "schema_migrations".* FROM "schema_migrations"
  [1m[36mActiveRecord::SchemaMigration Load (0.6ms)[0m  [1mSELECT "schema_migrations".* FROM "schema_migrations"[0m
  [1m[35m (1.3ms)[0m  ALTER TABLE "phones" DISABLE TRIGGER ALL;ALTER TABLE "users" DISABLE TRIGGER ALL;ALTER TABLE "schema_migrations" DISABLE TRIGGER ALL
  [1m[36m (0.4ms)[0m  [1mBEGIN[0m
  [1m[35mFixture Delete (0.7ms)[0m  DELETE FROM "users"
  [1m[36mFixture Insert (1.4ms)[0m  [1mINSERT INTO "users" ("id", "first_name", "last_name", "nick_name", "login_name", "start_date", "end_date", "notes", "created_at", "updated_at") VALUES (1, 'Michael', 'Orsted', 'Mike', 'orstedma', '2012-02-04', NULL, 'This user lives in Chicago.', '2013-08-16 15:20:26', '2013-08-16 15:20:26')[0m
  [1m[35mFixture Insert (0.9ms)[0m  INSERT INTO "users" ("id", "first_name", "last_name", "nick_name", "login_name", "start_date", "end_date", "notes", "created_at", "updated_at") VALUES (2, 'Frederick', 'Free-Loader', 'Frederick', 'freelofw', '2012-03-04', NULL, 'This user is completely useless', '2013-08-16 15:20:26', '2013-08-16 15:20:26')
  [1m[36mFixture Insert (0.8ms)[0m  [1mINSERT INTO "users" ("id", "first_name", "last_name", "nick_name", "login_name", "start_date", "end_date", "notes", "created_at", "updated_at") VALUES (3, 'Michael', 'Winstead', 'Mike', 'winstem', '2012-02-04', '2013-08-12', 'This user lives in New York. This user is disabled in the system.', '2013-08-16 15:20:26', '2013-08-16 15:20:26')[0m
  [1m[35mFixture Insert (0.8ms)[0m  INSERT INTO "users" ("id", "first_name", "last_name", "nick_name", "login_name", "start_date", "end_date", "notes", "created_at", "updated_at") VALUES (4, 'Allison', 'Wilson', 'Alli', 'wilsona', '2012-03-04', NULL, 'Electrical engineer.', '2013-08-16 15:20:26', '2013-08-16 15:20:26')
  [1m[36mFixture Delete (1.1ms)[0m  [1mDELETE FROM "phones"[0m
  [1m[35mFixture Insert (1.3ms)[0m  INSERT INTO "phones" ("id", "number", "tag", "user_id", "created_at", "updated_at") VALUES (1, '(211) 234-1111', 'Office', 1, '2013-08-16 15:20:26', '2013-08-16 15:20:26')
  [1m[36mFixture Insert (1.0ms)[0m  [1mINSERT INTO "phones" ("id", "number", "tag", "user_id", "created_at", "updated_at") VALUES (2, '(222) 345-2222', 'Home', 1, '2013-08-16 15:20:26', '2013-08-16 15:20:26')[0m
  [1m[35mFixture Insert (0.8ms)[0m  INSERT INTO "phones" ("id", "number", "tag", "user_id", "created_at", "updated_at") VALUES (3, '(333) 456-3333', 'Mobile', 1, '2013-08-16 15:20:26', '2013-08-16 15:20:26')
  [1m[36mFixture Insert (0.8ms)[0m  [1mINSERT INTO "phones" ("id", "number", "tag", "user_id", "created_at", "updated_at") VALUES (4, '(444) 567-4444', 'Pager', 1, '2013-08-16 15:20:26', '2013-08-16 15:20:26')[0m
  [1m[35mFixture Insert (0.8ms)[0m  INSERT INTO "phones" ("id", "number", "tag", "user_id", "created_at", "updated_at") VALUES (5, '(555) 678-5555', 'Mobile', 1, '2013-08-16 15:20:26', '2013-08-16 15:20:26')
  [1m[36mFixture Insert (0.7ms)[0m  [1mINSERT INTO "phones" ("id", "number", "tag", "user_id", "created_at", "updated_at") VALUES (6, '(666) 789-6666', 'Mobile', 1, '2013-08-16 15:20:26', '2013-08-16 15:20:26')[0m
  [1m[35m (4.8ms)[0m  COMMIT
  [1m[36m (0.8ms)[0m  [1mALTER TABLE "phones" ENABLE TRIGGER ALL;ALTER TABLE "users" ENABLE TRIGGER ALL;ALTER TABLE "schema_migrations" ENABLE TRIGGER ALL[0m
  [1m[35m (0.3ms)[0m  BEGIN
----------------------------------------------
PhoneTest: test: Phone should belong to user. 
----------------------------------------------
  [1m[36m (0.4ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
------------------------------------------------------------------------------------------------
PhoneTest: test: Phone should ensure inclusion of tag in ["Home", "Office", "Mobile", "Pager"]. 
------------------------------------------------------------------------------------------------
  [1m[36m (0.2ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.2ms)[0m  BEGIN
------------------------------------------------------------------------
PhoneTest: test: Phone should ensure number has a length of at least 7. 
------------------------------------------------------------------------
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
------------------------------------------------------------------------
PhoneTest: test: Phone should ensure number has a length of at most 17. 
------------------------------------------------------------------------
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
--------------------------------------------------------
PhoneTest: test: Phone should require number to be set. 
--------------------------------------------------------
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
-----------------------------------------------------
PhoneTest: test: Phone should require tag to be set. 
-----------------------------------------------------
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
---------------------------------------------------------
PhoneTest: test: Phone should require user_id to be set. 
---------------------------------------------------------
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
--------------------------------------------------------
UserTest: test: A given user should be valid initially. 
--------------------------------------------------------
  [1m[36mUser Load (1.7ms)[0m  [1mSELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35mUser Exists (1.9ms)[0m  SELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
-----------------------------------------------------------------------
UserTest: test: A given user should not be valid if first name is nil. 
-----------------------------------------------------------------------
  [1m[36mUser Load (0.8ms)[0m  [1mSELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
----------------------------------------------------------------------------
UserTest: test: A given user should not be valid if first name is too long. 
----------------------------------------------------------------------------
  [1m[36mUser Load (0.8ms)[0m  [1mSELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
-----------------------------------------------------------------------------
UserTest: test: A given user should not be valid if first name is too short. 
-----------------------------------------------------------------------------
  [1m[36mUser Load (0.8ms)[0m  [1mSELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
------------------------------------------------------------------------------------------------
UserTest: test: A given user should not be valid if first name starts with a lower case letter. 
------------------------------------------------------------------------------------------------
  [1m[36mUser Load (0.8ms)[0m  [1mSELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
----------------------------------------------------------------------
UserTest: test: A given user should not be valid if last name is nil. 
----------------------------------------------------------------------
  [1m[36mUser Load (0.8ms)[0m  [1mSELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1
  [1m[36m (0.5ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
---------------------------------------------------------------------------
UserTest: test: A given user should not be valid if last name is too long. 
---------------------------------------------------------------------------
  [1m[36mUser Load (0.8ms)[0m  [1mSELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
----------------------------------------------------------------------------
UserTest: test: A given user should not be valid if last name is too short. 
----------------------------------------------------------------------------
  [1m[36mUser Load (0.8ms)[0m  [1mSELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35mUser Exists (0.8ms)[0m  SELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
---------------------------------------------------------------------------------------------
UserTest: test: A given user should not be valid if login name has non-alphanumeric letters. 
---------------------------------------------------------------------------------------------
  [1m[36mUser Load (0.7ms)[0m  [1mSELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35mUser Exists (0.8ms)[0m  SELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'johns-276' AND "users"."id" != 1) LIMIT 1
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
-------------------------------------------------------------------------------
UserTest: test: A given user should not be valid if login name is a duplicate. 
-------------------------------------------------------------------------------
  [1m[36mUser Load (0.7ms)[0m  [1mSELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35m (0.3ms)[0m  SAVEPOINT active_record_1
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'orstedma' LIMIT 1[0m
  [1m[35m (0.4ms)[0m  ROLLBACK TO SAVEPOINT active_record_1
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'orstedma' LIMIT 1[0m
  [1m[35m (0.3ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
-----------------------------------------------------------------------
UserTest: test: A given user should not be valid if login name is nil. 
-----------------------------------------------------------------------
  [1m[35mUser Load (0.8ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" IS NULL AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.3ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
----------------------------------------------------------------------------
UserTest: test: A given user should not be valid if login name is too long. 
----------------------------------------------------------------------------
  [1m[35mUser Load (0.8ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (0.8ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'abbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.3ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
-----------------------------------------------------------------------------
UserTest: test: A given user should not be valid if login name is too short. 
-----------------------------------------------------------------------------
  [1m[35mUser Load (0.8ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'aaaaa' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.3ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
---------------------------------------------------------------------------------------------
UserTest: test: A given user should not be valid if login name starts with a capital letter. 
---------------------------------------------------------------------------------------------
  [1m[35mUser Load (0.8ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'Johns276' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.3ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
------------------------------------------------------------------------------------
UserTest: test: A given user should require a start date if an end date is present. 
------------------------------------------------------------------------------------
  [1m[35mUser Load (0.9ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (0.8ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.3ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
--------------------------------------------------------------------------------
UserTest: test: A given user should require an end date on or after start date. 
--------------------------------------------------------------------------------
  [1m[35mUser Load (0.8ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (0.8ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.3ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
---------------------------------------------------------------------
UserTest: test: User should allow first_name to be set to "Charles". 
---------------------------------------------------------------------
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.8ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35m (0.4ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
--------------------------------------------------------------------------
UserTest: test: User should ensure first_name has a length of at least 2. 
--------------------------------------------------------------------------
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.6ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.2ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.2ms)[0m  BEGIN
---------------------------------------------------------------------------
UserTest: test: User should ensure first_name has a length of at most 254. 
---------------------------------------------------------------------------
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.3ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.8ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35m (0.2ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
-------------------------------------------------------------------------
UserTest: test: User should ensure last_name has a length of at least 2. 
-------------------------------------------------------------------------
  [1m[35mUser Exists (0.9ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.8ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
--------------------------------------------------------------------------
UserTest: test: User should ensure last_name has a length of at most 254. 
--------------------------------------------------------------------------
  [1m[36mUser Exists (0.6ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.6ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.6ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.6ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.6ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35m (0.3ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
--------------------------------------------------------------------------
UserTest: test: User should ensure login_name has a length of at least 6. 
--------------------------------------------------------------------------
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxx' LIMIT 1
  [1m[36mUser Exists (0.8ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxx' LIMIT 1[0m
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxx' LIMIT 1
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxx' LIMIT 1[0m
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxx' LIMIT 1
  [1m[36m (0.2ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.2ms)[0m  BEGIN
---------------------------------------------------------------------------
UserTest: test: User should ensure login_name has a length of at most 254. 
---------------------------------------------------------------------------
  [1m[36mUser Exists (0.6ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' LIMIT 1[0m
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' LIMIT 1
  [1m[36mUser Exists (0.8ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' LIMIT 1[0m
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' LIMIT 1
  [1m[36mUser Exists (0.8ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' LIMIT 1[0m
  [1m[35m (0.3ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
----------------------------------------------
UserTest: test: User should have many phones. 
----------------------------------------------
  [1m[35m (0.3ms)[0m  ROLLBACK
  [1m[36m (0.4ms)[0m  [1mBEGIN[0m
-------------------------------------------------------------------------
UserTest: test: User should not allow first_name to be set to "charles". 
-------------------------------------------------------------------------
  [1m[35mUser Exists (0.9ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (5.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35m (0.4ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
--------------------------------------------------------------------------------
UserTest: test: User should require case sensitive unique value for login_name. 
--------------------------------------------------------------------------------
  [1m[35mUser Load (0.8ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'orstedma' LIMIT 1[0m
  [1m[35mUser Exists (0.9ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'orstedma' LIMIT 1
  [1m[36m (0.5ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.4ms)[0m  BEGIN
----------------------------------------------------------
UserTest: test: User should require first_name to be set. 
----------------------------------------------------------
  [1m[36mUser Exists (0.6ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.6ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.4ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.4ms)[0m  BEGIN
---------------------------------------------------------
UserTest: test: User should require last_name to be set. 
---------------------------------------------------------
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.5ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.4ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
----------------------------------------------------------
UserTest: test: User should require login_name to be set. 
----------------------------------------------------------
  [1m[36mUser Exists (0.6ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.6ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.2ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
----------------------------------------------------------
UserTest: test: User should require start_date to be set. 
----------------------------------------------------------
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[36m (226.1ms)[0m  [1mDROP DATABASE IF EXISTS "ritrack_test"[0m
  [1m[35m (749.3ms)[0m  CREATE DATABASE "ritrack_test" ENCODING = 'unicode'
  [1m[36mSQL (46.4ms)[0m  [1mCREATE EXTENSION IF NOT EXISTS "plpgsql"[0m
  [1m[35m (94.7ms)[0m  CREATE TABLE "phones" ("id" serial primary key, "number" character varying(255), "tag" character varying(255), "user_id" integer, "created_at" timestamp, "updated_at" timestamp) 
  [1m[36m (66.7ms)[0m  [1mCREATE INDEX "index_phones_on_number" ON "phones" USING btree ("number")[0m
  [1m[35m (42.3ms)[0m  CREATE INDEX "index_phones_on_user_id" ON "phones" USING btree ("user_id")
  [1m[36m (80.2ms)[0m  [1mCREATE TABLE "users" ("id" serial primary key, "first_name" character varying(255), "last_name" character varying(255), "nick_name" character varying(255), "login_name" character varying(255), "notes" text, "created_at" timestamp, "updated_at" timestamp, "start_date" date, "end_date" date) [0m
  [1m[35m (10.8ms)[0m  CREATE TABLE "schema_migrations" ("version" character varying(255) NOT NULL) 
  [1m[36m (45.9ms)[0m  [1mCREATE UNIQUE INDEX "unique_schema_migrations" ON "schema_migrations" ("version")[0m
  [1m[35m (1.0ms)[0m  SELECT version FROM "schema_migrations"
  [1m[36m (5.8ms)[0m  [1mINSERT INTO "schema_migrations" (version) VALUES ('20130816142047')[0m
  [1m[35m (7.9ms)[0m  INSERT INTO "schema_migrations" (version) VALUES ('20130811212425')
  [1m[36m (8.0ms)[0m  [1mINSERT INTO "schema_migrations" (version) VALUES ('20130811195620')[0m
  [1m[35m (7.9ms)[0m  INSERT INTO "schema_migrations" (version) VALUES ('20130811193133')
  [1m[36m (8.0ms)[0m  [1mINSERT INTO "schema_migrations" (version) VALUES ('20130811195557')[0m
  [1m[35mActiveRecord::SchemaMigration Load (1.1ms)[0m  SELECT "schema_migrations".* FROM "schema_migrations"
  [1m[36mActiveRecord::SchemaMigration Load (0.6ms)[0m  [1mSELECT "schema_migrations".* FROM "schema_migrations"[0m
  [1m[35m (1.1ms)[0m  ALTER TABLE "phones" DISABLE TRIGGER ALL;ALTER TABLE "users" DISABLE TRIGGER ALL;ALTER TABLE "schema_migrations" DISABLE TRIGGER ALL
  [1m[36m (0.5ms)[0m  [1mBEGIN[0m
  [1m[35mFixture Delete (1.0ms)[0m  DELETE FROM "users"
  [1m[36mFixture Insert (1.2ms)[0m  [1mINSERT INTO "users" ("id", "first_name", "last_name", "nick_name", "login_name", "start_date", "end_date", "notes", "created_at", "updated_at") VALUES (1, 'Michael', 'Orsted', 'Mike', 'orstedma', '2012-02-04', NULL, 'This user lives in Chicago.', '2013-08-16 15:56:19', '2013-08-16 15:56:19')[0m
  [1m[35mFixture Insert (0.8ms)[0m  INSERT INTO "users" ("id", "first_name", "last_name", "nick_name", "login_name", "start_date", "end_date", "notes", "created_at", "updated_at") VALUES (2, 'Frederick', 'Free-Loader', 'Frederick', 'freelofw', '2012-03-04', NULL, 'This user is completely useless', '2013-08-16 15:56:19', '2013-08-16 15:56:19')
  [1m[36mFixture Insert (0.7ms)[0m  [1mINSERT INTO "users" ("id", "first_name", "last_name", "nick_name", "login_name", "start_date", "end_date", "notes", "created_at", "updated_at") VALUES (3, 'Michael', 'Winstead', 'Mike', 'winstem', '2012-02-04', '2013-08-12', 'This user lives in New York. This user is disabled in the system.', '2013-08-16 15:56:19', '2013-08-16 15:56:19')[0m
  [1m[35mFixture Insert (0.8ms)[0m  INSERT INTO "users" ("id", "first_name", "last_name", "nick_name", "login_name", "start_date", "end_date", "notes", "created_at", "updated_at") VALUES (4, 'Allison', 'Wilson', 'Alli', 'wilsona', '2012-03-04', NULL, 'Electrical engineer.', '2013-08-16 15:56:19', '2013-08-16 15:56:19')
  [1m[36mFixture Delete (0.7ms)[0m  [1mDELETE FROM "phones"[0m
  [1m[35mFixture Insert (0.8ms)[0m  INSERT INTO "phones" ("id", "number", "tag", "user_id", "created_at", "updated_at") VALUES (1, '(211) 234-1111', 'Office', 1, '2013-08-16 15:56:19', '2013-08-16 15:56:19')
  [1m[36mFixture Insert (0.6ms)[0m  [1mINSERT INTO "phones" ("id", "number", "tag", "user_id", "created_at", "updated_at") VALUES (2, '(222) 345-2222', 'Home', 1, '2013-08-16 15:56:19', '2013-08-16 15:56:19')[0m
  [1m[35mFixture Insert (0.5ms)[0m  INSERT INTO "phones" ("id", "number", "tag", "user_id", "created_at", "updated_at") VALUES (3, '(333) 456-3333', 'Mobile', 1, '2013-08-16 15:56:19', '2013-08-16 15:56:19')
  [1m[36mFixture Insert (0.5ms)[0m  [1mINSERT INTO "phones" ("id", "number", "tag", "user_id", "created_at", "updated_at") VALUES (4, '(444) 567-4444', 'Pager', 1, '2013-08-16 15:56:19', '2013-08-16 15:56:19')[0m
  [1m[35mFixture Insert (0.7ms)[0m  INSERT INTO "phones" ("id", "number", "tag", "user_id", "created_at", "updated_at") VALUES (5, '(555) 678-5555', 'Mobile', 1, '2013-08-16 15:56:19', '2013-08-16 15:56:19')
  [1m[36mFixture Insert (0.6ms)[0m  [1mINSERT INTO "phones" ("id", "number", "tag", "user_id", "created_at", "updated_at") VALUES (6, '(666) 789-6666', 'Mobile', 1, '2013-08-16 15:56:19', '2013-08-16 15:56:19')[0m
  [1m[35m (9.6ms)[0m  COMMIT
  [1m[36m (0.7ms)[0m  [1mALTER TABLE "phones" ENABLE TRIGGER ALL;ALTER TABLE "users" ENABLE TRIGGER ALL;ALTER TABLE "schema_migrations" ENABLE TRIGGER ALL[0m
  [1m[35m (0.4ms)[0m  BEGIN
----------------------------------------------
PhoneTest: test: Phone should belong to user. 
----------------------------------------------
  [1m[36m (0.4ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.4ms)[0m  BEGIN
------------------------------------------------------------------------------------------------
PhoneTest: test: Phone should ensure inclusion of tag in ["Home", "Office", "Mobile", "Pager"]. 
------------------------------------------------------------------------------------------------
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
------------------------------------------------------------------------
PhoneTest: test: Phone should ensure number has a length of at least 7. 
------------------------------------------------------------------------
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
------------------------------------------------------------------------
PhoneTest: test: Phone should ensure number has a length of at most 17. 
------------------------------------------------------------------------
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
--------------------------------------------------------
PhoneTest: test: Phone should require number to be set. 
--------------------------------------------------------
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
-----------------------------------------------------
PhoneTest: test: Phone should require tag to be set. 
-----------------------------------------------------
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
---------------------------------------------------------
PhoneTest: test: Phone should require user_id to be set. 
---------------------------------------------------------
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
--------------------------------------------------------
UserTest: test: A given user should be valid initially. 
--------------------------------------------------------
  [1m[36mUser Load (1.5ms)[0m  [1mSELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35mUser Exists (1.9ms)[0m  SELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
-----------------------------------------------------------------------
UserTest: test: A given user should not be valid if first name is nil. 
-----------------------------------------------------------------------
  [1m[36mUser Load (0.8ms)[0m  [1mSELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35mUser Exists (0.8ms)[0m  SELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
----------------------------------------------------------------------------
UserTest: test: A given user should not be valid if first name is too long. 
----------------------------------------------------------------------------
  [1m[36mUser Load (0.8ms)[0m  [1mSELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35mUser Exists (1.0ms)[0m  SELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
-----------------------------------------------------------------------------
UserTest: test: A given user should not be valid if first name is too short. 
-----------------------------------------------------------------------------
  [1m[36mUser Load (0.8ms)[0m  [1mSELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35mUser Exists (1.0ms)[0m  SELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1
  [1m[36m (0.5ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.6ms)[0m  BEGIN
------------------------------------------------------------------------------------------------
UserTest: test: A given user should not be valid if first name starts with a lower case letter. 
------------------------------------------------------------------------------------------------
  [1m[36mUser Load (1.1ms)[0m  [1mSELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35mUser Exists (0.9ms)[0m  SELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1
  [1m[36m (0.6ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.5ms)[0m  BEGIN
----------------------------------------------------------------------
UserTest: test: A given user should not be valid if last name is nil. 
----------------------------------------------------------------------
  [1m[36mUser Load (1.0ms)[0m  [1mSELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35mUser Exists (1.0ms)[0m  SELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1
  [1m[36m (0.6ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.5ms)[0m  BEGIN
---------------------------------------------------------------------------
UserTest: test: A given user should not be valid if last name is too long. 
---------------------------------------------------------------------------
  [1m[36mUser Load (1.1ms)[0m  [1mSELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35mUser Exists (1.0ms)[0m  SELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1
  [1m[36m (0.5ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.5ms)[0m  BEGIN
----------------------------------------------------------------------------
UserTest: test: A given user should not be valid if last name is too short. 
----------------------------------------------------------------------------
  [1m[36mUser Load (1.1ms)[0m  [1mSELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35mUser Exists (1.0ms)[0m  SELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1
  [1m[36m (0.6ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.4ms)[0m  BEGIN
---------------------------------------------------------------------------------------------
UserTest: test: A given user should not be valid if login name has non-alphanumeric letters. 
---------------------------------------------------------------------------------------------
  [1m[36mUser Load (1.1ms)[0m  [1mSELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35mUser Exists (1.0ms)[0m  SELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'johns-276' AND "users"."id" != 1) LIMIT 1
  [1m[36m (0.5ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.4ms)[0m  BEGIN
-------------------------------------------------------------------------------
UserTest: test: A given user should not be valid if login name is a duplicate. 
-------------------------------------------------------------------------------
  [1m[36mUser Load (1.1ms)[0m  [1mSELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35m (0.5ms)[0m  SAVEPOINT active_record_1
  [1m[36mUser Exists (0.9ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'orstedma' LIMIT 1[0m
  [1m[35m (0.6ms)[0m  ROLLBACK TO SAVEPOINT active_record_1
  [1m[36mUser Exists (0.9ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'orstedma' LIMIT 1[0m
  [1m[35m (0.6ms)[0m  ROLLBACK
  [1m[36m (0.5ms)[0m  [1mBEGIN[0m
-----------------------------------------------------------------------
UserTest: test: A given user should not be valid if login name is nil. 
-----------------------------------------------------------------------
  [1m[35mUser Load (1.1ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (0.9ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" IS NULL AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.4ms)[0m  ROLLBACK
  [1m[36m (0.4ms)[0m  [1mBEGIN[0m
----------------------------------------------------------------------------
UserTest: test: A given user should not be valid if login name is too long. 
----------------------------------------------------------------------------
  [1m[35mUser Load (1.1ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (1.0ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'abbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.5ms)[0m  ROLLBACK
  [1m[36m (0.5ms)[0m  [1mBEGIN[0m
-----------------------------------------------------------------------------
UserTest: test: A given user should not be valid if login name is too short. 
-----------------------------------------------------------------------------
  [1m[35mUser Load (1.2ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (1.0ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'aaaaa' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.5ms)[0m  ROLLBACK
  [1m[36m (0.5ms)[0m  [1mBEGIN[0m
---------------------------------------------------------------------------------------------
UserTest: test: A given user should not be valid if login name starts with a capital letter. 
---------------------------------------------------------------------------------------------
  [1m[35mUser Load (1.1ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (1.0ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'Johns276' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.5ms)[0m  ROLLBACK
  [1m[36m (0.5ms)[0m  [1mBEGIN[0m
------------------------------------------------------------------------------------
UserTest: test: A given user should require a start date if an end date is present. 
------------------------------------------------------------------------------------
  [1m[35mUser Load (1.1ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (1.0ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.5ms)[0m  ROLLBACK
  [1m[36m (0.4ms)[0m  [1mBEGIN[0m
--------------------------------------------------------------------------------
UserTest: test: A given user should require an end date on or after start date. 
--------------------------------------------------------------------------------
  [1m[35mUser Load (1.1ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (1.0ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.4ms)[0m  ROLLBACK
  [1m[36m (0.4ms)[0m  [1mBEGIN[0m
---------------------------------------------------------------------
UserTest: test: User should allow first_name to be set to "Charles". 
---------------------------------------------------------------------
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.8ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35m (0.3ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
--------------------------------------------------------------------------
UserTest: test: User should ensure first_name has a length of at least 2. 
--------------------------------------------------------------------------
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.6ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.5ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
---------------------------------------------------------------------------
UserTest: test: User should ensure first_name has a length of at most 254. 
---------------------------------------------------------------------------
  [1m[36mUser Exists (0.5ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.5ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (2.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35m (0.4ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
-------------------------------------------------------------------------
UserTest: test: User should ensure last_name has a length of at least 2. 
-------------------------------------------------------------------------
  [1m[35mUser Exists (0.9ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.5ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.5ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.6ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.2ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.2ms)[0m  BEGIN
--------------------------------------------------------------------------
UserTest: test: User should ensure last_name has a length of at most 254. 
--------------------------------------------------------------------------
  [1m[36mUser Exists (0.5ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.6ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.6ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.6ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35m (0.5ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
--------------------------------------------------------------------------
UserTest: test: User should ensure login_name has a length of at least 6. 
--------------------------------------------------------------------------
  [1m[35mUser Exists (0.5ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxx' LIMIT 1
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxx' LIMIT 1[0m
  [1m[35mUser Exists (0.9ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxx' LIMIT 1
  [1m[36mUser Exists (0.5ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxx' LIMIT 1[0m
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxx' LIMIT 1
  [1m[36m (0.2ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.2ms)[0m  BEGIN
---------------------------------------------------------------------------
UserTest: test: User should ensure login_name has a length of at most 254. 
---------------------------------------------------------------------------
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' LIMIT 1[0m
  [1m[35mUser Exists (0.5ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' LIMIT 1
  [1m[36mUser Exists (0.8ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' LIMIT 1[0m
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' LIMIT 1
  [1m[36mUser Exists (0.6ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' LIMIT 1[0m
  [1m[35m (0.3ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
----------------------------------------------
UserTest: test: User should have many phones. 
----------------------------------------------
  [1m[35m (0.3ms)[0m  ROLLBACK
  [1m[36m (0.4ms)[0m  [1mBEGIN[0m
-------------------------------------------------------------------------
UserTest: test: User should not allow first_name to be set to "charles". 
-------------------------------------------------------------------------
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (5.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35m (0.3ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
--------------------------------------------------------------------------------
UserTest: test: User should require case sensitive unique value for login_name. 
--------------------------------------------------------------------------------
  [1m[35mUser Load (0.9ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'orstedma' LIMIT 1[0m
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'orstedma' LIMIT 1
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
----------------------------------------------------------
UserTest: test: User should require first_name to be set. 
----------------------------------------------------------
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.6ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
---------------------------------------------------------
UserTest: test: User should require last_name to be set. 
---------------------------------------------------------
  [1m[36mUser Exists (0.6ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.2ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
----------------------------------------------------------
UserTest: test: User should require login_name to be set. 
----------------------------------------------------------
  [1m[36mUser Exists (0.8ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.6ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.4ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
----------------------------------------------------------
UserTest: test: User should require start_date to be set. 
----------------------------------------------------------
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.8ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[36m (131.2ms)[0m  [1mDROP DATABASE IF EXISTS "ritrack_test"[0m
  [1m[35m (707.6ms)[0m  CREATE DATABASE "ritrack_test" ENCODING = 'unicode'
  [1m[36mSQL (49.0ms)[0m  [1mCREATE EXTENSION IF NOT EXISTS "plpgsql"[0m
  [1m[35m (89.5ms)[0m  CREATE TABLE "phones" ("id" serial primary key, "number" character varying(255), "tag" character varying(255), "user_id" integer, "created_at" timestamp, "updated_at" timestamp) 
  [1m[36m (58.0ms)[0m  [1mCREATE INDEX "index_phones_on_number" ON "phones" USING btree ("number")[0m
  [1m[35m (51.1ms)[0m  CREATE INDEX "index_phones_on_user_id" ON "phones" USING btree ("user_id")
  [1m[36m (88.7ms)[0m  [1mCREATE TABLE "users" ("id" serial primary key, "first_name" character varying(255), "last_name" character varying(255), "nick_name" character varying(255), "login_name" character varying(255), "notes" text, "created_at" timestamp, "updated_at" timestamp, "start_date" date, "end_date" date) [0m
  [1m[35m (10.8ms)[0m  CREATE TABLE "schema_migrations" ("version" character varying(255) NOT NULL) 
  [1m[36m (46.1ms)[0m  [1mCREATE UNIQUE INDEX "unique_schema_migrations" ON "schema_migrations" ("version")[0m
  [1m[35m (1.0ms)[0m  SELECT version FROM "schema_migrations"
  [1m[36m (5.8ms)[0m  [1mINSERT INTO "schema_migrations" (version) VALUES ('20130816142047')[0m
  [1m[35m (7.9ms)[0m  INSERT INTO "schema_migrations" (version) VALUES ('20130811212425')
  [1m[36m (7.9ms)[0m  [1mINSERT INTO "schema_migrations" (version) VALUES ('20130811195620')[0m
  [1m[35m (8.1ms)[0m  INSERT INTO "schema_migrations" (version) VALUES ('20130811193133')
  [1m[36m (7.9ms)[0m  [1mINSERT INTO "schema_migrations" (version) VALUES ('20130811195557')[0m
  [1m[35mActiveRecord::SchemaMigration Load (1.0ms)[0m  SELECT "schema_migrations".* FROM "schema_migrations"
  [1m[36mActiveRecord::SchemaMigration Load (0.6ms)[0m  [1mSELECT "schema_migrations".* FROM "schema_migrations"[0m
  [1m[35m (1.3ms)[0m  ALTER TABLE "phones" DISABLE TRIGGER ALL;ALTER TABLE "users" DISABLE TRIGGER ALL;ALTER TABLE "schema_migrations" DISABLE TRIGGER ALL
  [1m[36m (0.5ms)[0m  [1mBEGIN[0m
  [1m[35mFixture Delete (0.7ms)[0m  DELETE FROM "users"
  [1m[36mFixture Insert (0.9ms)[0m  [1mINSERT INTO "users" ("id", "first_name", "last_name", "nick_name", "login_name", "start_date", "end_date", "notes", "created_at", "updated_at") VALUES (1, 'Michael', 'Orsted', 'Mike', 'orstedma', '2012-02-04', NULL, 'This user lives in Chicago.', '2013-08-16 16:14:15', '2013-08-16 16:14:15')[0m
  [1m[35mFixture Insert (0.9ms)[0m  INSERT INTO "users" ("id", "first_name", "last_name", "nick_name", "login_name", "start_date", "end_date", "notes", "created_at", "updated_at") VALUES (2, 'Frederick', 'Free-Loader', 'Frederick', 'freelofw', '2012-03-04', NULL, 'This user is completely useless', '2013-08-16 16:14:15', '2013-08-16 16:14:15')
  [1m[36mFixture Insert (0.8ms)[0m  [1mINSERT INTO "users" ("id", "first_name", "last_name", "nick_name", "login_name", "start_date", "end_date", "notes", "created_at", "updated_at") VALUES (3, 'Michael', 'Winstead', 'Mike', 'winstem', '2012-02-04', '2013-08-12', 'This user lives in New York. This user is disabled in the system.', '2013-08-16 16:14:15', '2013-08-16 16:14:15')[0m
  [1m[35mFixture Insert (0.9ms)[0m  INSERT INTO "users" ("id", "first_name", "last_name", "nick_name", "login_name", "start_date", "end_date", "notes", "created_at", "updated_at") VALUES (4, 'Allison', 'Wilson', 'Alli', 'wilsona', '2012-03-04', NULL, 'Electrical engineer.', '2013-08-16 16:14:15', '2013-08-16 16:14:15')
  [1m[36mFixture Delete (1.1ms)[0m  [1mDELETE FROM "phones"[0m
  [1m[35mFixture Insert (1.3ms)[0m  INSERT INTO "phones" ("id", "number", "tag", "user_id", "created_at", "updated_at") VALUES (1, '(211) 234-1111', 'Office', 1, '2013-08-16 16:14:15', '2013-08-16 16:14:15')
  [1m[36mFixture Insert (1.0ms)[0m  [1mINSERT INTO "phones" ("id", "number", "tag", "user_id", "created_at", "updated_at") VALUES (2, '(222) 345-2222', 'Home', 1, '2013-08-16 16:14:15', '2013-08-16 16:14:15')[0m
  [1m[35mFixture Insert (0.8ms)[0m  INSERT INTO "phones" ("id", "number", "tag", "user_id", "created_at", "updated_at") VALUES (3, '(333) 456-3333', 'Mobile', 1, '2013-08-16 16:14:15', '2013-08-16 16:14:15')
  [1m[36mFixture Insert (0.8ms)[0m  [1mINSERT INTO "phones" ("id", "number", "tag", "user_id", "created_at", "updated_at") VALUES (4, '(444) 567-4444', 'Pager', 1, '2013-08-16 16:14:15', '2013-08-16 16:14:15')[0m
  [1m[35mFixture Insert (0.8ms)[0m  INSERT INTO "phones" ("id", "number", "tag", "user_id", "created_at", "updated_at") VALUES (5, '(555) 678-5555', 'Mobile', 1, '2013-08-16 16:14:15', '2013-08-16 16:14:15')
  [1m[36mFixture Insert (0.8ms)[0m  [1mINSERT INTO "phones" ("id", "number", "tag", "user_id", "created_at", "updated_at") VALUES (6, '(666) 789-6666', 'Mobile', 1, '2013-08-16 16:14:15', '2013-08-16 16:14:15')[0m
  [1m[35m (3.1ms)[0m  COMMIT
  [1m[36m (0.7ms)[0m  [1mALTER TABLE "phones" ENABLE TRIGGER ALL;ALTER TABLE "users" ENABLE TRIGGER ALL;ALTER TABLE "schema_migrations" ENABLE TRIGGER ALL[0m
  [1m[35m (0.3ms)[0m  BEGIN
----------------------------------------------------------
PhoneTest: test: A given phone should be initially valid. 
----------------------------------------------------------
  [1m[36mPhone Load (1.8ms)[0m  [1mSELECT "phones".* FROM "phones" ORDER BY "phones"."id" ASC LIMIT 1[0m
  [1m[35m (0.3ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
----------------------------------------------
PhoneTest: test: Phone should belong to user. 
----------------------------------------------
  [1m[35m (0.3ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
------------------------------------------------------------------------------------------------
PhoneTest: test: Phone should ensure inclusion of tag in ["Home", "Office", "Mobile", "Pager"]. 
------------------------------------------------------------------------------------------------
  [1m[35m (0.3ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
------------------------------------------------------------------------
PhoneTest: test: Phone should ensure number has a length of at least 7. 
------------------------------------------------------------------------
  [1m[35m (0.3ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
------------------------------------------------------------------------
PhoneTest: test: Phone should ensure number has a length of at most 17. 
------------------------------------------------------------------------
  [1m[35m (0.3ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
--------------------------------------------------------
PhoneTest: test: Phone should require number to be set. 
--------------------------------------------------------
  [1m[35m (0.3ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
-----------------------------------------------------
PhoneTest: test: Phone should require tag to be set. 
-----------------------------------------------------
  [1m[35m (0.3ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
---------------------------------------------------------
PhoneTest: test: Phone should require user_id to be set. 
---------------------------------------------------------
  [1m[35m (0.4ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
--------------------------------------------------------
UserTest: test: A given user should be valid initially. 
--------------------------------------------------------
  [1m[35mUser Load (1.2ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (1.9ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.3ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
-----------------------------------------------------------------------
UserTest: test: A given user should not be valid if first name is nil. 
-----------------------------------------------------------------------
  [1m[35mUser Load (0.9ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.3ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
----------------------------------------------------------------------------
UserTest: test: A given user should not be valid if first name is too long. 
----------------------------------------------------------------------------
  [1m[35mUser Load (0.9ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (0.8ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.4ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
-----------------------------------------------------------------------------
UserTest: test: A given user should not be valid if first name is too short. 
-----------------------------------------------------------------------------
  [1m[35mUser Load (0.7ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (0.5ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.3ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
------------------------------------------------------------------------------------------------
UserTest: test: A given user should not be valid if first name starts with a lower case letter. 
------------------------------------------------------------------------------------------------
  [1m[35mUser Load (0.8ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.4ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
----------------------------------------------------------------------
UserTest: test: A given user should not be valid if last name is nil. 
----------------------------------------------------------------------
  [1m[35mUser Load (0.9ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (0.8ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.4ms)[0m  ROLLBACK
  [1m[36m (0.4ms)[0m  [1mBEGIN[0m
---------------------------------------------------------------------------
UserTest: test: A given user should not be valid if last name is too long. 
---------------------------------------------------------------------------
  [1m[35mUser Load (1.0ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (0.9ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.4ms)[0m  ROLLBACK
  [1m[36m (0.5ms)[0m  [1mBEGIN[0m
----------------------------------------------------------------------------
UserTest: test: A given user should not be valid if last name is too short. 
----------------------------------------------------------------------------
  [1m[35mUser Load (1.2ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (1.0ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.5ms)[0m  ROLLBACK
  [1m[36m (0.4ms)[0m  [1mBEGIN[0m
---------------------------------------------------------------------------------------------
UserTest: test: A given user should not be valid if login name has non-alphanumeric letters. 
---------------------------------------------------------------------------------------------
  [1m[35mUser Load (0.8ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (0.9ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'johns-276' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.4ms)[0m  ROLLBACK
  [1m[36m (0.4ms)[0m  [1mBEGIN[0m
-------------------------------------------------------------------------------
UserTest: test: A given user should not be valid if login name is a duplicate. 
-------------------------------------------------------------------------------
  [1m[35mUser Load (1.1ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36m (0.5ms)[0m  [1mSAVEPOINT active_record_1[0m
  [1m[35mUser Exists (0.9ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'orstedma' LIMIT 1
  [1m[36m (0.5ms)[0m  [1mROLLBACK TO SAVEPOINT active_record_1[0m
  [1m[35mUser Exists (0.9ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'orstedma' LIMIT 1
  [1m[36m (0.4ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
-----------------------------------------------------------------------
UserTest: test: A given user should not be valid if login name is nil. 
-----------------------------------------------------------------------
  [1m[36mUser Load (1.0ms)[0m  [1mSELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35mUser Exists (0.9ms)[0m  SELECT 1 AS one FROM "users" WHERE ("users"."login_name" IS NULL AND "users"."id" != 1) LIMIT 1
  [1m[36m (0.4ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.4ms)[0m  BEGIN
----------------------------------------------------------------------------
UserTest: test: A given user should not be valid if login name is too long. 
----------------------------------------------------------------------------
  [1m[36mUser Load (1.0ms)[0m  [1mSELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35mUser Exists (0.9ms)[0m  SELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'abbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb' AND "users"."id" != 1) LIMIT 1
  [1m[36m (0.5ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.4ms)[0m  BEGIN
-----------------------------------------------------------------------------
UserTest: test: A given user should not be valid if login name is too short. 
-----------------------------------------------------------------------------
  [1m[36mUser Load (1.0ms)[0m  [1mSELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35mUser Exists (0.9ms)[0m  SELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'aaaaa' AND "users"."id" != 1) LIMIT 1
  [1m[36m (0.4ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.4ms)[0m  BEGIN
---------------------------------------------------------------------------------------------
UserTest: test: A given user should not be valid if login name starts with a capital letter. 
---------------------------------------------------------------------------------------------
  [1m[36mUser Load (1.1ms)[0m  [1mSELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35mUser Exists (1.0ms)[0m  SELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'Johns276' AND "users"."id" != 1) LIMIT 1
  [1m[36m (0.4ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.4ms)[0m  BEGIN
------------------------------------------------------------------------------------
UserTest: test: A given user should require a start date if an end date is present. 
------------------------------------------------------------------------------------
  [1m[36mUser Load (1.0ms)[0m  [1mSELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35mUser Exists (0.8ms)[0m  SELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1
  [1m[36m (0.5ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.4ms)[0m  BEGIN
--------------------------------------------------------------------------------
UserTest: test: A given user should require an end date on or after start date. 
--------------------------------------------------------------------------------
  [1m[36mUser Load (1.1ms)[0m  [1mSELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35mUser Exists (1.0ms)[0m  SELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1
  [1m[36m (0.5ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.4ms)[0m  BEGIN
---------------------------------------------------------------------
UserTest: test: User should allow first_name to be set to "Charles". 
---------------------------------------------------------------------
  [1m[36mUser Exists (0.9ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.6ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.4ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
--------------------------------------------------------------------------
UserTest: test: User should ensure first_name has a length of at least 2. 
--------------------------------------------------------------------------
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.8ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.6ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.6ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35m (0.4ms)[0m  ROLLBACK
  [1m[36m (0.4ms)[0m  [1mBEGIN[0m
---------------------------------------------------------------------------
UserTest: test: User should ensure first_name has a length of at most 254. 
---------------------------------------------------------------------------
  [1m[35mUser Exists (0.8ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.5ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (4.1ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
-------------------------------------------------------------------------
UserTest: test: User should ensure last_name has a length of at least 2. 
-------------------------------------------------------------------------
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.6ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.6ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.6ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35m (0.3ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
--------------------------------------------------------------------------
UserTest: test: User should ensure last_name has a length of at most 254. 
--------------------------------------------------------------------------
  [1m[35mUser Exists (0.6ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.6ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.6ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.6ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.6ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
--------------------------------------------------------------------------
UserTest: test: User should ensure login_name has a length of at least 6. 
--------------------------------------------------------------------------
  [1m[36mUser Exists (0.6ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxx' LIMIT 1[0m
  [1m[35mUser Exists (0.6ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxx' LIMIT 1
  [1m[36mUser Exists (0.6ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxx' LIMIT 1[0m
  [1m[35mUser Exists (0.6ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxx' LIMIT 1
  [1m[36mUser Exists (0.6ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxx' LIMIT 1[0m
  [1m[35m (0.3ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
---------------------------------------------------------------------------
UserTest: test: User should ensure login_name has a length of at most 254. 
---------------------------------------------------------------------------
  [1m[35mUser Exists (0.8ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' LIMIT 1
  [1m[36mUser Exists (0.6ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' LIMIT 1[0m
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' LIMIT 1
  [1m[36mUser Exists (0.6ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' LIMIT 1[0m
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' LIMIT 1
  [1m[36m (0.4ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.2ms)[0m  BEGIN
----------------------------------------------
UserTest: test: User should have many phones. 
----------------------------------------------
  [1m[36m (0.4ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
-------------------------------------------------------------------------
UserTest: test: User should not allow first_name to be set to "charles". 
-------------------------------------------------------------------------
  [1m[36mUser Exists (0.6ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (5.8ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
--------------------------------------------------------------------------------
UserTest: test: User should require case sensitive unique value for login_name. 
--------------------------------------------------------------------------------
  [1m[36mUser Load (0.9ms)[0m  [1mSELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35mUser Exists (0.6ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'orstedma' LIMIT 1
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'orstedma' LIMIT 1[0m
  [1m[35m (0.3ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
----------------------------------------------------------
UserTest: test: User should require first_name to be set. 
----------------------------------------------------------
  [1m[35mUser Exists (0.6ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.6ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35m (0.4ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
---------------------------------------------------------
UserTest: test: User should require last_name to be set. 
---------------------------------------------------------
  [1m[35mUser Exists (0.6ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35m (0.2ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
----------------------------------------------------------
UserTest: test: User should require login_name to be set. 
----------------------------------------------------------
  [1m[35mUser Exists (0.5ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35m (0.3ms)[0m  ROLLBACK
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
----------------------------------------------------------
UserTest: test: User should require start_date to be set. 
----------------------------------------------------------
  [1m[35mUser Exists (0.6ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.6ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35m (0.2ms)[0m  ROLLBACK
  [1m[36m (221.6ms)[0m  [1mDROP DATABASE IF EXISTS "ritrack_test"[0m
  [1m[35m (808.2ms)[0m  CREATE DATABASE "ritrack_test" ENCODING = 'unicode'
  [1m[36mSQL (43.3ms)[0m  [1mCREATE EXTENSION IF NOT EXISTS "plpgsql"[0m
  [1m[35m (96.0ms)[0m  CREATE TABLE "phones" ("id" serial primary key, "number" character varying(255), "tag" character varying(255), "user_id" integer, "created_at" timestamp, "updated_at" timestamp) 
  [1m[36m (49.8ms)[0m  [1mCREATE INDEX "index_phones_on_number" ON "phones" USING btree ("number")[0m
  [1m[35m (50.8ms)[0m  CREATE INDEX "index_phones_on_user_id" ON "phones" USING btree ("user_id")
  [1m[36m (88.5ms)[0m  [1mCREATE TABLE "users" ("id" serial primary key, "first_name" character varying(255), "last_name" character varying(255), "nick_name" character varying(255), "login_name" character varying(255), "notes" text, "created_at" timestamp, "updated_at" timestamp, "start_date" date, "end_date" date) [0m
  [1m[35m (10.7ms)[0m  CREATE TABLE "schema_migrations" ("version" character varying(255) NOT NULL) 
  [1m[36m (54.3ms)[0m  [1mCREATE UNIQUE INDEX "unique_schema_migrations" ON "schema_migrations" ("version")[0m
  [1m[35m (1.0ms)[0m  SELECT version FROM "schema_migrations"
  [1m[36m (5.9ms)[0m  [1mINSERT INTO "schema_migrations" (version) VALUES ('20130816142047')[0m
  [1m[35m (7.8ms)[0m  INSERT INTO "schema_migrations" (version) VALUES ('20130811212425')
  [1m[36m (8.0ms)[0m  [1mINSERT INTO "schema_migrations" (version) VALUES ('20130811195620')[0m
  [1m[35m (8.0ms)[0m  INSERT INTO "schema_migrations" (version) VALUES ('20130811193133')
  [1m[36m (7.9ms)[0m  [1mINSERT INTO "schema_migrations" (version) VALUES ('20130811195557')[0m
  [1m[35mActiveRecord::SchemaMigration Load (1.1ms)[0m  SELECT "schema_migrations".* FROM "schema_migrations"
  [1m[36mActiveRecord::SchemaMigration Load (0.5ms)[0m  [1mSELECT "schema_migrations".* FROM "schema_migrations"[0m
  [1m[35m (1.2ms)[0m  ALTER TABLE "phones" DISABLE TRIGGER ALL;ALTER TABLE "users" DISABLE TRIGGER ALL;ALTER TABLE "schema_migrations" DISABLE TRIGGER ALL
  [1m[36m (0.4ms)[0m  [1mBEGIN[0m
  [1m[35mFixture Delete (1.0ms)[0m  DELETE FROM "users"
  [1m[36mFixture Insert (1.3ms)[0m  [1mINSERT INTO "users" ("id", "first_name", "last_name", "nick_name", "login_name", "start_date", "end_date", "notes", "created_at", "updated_at") VALUES (1, 'Michael', 'Orsted', 'Mike', 'orstedma', '2012-02-04', NULL, 'This user lives in Chicago.', '2013-08-16 16:17:00', '2013-08-16 16:17:00')[0m
  [1m[35mFixture Insert (0.9ms)[0m  INSERT INTO "users" ("id", "first_name", "last_name", "nick_name", "login_name", "start_date", "end_date", "notes", "created_at", "updated_at") VALUES (2, 'Frederick', 'Free-Loader', 'Frederick', 'freelofw', '2012-03-04', NULL, 'This user is completely useless', '2013-08-16 16:17:00', '2013-08-16 16:17:00')
  [1m[36mFixture Insert (0.8ms)[0m  [1mINSERT INTO "users" ("id", "first_name", "last_name", "nick_name", "login_name", "start_date", "end_date", "notes", "created_at", "updated_at") VALUES (3, 'Michael', 'Winstead', 'Mike', 'winstem', '2012-02-04', '2013-08-12', 'This user lives in New York. This user is disabled in the system.', '2013-08-16 16:17:00', '2013-08-16 16:17:00')[0m
  [1m[35mFixture Insert (0.8ms)[0m  INSERT INTO "users" ("id", "first_name", "last_name", "nick_name", "login_name", "start_date", "end_date", "notes", "created_at", "updated_at") VALUES (4, 'Allison', 'Wilson', 'Alli', 'wilsona', '2012-03-04', NULL, 'Electrical engineer.', '2013-08-16 16:17:00', '2013-08-16 16:17:00')
  [1m[36mFixture Delete (1.1ms)[0m  [1mDELETE FROM "phones"[0m
  [1m[35mFixture Insert (1.3ms)[0m  INSERT INTO "phones" ("id", "number", "tag", "user_id", "created_at", "updated_at") VALUES (1, '(211) 234-1111', 'Office', 1, '2013-08-16 16:17:00', '2013-08-16 16:17:00')
  [1m[36mFixture Insert (0.9ms)[0m  [1mINSERT INTO "phones" ("id", "number", "tag", "user_id", "created_at", "updated_at") VALUES (2, '(222) 345-2222', 'Home', 1, '2013-08-16 16:17:00', '2013-08-16 16:17:00')[0m
  [1m[35mFixture Insert (0.7ms)[0m  INSERT INTO "phones" ("id", "number", "tag", "user_id", "created_at", "updated_at") VALUES (3, '(333) 456-3333', 'Mobile', 1, '2013-08-16 16:17:00', '2013-08-16 16:17:00')
  [1m[36mFixture Insert (0.7ms)[0m  [1mINSERT INTO "phones" ("id", "number", "tag", "user_id", "created_at", "updated_at") VALUES (4, '(444) 567-4444', 'Pager', 1, '2013-08-16 16:17:00', '2013-08-16 16:17:00')[0m
  [1m[35mFixture Insert (0.7ms)[0m  INSERT INTO "phones" ("id", "number", "tag", "user_id", "created_at", "updated_at") VALUES (5, '(555) 678-5555', 'Mobile', 1, '2013-08-16 16:17:00', '2013-08-16 16:17:00')
  [1m[36mFixture Insert (0.7ms)[0m  [1mINSERT INTO "phones" ("id", "number", "tag", "user_id", "created_at", "updated_at") VALUES (6, '(666) 789-6666', 'Mobile', 1, '2013-08-16 16:17:00', '2013-08-16 16:17:00')[0m
  [1m[35m (5.4ms)[0m  COMMIT
  [1m[36m (0.6ms)[0m  [1mALTER TABLE "phones" ENABLE TRIGGER ALL;ALTER TABLE "users" ENABLE TRIGGER ALL;ALTER TABLE "schema_migrations" ENABLE TRIGGER ALL[0m
  [1m[35m (0.4ms)[0m  BEGIN
----------------------------------------------------------
PhoneTest: test: A given phone should be initially valid. 
----------------------------------------------------------
  [1m[36mPhone Load (1.6ms)[0m  [1mSELECT "phones".* FROM "phones" ORDER BY "phones"."id" ASC LIMIT 1[0m
  [1m[35m (0.5ms)[0m  ROLLBACK
  [1m[36m (0.5ms)[0m  [1mBEGIN[0m
--------------------------------------------------------------
PhoneTest: test: A given phone should require a valid number. 
--------------------------------------------------------------
  [1m[35mPhone Load (1.0ms)[0m  SELECT "phones".* FROM "phones" ORDER BY "phones"."id" ASC LIMIT 1
  [1m[36m (0.4ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.4ms)[0m  BEGIN
----------------------------------------------
PhoneTest: test: Phone should belong to user. 
----------------------------------------------
  [1m[36m (0.4ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.4ms)[0m  BEGIN
------------------------------------------------------------------------------------------------
PhoneTest: test: Phone should ensure inclusion of tag in ["Home", "Office", "Mobile", "Pager"]. 
------------------------------------------------------------------------------------------------
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
------------------------------------------------------------------------
PhoneTest: test: Phone should ensure number has a length of at least 7. 
------------------------------------------------------------------------
  [1m[36m (0.4ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
------------------------------------------------------------------------
PhoneTest: test: Phone should ensure number has a length of at most 17. 
------------------------------------------------------------------------
  [1m[36m (0.5ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.4ms)[0m  BEGIN
--------------------------------------------------------
PhoneTest: test: Phone should require number to be set. 
--------------------------------------------------------
  [1m[36m (0.4ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
-----------------------------------------------------
PhoneTest: test: Phone should require tag to be set. 
-----------------------------------------------------
  [1m[36m (0.4ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
---------------------------------------------------------
PhoneTest: test: Phone should require user_id to be set. 
---------------------------------------------------------
  [1m[36m (0.5ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.4ms)[0m  BEGIN
--------------------------------------------------------
UserTest: test: A given user should be valid initially. 
--------------------------------------------------------
  [1m[36mUser Load (1.0ms)[0m  [1mSELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35mUser Exists (1.9ms)[0m  SELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
-----------------------------------------------------------------------
UserTest: test: A given user should not be valid if first name is nil. 
-----------------------------------------------------------------------
  [1m[36mUser Load (0.8ms)[0m  [1mSELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35mUser Exists (0.8ms)[0m  SELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1
  [1m[36m (0.5ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.4ms)[0m  BEGIN
----------------------------------------------------------------------------
UserTest: test: A given user should not be valid if first name is too long. 
----------------------------------------------------------------------------
  [1m[36mUser Load (0.8ms)[0m  [1mSELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
-----------------------------------------------------------------------------
UserTest: test: A given user should not be valid if first name is too short. 
-----------------------------------------------------------------------------
  [1m[36mUser Load (0.7ms)[0m  [1mSELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35mUser Exists (0.8ms)[0m  SELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1
  [1m[36m (0.4ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
------------------------------------------------------------------------------------------------
UserTest: test: A given user should not be valid if first name starts with a lower case letter. 
------------------------------------------------------------------------------------------------
  [1m[36mUser Load (0.9ms)[0m  [1mSELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35mUser Exists (0.8ms)[0m  SELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1
  [1m[36m (0.4ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
----------------------------------------------------------------------
UserTest: test: A given user should not be valid if last name is nil. 
----------------------------------------------------------------------
  [1m[36mUser Load (0.6ms)[0m  [1mSELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35mUser Exists (0.8ms)[0m  SELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.4ms)[0m  BEGIN
---------------------------------------------------------------------------
UserTest: test: A given user should not be valid if last name is too long. 
---------------------------------------------------------------------------
  [1m[36mUser Load (1.1ms)[0m  [1mSELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35mUser Exists (0.9ms)[0m  SELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1
  [1m[36m (0.4ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.4ms)[0m  BEGIN
----------------------------------------------------------------------------
UserTest: test: A given user should not be valid if last name is too short. 
----------------------------------------------------------------------------
  [1m[36mUser Load (1.0ms)[0m  [1mSELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35mUser Exists (1.0ms)[0m  SELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1
  [1m[36m (0.5ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.5ms)[0m  BEGIN
---------------------------------------------------------------------------------------------
UserTest: test: A given user should not be valid if login name has non-alphanumeric letters. 
---------------------------------------------------------------------------------------------
  [1m[36mUser Load (1.0ms)[0m  [1mSELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35mUser Exists (0.9ms)[0m  SELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'johns-276' AND "users"."id" != 1) LIMIT 1
  [1m[36m (0.4ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.5ms)[0m  BEGIN
-------------------------------------------------------------------------------
UserTest: test: A given user should not be valid if login name is a duplicate. 
-------------------------------------------------------------------------------
  [1m[36mUser Load (1.2ms)[0m  [1mSELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35m (0.5ms)[0m  SAVEPOINT active_record_1
  [1m[36mUser Exists (1.0ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'orstedma' LIMIT 1[0m
  [1m[35m (0.4ms)[0m  ROLLBACK TO SAVEPOINT active_record_1
  [1m[36mUser Exists (1.0ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'orstedma' LIMIT 1[0m
  [1m[35m (0.4ms)[0m  ROLLBACK
  [1m[36m (0.4ms)[0m  [1mBEGIN[0m
-----------------------------------------------------------------------
UserTest: test: A given user should not be valid if login name is nil. 
-----------------------------------------------------------------------
  [1m[35mUser Load (0.8ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (0.9ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" IS NULL AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.5ms)[0m  ROLLBACK
  [1m[36m (0.5ms)[0m  [1mBEGIN[0m
----------------------------------------------------------------------------
UserTest: test: A given user should not be valid if login name is too long. 
----------------------------------------------------------------------------
  [1m[35mUser Load (1.1ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (1.0ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'abbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.5ms)[0m  ROLLBACK
  [1m[36m (0.5ms)[0m  [1mBEGIN[0m
-----------------------------------------------------------------------------
UserTest: test: A given user should not be valid if login name is too short. 
-----------------------------------------------------------------------------
  [1m[35mUser Load (1.1ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (1.0ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'aaaaa' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.5ms)[0m  ROLLBACK
  [1m[36m (0.5ms)[0m  [1mBEGIN[0m
---------------------------------------------------------------------------------------------
UserTest: test: A given user should not be valid if login name starts with a capital letter. 
---------------------------------------------------------------------------------------------
  [1m[35mUser Load (1.1ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (1.0ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'Johns276' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.5ms)[0m  ROLLBACK
  [1m[36m (0.5ms)[0m  [1mBEGIN[0m
------------------------------------------------------------------------------------
UserTest: test: A given user should require a start date if an end date is present. 
------------------------------------------------------------------------------------
  [1m[35mUser Load (1.1ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (1.0ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.4ms)[0m  ROLLBACK
  [1m[36m (0.5ms)[0m  [1mBEGIN[0m
--------------------------------------------------------------------------------
UserTest: test: A given user should require an end date on or after start date. 
--------------------------------------------------------------------------------
  [1m[35mUser Load (0.9ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (0.9ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.5ms)[0m  ROLLBACK
  [1m[36m (0.4ms)[0m  [1mBEGIN[0m
---------------------------------------------------------------------
UserTest: test: User should allow first_name to be set to "Charles". 
---------------------------------------------------------------------
  [1m[35mUser Exists (0.8ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.6ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35m (0.3ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
--------------------------------------------------------------------------
UserTest: test: User should ensure first_name has a length of at least 2. 
--------------------------------------------------------------------------
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.8ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.5ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
---------------------------------------------------------------------------
UserTest: test: User should ensure first_name has a length of at most 254. 
---------------------------------------------------------------------------
  [1m[36mUser Exists (0.8ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.6ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.6ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35m (0.3ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
-------------------------------------------------------------------------
UserTest: test: User should ensure last_name has a length of at least 2. 
-------------------------------------------------------------------------
  [1m[35mUser Exists (0.8ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.5ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
--------------------------------------------------------------------------
UserTest: test: User should ensure last_name has a length of at most 254. 
--------------------------------------------------------------------------
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.6ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.6ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.6ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35m (0.4ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
--------------------------------------------------------------------------
UserTest: test: User should ensure login_name has a length of at least 6. 
--------------------------------------------------------------------------
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxx' LIMIT 1
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxx' LIMIT 1[0m
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxx' LIMIT 1
  [1m[36mUser Exists (0.8ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxx' LIMIT 1[0m
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxx' LIMIT 1
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
---------------------------------------------------------------------------
UserTest: test: User should ensure login_name has a length of at most 254. 
---------------------------------------------------------------------------
  [1m[36mUser Exists (0.8ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' LIMIT 1[0m
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' LIMIT 1
  [1m[36mUser Exists (0.5ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' LIMIT 1[0m
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' LIMIT 1
  [1m[36mUser Exists (0.8ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' LIMIT 1[0m
  [1m[35m (0.3ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
----------------------------------------------
UserTest: test: User should have many phones. 
----------------------------------------------
  [1m[35m (0.4ms)[0m  ROLLBACK
  [1m[36m (0.4ms)[0m  [1mBEGIN[0m
-------------------------------------------------------------------------
UserTest: test: User should not allow first_name to be set to "charles". 
-------------------------------------------------------------------------
  [1m[35mUser Exists (0.5ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (5.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35m (0.3ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
--------------------------------------------------------------------------------
UserTest: test: User should require case sensitive unique value for login_name. 
--------------------------------------------------------------------------------
  [1m[35mUser Load (0.8ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'orstedma' LIMIT 1[0m
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'orstedma' LIMIT 1
  [1m[36m (0.4ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
----------------------------------------------------------
UserTest: test: User should require first_name to be set. 
----------------------------------------------------------
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.6ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
---------------------------------------------------------
UserTest: test: User should require last_name to be set. 
---------------------------------------------------------
  [1m[36mUser Exists (0.6ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.8ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.2ms)[0m  BEGIN
----------------------------------------------------------
UserTest: test: User should require login_name to be set. 
----------------------------------------------------------
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.2ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.2ms)[0m  BEGIN
----------------------------------------------------------
UserTest: test: User should require start_date to be set. 
----------------------------------------------------------
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.5ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[36m (218.2ms)[0m  [1mDROP DATABASE IF EXISTS "ritrack_test"[0m
  [1m[35m (766.1ms)[0m  CREATE DATABASE "ritrack_test" ENCODING = 'unicode'
  [1m[36mSQL (48.8ms)[0m  [1mCREATE EXTENSION IF NOT EXISTS "plpgsql"[0m
  [1m[35m (83.3ms)[0m  CREATE TABLE "phones" ("id" serial primary key, "number" character varying(255), "tag" character varying(255), "user_id" integer, "created_at" timestamp, "updated_at" timestamp) 
  [1m[36m (41.4ms)[0m  [1mCREATE INDEX "index_phones_on_number" ON "phones" USING btree ("number")[0m
  [1m[35m (42.7ms)[0m  CREATE INDEX "index_phones_on_user_id" ON "phones" USING btree ("user_id")
  [1m[36m (80.1ms)[0m  [1mCREATE TABLE "users" ("id" serial primary key, "first_name" character varying(255), "last_name" character varying(255), "nick_name" character varying(255), "login_name" character varying(255), "notes" text, "created_at" timestamp, "updated_at" timestamp, "start_date" date, "end_date" date) [0m
  [1m[35m (10.8ms)[0m  CREATE TABLE "schema_migrations" ("version" character varying(255) NOT NULL) 
  [1m[36m (37.9ms)[0m  [1mCREATE UNIQUE INDEX "unique_schema_migrations" ON "schema_migrations" ("version")[0m
  [1m[35m (1.0ms)[0m  SELECT version FROM "schema_migrations"
  [1m[36m (5.8ms)[0m  [1mINSERT INTO "schema_migrations" (version) VALUES ('20130816142047')[0m
  [1m[35m (7.9ms)[0m  INSERT INTO "schema_migrations" (version) VALUES ('20130811212425')
  [1m[36m (8.0ms)[0m  [1mINSERT INTO "schema_migrations" (version) VALUES ('20130811195620')[0m
  [1m[35m (7.9ms)[0m  INSERT INTO "schema_migrations" (version) VALUES ('20130811193133')
  [1m[36m (7.9ms)[0m  [1mINSERT INTO "schema_migrations" (version) VALUES ('20130811195557')[0m
  [1m[35mActiveRecord::SchemaMigration Load (1.1ms)[0m  SELECT "schema_migrations".* FROM "schema_migrations"
  [1m[36mActiveRecord::SchemaMigration Load (0.6ms)[0m  [1mSELECT "schema_migrations".* FROM "schema_migrations"[0m
  [1m[35m (1.3ms)[0m  ALTER TABLE "phones" DISABLE TRIGGER ALL;ALTER TABLE "users" DISABLE TRIGGER ALL;ALTER TABLE "schema_migrations" DISABLE TRIGGER ALL
  [1m[36m (0.6ms)[0m  [1mBEGIN[0m
  [1m[35mFixture Delete (1.1ms)[0m  DELETE FROM "users"
  [1m[36mFixture Insert (0.9ms)[0m  [1mINSERT INTO "users" ("id", "first_name", "last_name", "nick_name", "login_name", "start_date", "end_date", "notes", "created_at", "updated_at") VALUES (1, 'Michael', 'Orsted', 'Mike', 'orstedma', '2012-02-04', NULL, 'This user lives in Chicago.', '2013-08-16 16:17:28', '2013-08-16 16:17:28')[0m
  [1m[35mFixture Insert (1.0ms)[0m  INSERT INTO "users" ("id", "first_name", "last_name", "nick_name", "login_name", "start_date", "end_date", "notes", "created_at", "updated_at") VALUES (2, 'Frederick', 'Free-Loader', 'Frederick', 'freelofw', '2012-03-04', NULL, 'This user is completely useless', '2013-08-16 16:17:28', '2013-08-16 16:17:28')
  [1m[36mFixture Insert (0.8ms)[0m  [1mINSERT INTO "users" ("id", "first_name", "last_name", "nick_name", "login_name", "start_date", "end_date", "notes", "created_at", "updated_at") VALUES (3, 'Michael', 'Winstead', 'Mike', 'winstem', '2012-02-04', '2013-08-12', 'This user lives in New York. This user is disabled in the system.', '2013-08-16 16:17:28', '2013-08-16 16:17:28')[0m
  [1m[35mFixture Insert (0.8ms)[0m  INSERT INTO "users" ("id", "first_name", "last_name", "nick_name", "login_name", "start_date", "end_date", "notes", "created_at", "updated_at") VALUES (4, 'Allison', 'Wilson', 'Alli', 'wilsona', '2012-03-04', NULL, 'Electrical engineer.', '2013-08-16 16:17:28', '2013-08-16 16:17:28')
  [1m[36mFixture Delete (1.1ms)[0m  [1mDELETE FROM "phones"[0m
  [1m[35mFixture Insert (1.3ms)[0m  INSERT INTO "phones" ("id", "number", "tag", "user_id", "created_at", "updated_at") VALUES (1, '(211) 234-1111', 'Office', 1, '2013-08-16 16:17:28', '2013-08-16 16:17:28')
  [1m[36mFixture Insert (0.9ms)[0m  [1mINSERT INTO "phones" ("id", "number", "tag", "user_id", "created_at", "updated_at") VALUES (2, '(222) 345-2222', 'Home', 1, '2013-08-16 16:17:28', '2013-08-16 16:17:28')[0m
  [1m[35mFixture Insert (0.8ms)[0m  INSERT INTO "phones" ("id", "number", "tag", "user_id", "created_at", "updated_at") VALUES (3, '(333) 456-3333', 'Mobile', 1, '2013-08-16 16:17:28', '2013-08-16 16:17:28')
  [1m[36mFixture Insert (0.7ms)[0m  [1mINSERT INTO "phones" ("id", "number", "tag", "user_id", "created_at", "updated_at") VALUES (4, '(444) 567-4444', 'Pager', 1, '2013-08-16 16:17:28', '2013-08-16 16:17:28')[0m
  [1m[35mFixture Insert (0.8ms)[0m  INSERT INTO "phones" ("id", "number", "tag", "user_id", "created_at", "updated_at") VALUES (5, '(555) 678-5555', 'Mobile', 1, '2013-08-16 16:17:28', '2013-08-16 16:17:28')
  [1m[36mFixture Insert (0.7ms)[0m  [1mINSERT INTO "phones" ("id", "number", "tag", "user_id", "created_at", "updated_at") VALUES (6, '(666) 789-6666', 'Mobile', 1, '2013-08-16 16:17:28', '2013-08-16 16:17:28')[0m
  [1m[35m (2.8ms)[0m  COMMIT
  [1m[36m (0.7ms)[0m  [1mALTER TABLE "phones" ENABLE TRIGGER ALL;ALTER TABLE "users" ENABLE TRIGGER ALL;ALTER TABLE "schema_migrations" ENABLE TRIGGER ALL[0m
  [1m[35m (0.5ms)[0m  BEGIN
----------------------------------------------------------
PhoneTest: test: A given phone should be initially valid. 
----------------------------------------------------------
  [1m[36mPhone Load (1.8ms)[0m  [1mSELECT "phones".* FROM "phones" ORDER BY "phones"."id" ASC LIMIT 1[0m
  [1m[35m (0.5ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
--------------------------------------------------------------
PhoneTest: test: A given phone should require a valid number. 
--------------------------------------------------------------
  [1m[35mPhone Load (1.0ms)[0m  SELECT "phones".* FROM "phones" ORDER BY "phones"."id" ASC LIMIT 1
  [1m[36m (0.5ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.4ms)[0m  BEGIN
----------------------------------------------
PhoneTest: test: Phone should belong to user. 
----------------------------------------------
  [1m[36m (0.4ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
------------------------------------------------------------------------------------------------
PhoneTest: test: Phone should ensure inclusion of tag in ["Home", "Office", "Mobile", "Pager"]. 
------------------------------------------------------------------------------------------------
  [1m[36m (0.5ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.4ms)[0m  BEGIN
------------------------------------------------------------------------
PhoneTest: test: Phone should ensure number has a length of at least 7. 
------------------------------------------------------------------------
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.4ms)[0m  BEGIN
------------------------------------------------------------------------
PhoneTest: test: Phone should ensure number has a length of at most 17. 
------------------------------------------------------------------------
  [1m[36m (0.4ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.4ms)[0m  BEGIN
--------------------------------------------------------
PhoneTest: test: Phone should require number to be set. 
--------------------------------------------------------
  [1m[36m (0.4ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
-----------------------------------------------------
PhoneTest: test: Phone should require tag to be set. 
-----------------------------------------------------
  [1m[36m (0.4ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
---------------------------------------------------------
PhoneTest: test: Phone should require user_id to be set. 
---------------------------------------------------------
  [1m[36m (0.4ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
--------------------------------------------------------
UserTest: test: A given user should be valid initially. 
--------------------------------------------------------
  [1m[36mUser Load (1.0ms)[0m  [1mSELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35mUser Exists (1.1ms)[0m  SELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1
  [1m[36m (0.6ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
-----------------------------------------------------------------------
UserTest: test: A given user should not be valid if first name is nil. 
-----------------------------------------------------------------------
  [1m[36mUser Load (0.7ms)[0m  [1mSELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35mUser Exists (0.8ms)[0m  SELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1
  [1m[36m (0.4ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
----------------------------------------------------------------------------
UserTest: test: A given user should not be valid if first name is too long. 
----------------------------------------------------------------------------
  [1m[36mUser Load (1.1ms)[0m  [1mSELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35mUser Exists (1.0ms)[0m  SELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1
  [1m[36m (0.4ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
-----------------------------------------------------------------------------
UserTest: test: A given user should not be valid if first name is too short. 
-----------------------------------------------------------------------------
  [1m[36mUser Load (0.8ms)[0m  [1mSELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
------------------------------------------------------------------------------------------------
UserTest: test: A given user should not be valid if first name starts with a lower case letter. 
------------------------------------------------------------------------------------------------
  [1m[36mUser Load (0.8ms)[0m  [1mSELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
----------------------------------------------------------------------
UserTest: test: A given user should not be valid if last name is nil. 
----------------------------------------------------------------------
  [1m[36mUser Load (0.8ms)[0m  [1mSELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35mUser Exists (0.9ms)[0m  SELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1
  [1m[36m (0.4ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.4ms)[0m  BEGIN
---------------------------------------------------------------------------
UserTest: test: A given user should not be valid if last name is too long. 
---------------------------------------------------------------------------
  [1m[36mUser Load (0.9ms)[0m  [1mSELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35mUser Exists (0.9ms)[0m  SELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1
  [1m[36m (0.5ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.4ms)[0m  BEGIN
----------------------------------------------------------------------------
UserTest: test: A given user should not be valid if last name is too short. 
----------------------------------------------------------------------------
  [1m[36mUser Load (0.9ms)[0m  [1mSELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35mUser Exists (1.0ms)[0m  SELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1
  [1m[36m (0.4ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
---------------------------------------------------------------------------------------------
UserTest: test: A given user should not be valid if login name has non-alphanumeric letters. 
---------------------------------------------------------------------------------------------
  [1m[36mUser Load (1.0ms)[0m  [1mSELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35mUser Exists (0.9ms)[0m  SELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'johns-276' AND "users"."id" != 1) LIMIT 1
  [1m[36m (0.5ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.5ms)[0m  BEGIN
-------------------------------------------------------------------------------
UserTest: test: A given user should not be valid if login name is a duplicate. 
-------------------------------------------------------------------------------
  [1m[36mUser Load (1.1ms)[0m  [1mSELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35m (0.5ms)[0m  SAVEPOINT active_record_1
  [1m[36mUser Exists (0.8ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'orstedma' LIMIT 1[0m
  [1m[35m (0.5ms)[0m  ROLLBACK TO SAVEPOINT active_record_1
  [1m[36mUser Exists (0.8ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'orstedma' LIMIT 1[0m
  [1m[35m (0.4ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
-----------------------------------------------------------------------
UserTest: test: A given user should not be valid if login name is nil. 
-----------------------------------------------------------------------
  [1m[35mUser Load (0.9ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (0.9ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" IS NULL AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.5ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
----------------------------------------------------------------------------
UserTest: test: A given user should not be valid if login name is too long. 
----------------------------------------------------------------------------
  [1m[35mUser Load (0.8ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (0.8ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'abbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.3ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
-----------------------------------------------------------------------------
UserTest: test: A given user should not be valid if login name is too short. 
-----------------------------------------------------------------------------
  [1m[35mUser Load (0.8ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'aaaaa' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.3ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
---------------------------------------------------------------------------------------------
UserTest: test: A given user should not be valid if login name starts with a capital letter. 
---------------------------------------------------------------------------------------------
  [1m[35mUser Load (0.9ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (0.8ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'Johns276' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.3ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
------------------------------------------------------------------------------------
UserTest: test: A given user should require a start date if an end date is present. 
------------------------------------------------------------------------------------
  [1m[35mUser Load (1.0ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (0.6ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.5ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
--------------------------------------------------------------------------------
UserTest: test: A given user should require an end date on or after start date. 
--------------------------------------------------------------------------------
  [1m[35mUser Load (1.0ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (0.8ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.5ms)[0m  ROLLBACK
  [1m[36m (0.4ms)[0m  [1mBEGIN[0m
---------------------------------------------------------------------
UserTest: test: User should allow first_name to be set to "Charles". 
---------------------------------------------------------------------
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35m (0.5ms)[0m  ROLLBACK
  [1m[36m (0.4ms)[0m  [1mBEGIN[0m
--------------------------------------------------------------------------
UserTest: test: User should ensure first_name has a length of at least 2. 
--------------------------------------------------------------------------
  [1m[35mUser Exists (0.9ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.6ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.2ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.2ms)[0m  BEGIN
---------------------------------------------------------------------------
UserTest: test: User should ensure first_name has a length of at most 254. 
---------------------------------------------------------------------------
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.6ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.6ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.6ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.9ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35m (0.2ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
-------------------------------------------------------------------------
UserTest: test: User should ensure last_name has a length of at least 2. 
-------------------------------------------------------------------------
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.6ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.6ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.6ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
--------------------------------------------------------------------------
UserTest: test: User should ensure last_name has a length of at most 254. 
--------------------------------------------------------------------------
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.8ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.6ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.6ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35m (0.3ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
--------------------------------------------------------------------------
UserTest: test: User should ensure login_name has a length of at least 6. 
--------------------------------------------------------------------------
  [1m[35mUser Exists (0.9ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxx' LIMIT 1
  [1m[36mUser Exists (0.6ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxx' LIMIT 1[0m
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxx' LIMIT 1
  [1m[36mUser Exists (0.5ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxx' LIMIT 1[0m
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxx' LIMIT 1
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.2ms)[0m  BEGIN
---------------------------------------------------------------------------
UserTest: test: User should ensure login_name has a length of at most 254. 
---------------------------------------------------------------------------
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' LIMIT 1[0m
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' LIMIT 1
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' LIMIT 1[0m
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' LIMIT 1
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' LIMIT 1[0m
  [1m[35m (0.3ms)[0m  ROLLBACK
  [1m[36m (0.4ms)[0m  [1mBEGIN[0m
----------------------------------------------
UserTest: test: User should have many phones. 
----------------------------------------------
  [1m[35m (0.4ms)[0m  ROLLBACK
  [1m[36m (0.4ms)[0m  [1mBEGIN[0m
-------------------------------------------------------------------------
UserTest: test: User should not allow first_name to be set to "charles". 
-------------------------------------------------------------------------
  [1m[35mUser Exists (0.9ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (9.1ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35m (0.3ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
--------------------------------------------------------------------------------
UserTest: test: User should require case sensitive unique value for login_name. 
--------------------------------------------------------------------------------
  [1m[35mUser Load (0.9ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'orstedma' LIMIT 1[0m
  [1m[35mUser Exists (0.8ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'orstedma' LIMIT 1
  [1m[36m (0.4ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
----------------------------------------------------------
UserTest: test: User should require first_name to be set. 
----------------------------------------------------------
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.4ms)[0m  BEGIN
---------------------------------------------------------
UserTest: test: User should require last_name to be set. 
---------------------------------------------------------
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.6ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.4ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.4ms)[0m  BEGIN
----------------------------------------------------------
UserTest: test: User should require login_name to be set. 
----------------------------------------------------------
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.6ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.2ms)[0m  BEGIN
----------------------------------------------------------
UserTest: test: User should require start_date to be set. 
----------------------------------------------------------
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.4ms)[0m  [1mROLLBACK[0m
  [1m[36m (220.7ms)[0m  [1mDROP DATABASE IF EXISTS "ritrack_test"[0m
  [1m[35m (682.6ms)[0m  CREATE DATABASE "ritrack_test" ENCODING = 'unicode'
  [1m[36mSQL (44.5ms)[0m  [1mCREATE EXTENSION IF NOT EXISTS "plpgsql"[0m
  [1m[35m (95.6ms)[0m  CREATE TABLE "phones" ("id" serial primary key, "number" character varying(255), "tag" character varying(255), "user_id" integer, "created_at" timestamp, "updated_at" timestamp) 
  [1m[36m (49.7ms)[0m  [1mCREATE INDEX "index_phones_on_number" ON "phones" USING btree ("number")[0m
  [1m[35m (45.0ms)[0m  CREATE INDEX "index_phones_on_user_id" ON "phones" USING btree ("user_id")
  [1m[36m (97.6ms)[0m  [1mCREATE TABLE "users" ("id" serial primary key, "first_name" character varying(255), "last_name" character varying(255), "nick_name" character varying(255), "login_name" character varying(255), "notes" text, "created_at" timestamp, "updated_at" timestamp, "start_date" date, "end_date" date) [0m
  [1m[35m (10.9ms)[0m  CREATE TABLE "schema_migrations" ("version" character varying(255) NOT NULL) 
  [1m[36m (54.3ms)[0m  [1mCREATE UNIQUE INDEX "unique_schema_migrations" ON "schema_migrations" ("version")[0m
  [1m[35m (1.0ms)[0m  SELECT version FROM "schema_migrations"
  [1m[36m (5.8ms)[0m  [1mINSERT INTO "schema_migrations" (version) VALUES ('20130816142047')[0m
  [1m[35m (8.0ms)[0m  INSERT INTO "schema_migrations" (version) VALUES ('20130811212425')
  [1m[36m (7.9ms)[0m  [1mINSERT INTO "schema_migrations" (version) VALUES ('20130811195620')[0m
  [1m[35m (7.9ms)[0m  INSERT INTO "schema_migrations" (version) VALUES ('20130811193133')
  [1m[36m (8.0ms)[0m  [1mINSERT INTO "schema_migrations" (version) VALUES ('20130811195557')[0m
  [1m[35mActiveRecord::SchemaMigration Load (1.1ms)[0m  SELECT "schema_migrations".* FROM "schema_migrations"
  [1m[36mActiveRecord::SchemaMigration Load (0.5ms)[0m  [1mSELECT "schema_migrations".* FROM "schema_migrations"[0m
  [1m[35m (1.1ms)[0m  ALTER TABLE "phones" DISABLE TRIGGER ALL;ALTER TABLE "users" DISABLE TRIGGER ALL;ALTER TABLE "schema_migrations" DISABLE TRIGGER ALL
  [1m[36m (0.4ms)[0m  [1mBEGIN[0m
  [1m[35mFixture Delete (1.0ms)[0m  DELETE FROM "users"
  [1m[36mFixture Insert (1.2ms)[0m  [1mINSERT INTO "users" ("id", "first_name", "last_name", "nick_name", "login_name", "start_date", "end_date", "notes", "created_at", "updated_at") VALUES (1, 'Michael', 'Orsted', 'Mike', 'orstedma', '2012-02-04', NULL, 'This user lives in Chicago.', '2013-08-16 16:18:28', '2013-08-16 16:18:28')[0m
  [1m[35mFixture Insert (0.8ms)[0m  INSERT INTO "users" ("id", "first_name", "last_name", "nick_name", "login_name", "start_date", "end_date", "notes", "created_at", "updated_at") VALUES (2, 'Frederick', 'Free-Loader', 'Frederick', 'freelofw', '2012-03-04', NULL, 'This user is completely useless', '2013-08-16 16:18:28', '2013-08-16 16:18:28')
  [1m[36mFixture Insert (0.7ms)[0m  [1mINSERT INTO "users" ("id", "first_name", "last_name", "nick_name", "login_name", "start_date", "end_date", "notes", "created_at", "updated_at") VALUES (3, 'Michael', 'Winstead', 'Mike', 'winstem', '2012-02-04', '2013-08-12', 'This user lives in New York. This user is disabled in the system.', '2013-08-16 16:18:28', '2013-08-16 16:18:28')[0m
  [1m[35mFixture Insert (0.7ms)[0m  INSERT INTO "users" ("id", "first_name", "last_name", "nick_name", "login_name", "start_date", "end_date", "notes", "created_at", "updated_at") VALUES (4, 'Allison', 'Wilson', 'Alli', 'wilsona', '2012-03-04', NULL, 'Electrical engineer.', '2013-08-16 16:18:28', '2013-08-16 16:18:28')
  [1m[36mFixture Delete (1.1ms)[0m  [1mDELETE FROM "phones"[0m
  [1m[35mFixture Insert (1.2ms)[0m  INSERT INTO "phones" ("id", "number", "tag", "user_id", "created_at", "updated_at") VALUES (1, '(211) 234-1111', 'Office', 1, '2013-08-16 16:18:28', '2013-08-16 16:18:28')
  [1m[36mFixture Insert (0.9ms)[0m  [1mINSERT INTO "phones" ("id", "number", "tag", "user_id", "created_at", "updated_at") VALUES (2, '(222) 345-2222', 'Home', 1, '2013-08-16 16:18:28', '2013-08-16 16:18:28')[0m
  [1m[35mFixture Insert (0.7ms)[0m  INSERT INTO "phones" ("id", "number", "tag", "user_id", "created_at", "updated_at") VALUES (3, '(333) 456-3333', 'Mobile', 1, '2013-08-16 16:18:28', '2013-08-16 16:18:28')
  [1m[36mFixture Insert (0.7ms)[0m  [1mINSERT INTO "phones" ("id", "number", "tag", "user_id", "created_at", "updated_at") VALUES (4, '(444) 567-4444', 'Pager', 1, '2013-08-16 16:18:28', '2013-08-16 16:18:28')[0m
  [1m[35mFixture Insert (0.7ms)[0m  INSERT INTO "phones" ("id", "number", "tag", "user_id", "created_at", "updated_at") VALUES (5, '(555) 678-5555', 'Mobile', 1, '2013-08-16 16:18:28', '2013-08-16 16:18:28')
  [1m[36mFixture Insert (0.7ms)[0m  [1mINSERT INTO "phones" ("id", "number", "tag", "user_id", "created_at", "updated_at") VALUES (6, '(666) 789-6666', 'Mobile', 1, '2013-08-16 16:18:28', '2013-08-16 16:18:28')[0m
  [1m[35m (4.7ms)[0m  COMMIT
  [1m[36m (0.7ms)[0m  [1mALTER TABLE "phones" ENABLE TRIGGER ALL;ALTER TABLE "users" ENABLE TRIGGER ALL;ALTER TABLE "schema_migrations" ENABLE TRIGGER ALL[0m
  [1m[35m (0.3ms)[0m  BEGIN
----------------------------------------------------------
PhoneTest: test: A given phone should be initially valid. 
----------------------------------------------------------
  [1m[36mPhone Load (1.7ms)[0m  [1mSELECT "phones".* FROM "phones" ORDER BY "phones"."id" ASC LIMIT 1[0m
  [1m[35m (0.3ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
--------------------------------------------------------------
PhoneTest: test: A given phone should require a valid number. 
--------------------------------------------------------------
  [1m[35mPhone Load (0.8ms)[0m  SELECT "phones".* FROM "phones" ORDER BY "phones"."id" ASC LIMIT 1
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
----------------------------------------------
PhoneTest: test: Phone should belong to user. 
----------------------------------------------
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
------------------------------------------------------------------------------------------------
PhoneTest: test: Phone should ensure inclusion of tag in ["Home", "Office", "Mobile", "Pager"]. 
------------------------------------------------------------------------------------------------
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
------------------------------------------------------------------------
PhoneTest: test: Phone should ensure number has a length of at least 7. 
------------------------------------------------------------------------
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
------------------------------------------------------------------------
PhoneTest: test: Phone should ensure number has a length of at most 17. 
------------------------------------------------------------------------
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
--------------------------------------------------------
PhoneTest: test: Phone should require number to be set. 
--------------------------------------------------------
  [1m[36m (0.2ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.2ms)[0m  BEGIN
-----------------------------------------------------
PhoneTest: test: Phone should require tag to be set. 
-----------------------------------------------------
  [1m[36m (0.4ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
---------------------------------------------------------
PhoneTest: test: Phone should require user_id to be set. 
---------------------------------------------------------
  [1m[36m (0.2ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.2ms)[0m  BEGIN
--------------------------------------------------------
UserTest: test: A given user should be valid initially. 
--------------------------------------------------------
  [1m[36mUser Load (0.6ms)[0m  [1mSELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35mUser Exists (1.9ms)[0m  SELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1
  [1m[36m (0.4ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
-----------------------------------------------------------------------
UserTest: test: A given user should not be valid if first name is nil. 
-----------------------------------------------------------------------
  [1m[36mUser Load (0.8ms)[0m  [1mSELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35mUser Exists (0.8ms)[0m  SELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
----------------------------------------------------------------------------
UserTest: test: A given user should not be valid if first name is too long. 
----------------------------------------------------------------------------
  [1m[36mUser Load (0.9ms)[0m  [1mSELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35mUser Exists (0.8ms)[0m  SELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1
  [1m[36m (0.4ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.4ms)[0m  BEGIN
-----------------------------------------------------------------------------
UserTest: test: A given user should not be valid if first name is too short. 
-----------------------------------------------------------------------------
  [1m[36mUser Load (1.0ms)[0m  [1mSELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35mUser Exists (0.9ms)[0m  SELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1
  [1m[36m (0.5ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
------------------------------------------------------------------------------------------------
UserTest: test: A given user should not be valid if first name starts with a lower case letter. 
------------------------------------------------------------------------------------------------
  [1m[36mUser Load (1.1ms)[0m  [1mSELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35mUser Exists (0.9ms)[0m  SELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1
  [1m[36m (0.4ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.4ms)[0m  BEGIN
----------------------------------------------------------------------
UserTest: test: A given user should not be valid if last name is nil. 
----------------------------------------------------------------------
  [1m[36mUser Load (1.0ms)[0m  [1mSELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35mUser Exists (0.8ms)[0m  SELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1
  [1m[36m (0.2ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
---------------------------------------------------------------------------
UserTest: test: A given user should not be valid if last name is too long. 
---------------------------------------------------------------------------
  [1m[36mUser Load (0.7ms)[0m  [1mSELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35mUser Exists (0.8ms)[0m  SELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1
  [1m[36m (0.5ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.5ms)[0m  BEGIN
----------------------------------------------------------------------------
UserTest: test: A given user should not be valid if last name is too short. 
----------------------------------------------------------------------------
  [1m[36mUser Load (1.2ms)[0m  [1mSELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35mUser Exists (0.9ms)[0m  SELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1
  [1m[36m (0.4ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.4ms)[0m  BEGIN
---------------------------------------------------------------------------------------------
UserTest: test: A given user should not be valid if login name has non-alphanumeric letters. 
---------------------------------------------------------------------------------------------
  [1m[36mUser Load (1.1ms)[0m  [1mSELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35mUser Exists (1.1ms)[0m  SELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'johns-276' AND "users"."id" != 1) LIMIT 1
  [1m[36m (0.5ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.5ms)[0m  BEGIN
-------------------------------------------------------------------------------
UserTest: test: A given user should not be valid if login name is a duplicate. 
-------------------------------------------------------------------------------
  [1m[36mUser Load (1.0ms)[0m  [1mSELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35m (0.5ms)[0m  SAVEPOINT active_record_1
  [1m[36mUser Exists (1.0ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'orstedma' LIMIT 1[0m
  [1m[35m (0.5ms)[0m  ROLLBACK TO SAVEPOINT active_record_1
  [1m[36mUser Exists (1.0ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'orstedma' LIMIT 1[0m
  [1m[35m (0.5ms)[0m  ROLLBACK
  [1m[36m (0.4ms)[0m  [1mBEGIN[0m
-----------------------------------------------------------------------
UserTest: test: A given user should not be valid if login name is nil. 
-----------------------------------------------------------------------
  [1m[35mUser Load (1.1ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (1.0ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" IS NULL AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.5ms)[0m  ROLLBACK
  [1m[36m (0.4ms)[0m  [1mBEGIN[0m
----------------------------------------------------------------------------
UserTest: test: A given user should not be valid if login name is too long. 
----------------------------------------------------------------------------
  [1m[35mUser Load (0.9ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (1.0ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'abbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.4ms)[0m  ROLLBACK
  [1m[36m (0.4ms)[0m  [1mBEGIN[0m
-----------------------------------------------------------------------------
UserTest: test: A given user should not be valid if login name is too short. 
-----------------------------------------------------------------------------
  [1m[35mUser Load (1.1ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'aaaaa' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.4ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
---------------------------------------------------------------------------------------------
UserTest: test: A given user should not be valid if login name starts with a capital letter. 
---------------------------------------------------------------------------------------------
  [1m[35mUser Load (0.6ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (0.9ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'Johns276' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.4ms)[0m  ROLLBACK
  [1m[36m (0.5ms)[0m  [1mBEGIN[0m
------------------------------------------------------------------------------------
UserTest: test: A given user should require a start date if an end date is present. 
------------------------------------------------------------------------------------
  [1m[35mUser Load (0.8ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (0.9ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.5ms)[0m  ROLLBACK
  [1m[36m (0.5ms)[0m  [1mBEGIN[0m
--------------------------------------------------------------------------------
UserTest: test: A given user should require an end date on or after start date. 
--------------------------------------------------------------------------------
  [1m[35mUser Load (1.0ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (1.0ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.6ms)[0m  ROLLBACK
  [1m[36m (0.4ms)[0m  [1mBEGIN[0m
---------------------------------------------------------------------
UserTest: test: User should allow first_name to be set to "Charles". 
---------------------------------------------------------------------
  [1m[35mUser Exists (0.9ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35m (0.4ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
--------------------------------------------------------------------------
UserTest: test: User should ensure first_name has a length of at least 2. 
--------------------------------------------------------------------------
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.5ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.5ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.6ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.4ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.4ms)[0m  BEGIN
---------------------------------------------------------------------------
UserTest: test: User should ensure first_name has a length of at most 254. 
---------------------------------------------------------------------------
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.5ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35m (0.3ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
-------------------------------------------------------------------------
UserTest: test: User should ensure last_name has a length of at least 2. 
-------------------------------------------------------------------------
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.6ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.6ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.4ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
--------------------------------------------------------------------------
UserTest: test: User should ensure last_name has a length of at most 254. 
--------------------------------------------------------------------------
  [1m[36mUser Exists (0.6ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.5ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35m (0.3ms)[0m  ROLLBACK
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
--------------------------------------------------------------------------
UserTest: test: User should ensure login_name has a length of at least 6. 
--------------------------------------------------------------------------
  [1m[35mUser Exists (0.6ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxx' LIMIT 1
  [1m[36mUser Exists (0.8ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxx' LIMIT 1[0m
  [1m[35mUser Exists (0.5ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxx' LIMIT 1
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxx' LIMIT 1[0m
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxx' LIMIT 1
  [1m[36m (0.6ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.2ms)[0m  BEGIN
---------------------------------------------------------------------------
UserTest: test: User should ensure login_name has a length of at most 254. 
---------------------------------------------------------------------------
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' LIMIT 1[0m
  [1m[35mUser Exists (0.9ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' LIMIT 1
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' LIMIT 1[0m
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' LIMIT 1
  [1m[36mUser Exists (0.8ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' LIMIT 1[0m
  [1m[35m (0.3ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
----------------------------------------------
UserTest: test: User should have many phones. 
----------------------------------------------
  [1m[35m (0.3ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
-------------------------------------------------------------------------
UserTest: test: User should not allow first_name to be set to "charles". 
-------------------------------------------------------------------------
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (5.3ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35m (0.5ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
--------------------------------------------------------------------------------
UserTest: test: User should require case sensitive unique value for login_name. 
--------------------------------------------------------------------------------
  [1m[35mUser Load (0.8ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (0.5ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'orstedma' LIMIT 1[0m
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'orstedma' LIMIT 1
  [1m[36m (0.5ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.4ms)[0m  BEGIN
----------------------------------------------------------
UserTest: test: User should require first_name to be set. 
----------------------------------------------------------
  [1m[36mUser Exists (0.8ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
---------------------------------------------------------
UserTest: test: User should require last_name to be set. 
---------------------------------------------------------
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.4ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
----------------------------------------------------------
UserTest: test: User should require login_name to be set. 
----------------------------------------------------------
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.6ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
----------------------------------------------------------
UserTest: test: User should require start_date to be set. 
----------------------------------------------------------
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.6ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[36m (219.4ms)[0m  [1mDROP DATABASE IF EXISTS "ritrack_test"[0m
  [1m[35m (749.7ms)[0m  CREATE DATABASE "ritrack_test" ENCODING = 'unicode'
  [1m[36mSQL (48.3ms)[0m  [1mCREATE EXTENSION IF NOT EXISTS "plpgsql"[0m
  [1m[35m (108.3ms)[0m  CREATE TABLE "phones" ("id" serial primary key, "number" character varying(255), "tag" character varying(255), "user_id" integer, "created_at" timestamp, "updated_at" timestamp) 
  [1m[36m (49.9ms)[0m  [1mCREATE INDEX "index_phones_on_number" ON "phones" USING btree ("number")[0m
  [1m[35m (44.9ms)[0m  CREATE INDEX "index_phones_on_user_id" ON "phones" USING btree ("user_id")
  [1m[36m (88.4ms)[0m  [1mCREATE TABLE "users" ("id" serial primary key, "first_name" character varying(255), "last_name" character varying(255), "nick_name" character varying(255), "login_name" character varying(255), "notes" text, "created_at" timestamp, "updated_at" timestamp, "start_date" date, "end_date" date) [0m
  [1m[35m (10.9ms)[0m  CREATE TABLE "schema_migrations" ("version" character varying(255) NOT NULL) 
  [1m[36m (46.1ms)[0m  [1mCREATE UNIQUE INDEX "unique_schema_migrations" ON "schema_migrations" ("version")[0m
  [1m[35m (1.0ms)[0m  SELECT version FROM "schema_migrations"
  [1m[36m (5.8ms)[0m  [1mINSERT INTO "schema_migrations" (version) VALUES ('20130816142047')[0m
  [1m[35m (8.0ms)[0m  INSERT INTO "schema_migrations" (version) VALUES ('20130811212425')
  [1m[36m (8.0ms)[0m  [1mINSERT INTO "schema_migrations" (version) VALUES ('20130811195620')[0m
  [1m[35m (7.9ms)[0m  INSERT INTO "schema_migrations" (version) VALUES ('20130811193133')
  [1m[36m (8.0ms)[0m  [1mINSERT INTO "schema_migrations" (version) VALUES ('20130811195557')[0m
  [1m[35mActiveRecord::SchemaMigration Load (1.2ms)[0m  SELECT "schema_migrations".* FROM "schema_migrations"
  [1m[36mActiveRecord::SchemaMigration Load (0.7ms)[0m  [1mSELECT "schema_migrations".* FROM "schema_migrations"[0m
  [1m[35m (1.3ms)[0m  ALTER TABLE "phones" DISABLE TRIGGER ALL;ALTER TABLE "users" DISABLE TRIGGER ALL;ALTER TABLE "schema_migrations" DISABLE TRIGGER ALL
  [1m[36m (0.4ms)[0m  [1mBEGIN[0m
  [1m[35mFixture Delete (1.1ms)[0m  DELETE FROM "users"
  [1m[36mFixture Insert (1.3ms)[0m  [1mINSERT INTO "users" ("id", "first_name", "last_name", "nick_name", "login_name", "start_date", "end_date", "notes", "created_at", "updated_at") VALUES (1, 'Michael', 'Orsted', 'Mike', 'orstedma', '2012-02-04', NULL, 'This user lives in Chicago.', '2013-08-16 16:22:14', '2013-08-16 16:22:14')[0m
  [1m[35mFixture Insert (0.8ms)[0m  INSERT INTO "users" ("id", "first_name", "last_name", "nick_name", "login_name", "start_date", "end_date", "notes", "created_at", "updated_at") VALUES (2, 'Frederick', 'Free-Loader', 'Frederick', 'freelofw', '2012-03-04', NULL, 'This user is completely useless', '2013-08-16 16:22:14', '2013-08-16 16:22:14')
  [1m[36mFixture Insert (0.8ms)[0m  [1mINSERT INTO "users" ("id", "first_name", "last_name", "nick_name", "login_name", "start_date", "end_date", "notes", "created_at", "updated_at") VALUES (3, 'Michael', 'Winstead', 'Mike', 'winstem', '2012-02-04', '2013-08-12', 'This user lives in New York. This user is disabled in the system.', '2013-08-16 16:22:14', '2013-08-16 16:22:14')[0m
  [1m[35mFixture Insert (0.8ms)[0m  INSERT INTO "users" ("id", "first_name", "last_name", "nick_name", "login_name", "start_date", "end_date", "notes", "created_at", "updated_at") VALUES (4, 'Allison', 'Wilson', 'Alli', 'wilsona', '2012-03-04', NULL, 'Electrical engineer.', '2013-08-16 16:22:14', '2013-08-16 16:22:14')
  [1m[36mFixture Delete (1.1ms)[0m  [1mDELETE FROM "phones"[0m
  [1m[35mFixture Insert (1.3ms)[0m  INSERT INTO "phones" ("id", "number", "tag", "user_id", "created_at", "updated_at") VALUES (1, '(211) 234-1111', 'Office', 1, '2013-08-16 16:22:14', '2013-08-16 16:22:14')
  [1m[36mFixture Insert (0.9ms)[0m  [1mINSERT INTO "phones" ("id", "number", "tag", "user_id", "created_at", "updated_at") VALUES (2, '(222) 345-2222', 'Home', 1, '2013-08-16 16:22:14', '2013-08-16 16:22:14')[0m
  [1m[35mFixture Insert (0.7ms)[0m  INSERT INTO "phones" ("id", "number", "tag", "user_id", "created_at", "updated_at") VALUES (3, '(333) 456-3333', 'Mobile', 1, '2013-08-16 16:22:14', '2013-08-16 16:22:14')
  [1m[36mFixture Insert (0.8ms)[0m  [1mINSERT INTO "phones" ("id", "number", "tag", "user_id", "created_at", "updated_at") VALUES (4, '(444) 567-4444', 'Pager', 1, '2013-08-16 16:22:14', '2013-08-16 16:22:14')[0m
  [1m[35mFixture Insert (0.7ms)[0m  INSERT INTO "phones" ("id", "number", "tag", "user_id", "created_at", "updated_at") VALUES (5, '(555) 678-5555', 'Mobile', 1, '2013-08-16 16:22:14', '2013-08-16 16:22:14')
  [1m[36mFixture Insert (0.7ms)[0m  [1mINSERT INTO "phones" ("id", "number", "tag", "user_id", "created_at", "updated_at") VALUES (6, '(666) 789-6666', 'Mobile', 1, '2013-08-16 16:22:14', '2013-08-16 16:22:14')[0m
  [1m[35m (4.2ms)[0m  COMMIT
  [1m[36m (0.6ms)[0m  [1mALTER TABLE "phones" ENABLE TRIGGER ALL;ALTER TABLE "users" ENABLE TRIGGER ALL;ALTER TABLE "schema_migrations" ENABLE TRIGGER ALL[0m
  [1m[35m (0.4ms)[0m  BEGIN
----------------------------------------------------------
PhoneTest: test: A given phone should be initially valid. 
----------------------------------------------------------
  [1m[36mPhone Load (1.6ms)[0m  [1mSELECT "phones".* FROM "phones" ORDER BY "phones"."id" ASC LIMIT 1[0m
  [1m[35m (0.4ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
-------------------------------------------------------------------------------------------------
PhoneTest: test: A given phone should optionally require a valid 10-digit North American number. 
-------------------------------------------------------------------------------------------------
  [1m[35mPhone Load (0.8ms)[0m  SELECT "phones".* FROM "phones" ORDER BY "phones"."id" ASC LIMIT 1
  [1m[36m (0.4ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
----------------------------------------------
PhoneTest: test: Phone should belong to user. 
----------------------------------------------
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
------------------------------------------------------------------------------------------------
PhoneTest: test: Phone should ensure inclusion of tag in ["Home", "Office", "Mobile", "Pager"]. 
------------------------------------------------------------------------------------------------
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
------------------------------------------------------------------------
PhoneTest: test: Phone should ensure number has a length of at least 7. 
------------------------------------------------------------------------
  [1m[36m (0.4ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
------------------------------------------------------------------------
PhoneTest: test: Phone should ensure number has a length of at most 17. 
------------------------------------------------------------------------
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
--------------------------------------------------------
PhoneTest: test: Phone should require number to be set. 
--------------------------------------------------------
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
-----------------------------------------------------
PhoneTest: test: Phone should require tag to be set. 
-----------------------------------------------------
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
---------------------------------------------------------
PhoneTest: test: Phone should require user_id to be set. 
---------------------------------------------------------
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
--------------------------------------------------------
UserTest: test: A given user should be valid initially. 
--------------------------------------------------------
  [1m[36mUser Load (1.0ms)[0m  [1mSELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35mUser Exists (1.9ms)[0m  SELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
-----------------------------------------------------------------------
UserTest: test: A given user should not be valid if first name is nil. 
-----------------------------------------------------------------------
  [1m[36mUser Load (0.8ms)[0m  [1mSELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35mUser Exists (0.8ms)[0m  SELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
----------------------------------------------------------------------------
UserTest: test: A given user should not be valid if first name is too long. 
----------------------------------------------------------------------------
  [1m[36mUser Load (0.5ms)[0m  [1mSELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
-----------------------------------------------------------------------------
UserTest: test: A given user should not be valid if first name is too short. 
-----------------------------------------------------------------------------
  [1m[36mUser Load (0.8ms)[0m  [1mSELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
------------------------------------------------------------------------------------------------
UserTest: test: A given user should not be valid if first name starts with a lower case letter. 
------------------------------------------------------------------------------------------------
  [1m[36mUser Load (0.8ms)[0m  [1mSELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1
  [1m[36m (0.5ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
----------------------------------------------------------------------
UserTest: test: A given user should not be valid if last name is nil. 
----------------------------------------------------------------------
  [1m[36mUser Load (0.8ms)[0m  [1mSELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
---------------------------------------------------------------------------
UserTest: test: A given user should not be valid if last name is too long. 
---------------------------------------------------------------------------
  [1m[36mUser Load (0.8ms)[0m  [1mSELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
----------------------------------------------------------------------------
UserTest: test: A given user should not be valid if last name is too short. 
----------------------------------------------------------------------------
  [1m[36mUser Load (0.8ms)[0m  [1mSELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
---------------------------------------------------------------------------------------------
UserTest: test: A given user should not be valid if login name has non-alphanumeric letters. 
---------------------------------------------------------------------------------------------
  [1m[36mUser Load (0.8ms)[0m  [1mSELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'johns-276' AND "users"."id" != 1) LIMIT 1
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
-------------------------------------------------------------------------------
UserTest: test: A given user should not be valid if login name is a duplicate. 
-------------------------------------------------------------------------------
  [1m[36mUser Load (0.8ms)[0m  [1mSELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35m (0.4ms)[0m  SAVEPOINT active_record_1
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'orstedma' LIMIT 1[0m
  [1m[35m (0.4ms)[0m  ROLLBACK TO SAVEPOINT active_record_1
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'orstedma' LIMIT 1[0m
  [1m[35m (0.3ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
-----------------------------------------------------------------------
UserTest: test: A given user should not be valid if login name is nil. 
-----------------------------------------------------------------------
  [1m[35mUser Load (0.8ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" IS NULL AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.3ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
----------------------------------------------------------------------------
UserTest: test: A given user should not be valid if login name is too long. 
----------------------------------------------------------------------------
  [1m[35mUser Load (0.8ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (0.8ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'abbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.3ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
-----------------------------------------------------------------------------
UserTest: test: A given user should not be valid if login name is too short. 
-----------------------------------------------------------------------------
  [1m[35mUser Load (0.8ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (0.8ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'aaaaa' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.3ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
---------------------------------------------------------------------------------------------
UserTest: test: A given user should not be valid if login name starts with a capital letter. 
---------------------------------------------------------------------------------------------
  [1m[35mUser Load (0.9ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (0.8ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'Johns276' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.3ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
------------------------------------------------------------------------------------
UserTest: test: A given user should require a start date if an end date is present. 
------------------------------------------------------------------------------------
  [1m[35mUser Load (0.8ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (0.8ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.3ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
--------------------------------------------------------------------------------
UserTest: test: A given user should require an end date on or after start date. 
--------------------------------------------------------------------------------
  [1m[35mUser Load (0.8ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.3ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
---------------------------------------------------------------------
UserTest: test: User should allow first_name to be set to "Charles". 
---------------------------------------------------------------------
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.6ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35m (0.3ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
--------------------------------------------------------------------------
UserTest: test: User should ensure first_name has a length of at least 2. 
--------------------------------------------------------------------------
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.6ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.6ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.5ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.6ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
---------------------------------------------------------------------------
UserTest: test: User should ensure first_name has a length of at most 254. 
---------------------------------------------------------------------------
  [1m[36mUser Exists (0.6ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.6ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.6ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (1.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35m (0.3ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
-------------------------------------------------------------------------
UserTest: test: User should ensure last_name has a length of at least 2. 
-------------------------------------------------------------------------
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.6ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.6ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.5ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.6ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.2ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.2ms)[0m  BEGIN
--------------------------------------------------------------------------
UserTest: test: User should ensure last_name has a length of at most 254. 
--------------------------------------------------------------------------
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.5ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.5ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.5ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35m (0.2ms)[0m  ROLLBACK
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
--------------------------------------------------------------------------
UserTest: test: User should ensure login_name has a length of at least 6. 
--------------------------------------------------------------------------
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxx' LIMIT 1
  [1m[36mUser Exists (0.5ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxx' LIMIT 1[0m
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxx' LIMIT 1
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxx' LIMIT 1[0m
  [1m[35mUser Exists (0.5ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxx' LIMIT 1
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
---------------------------------------------------------------------------
UserTest: test: User should ensure login_name has a length of at most 254. 
---------------------------------------------------------------------------
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' LIMIT 1[0m
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' LIMIT 1
  [1m[36mUser Exists (0.8ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' LIMIT 1[0m
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' LIMIT 1
  [1m[36mUser Exists (0.6ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' LIMIT 1[0m
  [1m[35m (0.3ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
----------------------------------------------
UserTest: test: User should have many phones. 
----------------------------------------------
  [1m[35m (0.4ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
-------------------------------------------------------------------------
UserTest: test: User should not allow first_name to be set to "charles". 
-------------------------------------------------------------------------
  [1m[35mUser Exists (0.6ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (5.2ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35m (0.3ms)[0m  ROLLBACK
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
--------------------------------------------------------------------------------
UserTest: test: User should require case sensitive unique value for login_name. 
--------------------------------------------------------------------------------
  [1m[35mUser Load (0.6ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (0.5ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'orstedma' LIMIT 1[0m
  [1m[35mUser Exists (0.5ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'orstedma' LIMIT 1
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
----------------------------------------------------------
UserTest: test: User should require first_name to be set. 
----------------------------------------------------------
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.6ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.4ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
---------------------------------------------------------
UserTest: test: User should require last_name to be set. 
---------------------------------------------------------
  [1m[36mUser Exists (0.6ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
----------------------------------------------------------
UserTest: test: User should require login_name to be set. 
----------------------------------------------------------
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.6ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.2ms)[0m  BEGIN
----------------------------------------------------------
UserTest: test: User should require start_date to be set. 
----------------------------------------------------------
  [1m[36mUser Exists (0.8ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[36m (220.1ms)[0m  [1mDROP DATABASE IF EXISTS "ritrack_test"[0m
  [1m[35m (632.7ms)[0m  CREATE DATABASE "ritrack_test" ENCODING = 'unicode'
  [1m[36mSQL (40.4ms)[0m  [1mCREATE EXTENSION IF NOT EXISTS "plpgsql"[0m
  [1m[35m (102.5ms)[0m  CREATE TABLE "phones" ("id" serial primary key, "number" character varying(255), "tag" character varying(255), "user_id" integer, "created_at" timestamp, "updated_at" timestamp) 
  [1m[36m (50.0ms)[0m  [1mCREATE INDEX "index_phones_on_number" ON "phones" USING btree ("number")[0m
  [1m[35m (52.3ms)[0m  CREATE INDEX "index_phones_on_user_id" ON "phones" USING btree ("user_id")
  [1m[36m (89.6ms)[0m  [1mCREATE TABLE "users" ("id" serial primary key, "first_name" character varying(255), "last_name" character varying(255), "nick_name" character varying(255), "login_name" character varying(255), "notes" text, "created_at" timestamp, "updated_at" timestamp, "start_date" date, "end_date" date) [0m
  [1m[35m (10.7ms)[0m  CREATE TABLE "schema_migrations" ("version" character varying(255) NOT NULL) 
  [1m[36m (54.4ms)[0m  [1mCREATE UNIQUE INDEX "unique_schema_migrations" ON "schema_migrations" ("version")[0m
  [1m[35m (1.0ms)[0m  SELECT version FROM "schema_migrations"
  [1m[36m (5.8ms)[0m  [1mINSERT INTO "schema_migrations" (version) VALUES ('20130816142047')[0m
  [1m[35m (7.8ms)[0m  INSERT INTO "schema_migrations" (version) VALUES ('20130811212425')
  [1m[36m (8.0ms)[0m  [1mINSERT INTO "schema_migrations" (version) VALUES ('20130811195620')[0m
  [1m[35m (7.9ms)[0m  INSERT INTO "schema_migrations" (version) VALUES ('20130811193133')
  [1m[36m (7.9ms)[0m  [1mINSERT INTO "schema_migrations" (version) VALUES ('20130811195557')[0m
  [1m[35mActiveRecord::SchemaMigration Load (1.1ms)[0m  SELECT "schema_migrations".* FROM "schema_migrations"
  [1m[36mActiveRecord::SchemaMigration Load (0.5ms)[0m  [1mSELECT "schema_migrations".* FROM "schema_migrations"[0m
  [1m[35m (1.1ms)[0m  ALTER TABLE "phones" DISABLE TRIGGER ALL;ALTER TABLE "users" DISABLE TRIGGER ALL;ALTER TABLE "schema_migrations" DISABLE TRIGGER ALL
  [1m[36m (0.5ms)[0m  [1mBEGIN[0m
  [1m[35mFixture Delete (0.8ms)[0m  DELETE FROM "users"
  [1m[36mFixture Insert (1.3ms)[0m  [1mINSERT INTO "users" ("id", "first_name", "last_name", "nick_name", "login_name", "start_date", "end_date", "notes", "created_at", "updated_at") VALUES (1, 'Michael', 'Orsted', 'Mike', 'orstedma', '2012-02-04', NULL, 'This user lives in Chicago.', '2013-08-16 16:23:06', '2013-08-16 16:23:06')[0m
  [1m[35mFixture Insert (0.8ms)[0m  INSERT INTO "users" ("id", "first_name", "last_name", "nick_name", "login_name", "start_date", "end_date", "notes", "created_at", "updated_at") VALUES (2, 'Frederick', 'Free-Loader', 'Frederick', 'freelofw', '2012-03-04', NULL, 'This user is completely useless', '2013-08-16 16:23:06', '2013-08-16 16:23:06')
  [1m[36mFixture Insert (0.7ms)[0m  [1mINSERT INTO "users" ("id", "first_name", "last_name", "nick_name", "login_name", "start_date", "end_date", "notes", "created_at", "updated_at") VALUES (3, 'Michael', 'Winstead', 'Mike', 'winstem', '2012-02-04', '2013-08-12', 'This user lives in New York. This user is disabled in the system.', '2013-08-16 16:23:06', '2013-08-16 16:23:06')[0m
  [1m[35mFixture Insert (0.8ms)[0m  INSERT INTO "users" ("id", "first_name", "last_name", "nick_name", "login_name", "start_date", "end_date", "notes", "created_at", "updated_at") VALUES (4, 'Allison', 'Wilson', 'Alli', 'wilsona', '2012-03-04', NULL, 'Electrical engineer.', '2013-08-16 16:23:06', '2013-08-16 16:23:06')
  [1m[36mFixture Delete (1.1ms)[0m  [1mDELETE FROM "phones"[0m
  [1m[35mFixture Insert (1.2ms)[0m  INSERT INTO "phones" ("id", "number", "tag", "user_id", "created_at", "updated_at") VALUES (1, '(211) 234-1111', 'Office', 1, '2013-08-16 16:23:06', '2013-08-16 16:23:06')
  [1m[36mFixture Insert (1.0ms)[0m  [1mINSERT INTO "phones" ("id", "number", "tag", "user_id", "created_at", "updated_at") VALUES (2, '(222) 345-2222', 'Home', 1, '2013-08-16 16:23:06', '2013-08-16 16:23:06')[0m
  [1m[35mFixture Insert (0.8ms)[0m  INSERT INTO "phones" ("id", "number", "tag", "user_id", "created_at", "updated_at") VALUES (3, '(333) 456-3333', 'Mobile', 1, '2013-08-16 16:23:06', '2013-08-16 16:23:06')
  [1m[36mFixture Insert (0.8ms)[0m  [1mINSERT INTO "phones" ("id", "number", "tag", "user_id", "created_at", "updated_at") VALUES (4, '(444) 567-4444', 'Pager', 1, '2013-08-16 16:23:06', '2013-08-16 16:23:06')[0m
  [1m[35mFixture Insert (0.8ms)[0m  INSERT INTO "phones" ("id", "number", "tag", "user_id", "created_at", "updated_at") VALUES (5, '(555) 678-5555', 'Mobile', 1, '2013-08-16 16:23:06', '2013-08-16 16:23:06')
  [1m[36mFixture Insert (0.7ms)[0m  [1mINSERT INTO "phones" ("id", "number", "tag", "user_id", "created_at", "updated_at") VALUES (6, '(666) 789-6666', 'Mobile', 1, '2013-08-16 16:23:06', '2013-08-16 16:23:06')[0m
  [1m[35m (6.4ms)[0m  COMMIT
  [1m[36m (0.8ms)[0m  [1mALTER TABLE "phones" ENABLE TRIGGER ALL;ALTER TABLE "users" ENABLE TRIGGER ALL;ALTER TABLE "schema_migrations" ENABLE TRIGGER ALL[0m
  [1m[35m (0.4ms)[0m  BEGIN
----------------------------------------------------------
PhoneTest: test: A given phone should be initially valid. 
----------------------------------------------------------
  [1m[36mPhone Load (1.8ms)[0m  [1mSELECT "phones".* FROM "phones" ORDER BY "phones"."id" ASC LIMIT 1[0m
  [1m[35m (0.5ms)[0m  ROLLBACK
  [1m[36m (0.4ms)[0m  [1mBEGIN[0m
-------------------------------------------------------------------------------------------------
PhoneTest: test: A given phone should optionally require a valid 10-digit North American number. 
-------------------------------------------------------------------------------------------------
  [1m[35mPhone Load (1.0ms)[0m  SELECT "phones".* FROM "phones" ORDER BY "phones"."id" ASC LIMIT 1
  [1m[36m (0.4ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.4ms)[0m  BEGIN
----------------------------------------------
PhoneTest: test: Phone should belong to user. 
----------------------------------------------
  [1m[36m (0.4ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.4ms)[0m  BEGIN
------------------------------------------------------------------------------------------------
PhoneTest: test: Phone should ensure inclusion of tag in ["Home", "Office", "Mobile", "Pager"]. 
------------------------------------------------------------------------------------------------
  [1m[36m (0.5ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.4ms)[0m  BEGIN
------------------------------------------------------------------------
PhoneTest: test: Phone should ensure number has a length of at least 7. 
------------------------------------------------------------------------
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
------------------------------------------------------------------------
PhoneTest: test: Phone should ensure number has a length of at most 17. 
------------------------------------------------------------------------
  [1m[36m (0.4ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
--------------------------------------------------------
PhoneTest: test: Phone should require number to be set. 
--------------------------------------------------------
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
-----------------------------------------------------
PhoneTest: test: Phone should require tag to be set. 
-----------------------------------------------------
  [1m[36m (0.4ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
---------------------------------------------------------
PhoneTest: test: Phone should require user_id to be set. 
---------------------------------------------------------
  [1m[36m (0.4ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.4ms)[0m  BEGIN
--------------------------------------------------------
UserTest: test: A given user should be valid initially. 
--------------------------------------------------------
  [1m[36mUser Load (0.9ms)[0m  [1mSELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35mUser Exists (1.9ms)[0m  SELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1
  [1m[36m (0.5ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
-----------------------------------------------------------------------
UserTest: test: A given user should not be valid if first name is nil. 
-----------------------------------------------------------------------
  [1m[36mUser Load (0.8ms)[0m  [1mSELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
----------------------------------------------------------------------------
UserTest: test: A given user should not be valid if first name is too long. 
----------------------------------------------------------------------------
  [1m[36mUser Load (0.9ms)[0m  [1mSELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35mUser Exists (0.8ms)[0m  SELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
-----------------------------------------------------------------------------
UserTest: test: A given user should not be valid if first name is too short. 
-----------------------------------------------------------------------------
  [1m[36mUser Load (0.8ms)[0m  [1mSELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35mUser Exists (0.8ms)[0m  SELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
------------------------------------------------------------------------------------------------
UserTest: test: A given user should not be valid if first name starts with a lower case letter. 
------------------------------------------------------------------------------------------------
  [1m[36mUser Load (0.8ms)[0m  [1mSELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35mUser Exists (0.8ms)[0m  SELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
----------------------------------------------------------------------
UserTest: test: A given user should not be valid if last name is nil. 
----------------------------------------------------------------------
  [1m[36mUser Load (0.8ms)[0m  [1mSELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35mUser Exists (0.8ms)[0m  SELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
---------------------------------------------------------------------------
UserTest: test: A given user should not be valid if last name is too long. 
---------------------------------------------------------------------------
  [1m[36mUser Load (0.8ms)[0m  [1mSELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35mUser Exists (0.8ms)[0m  SELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1
  [1m[36m (0.4ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
----------------------------------------------------------------------------
UserTest: test: A given user should not be valid if last name is too short. 
----------------------------------------------------------------------------
  [1m[36mUser Load (0.7ms)[0m  [1mSELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35mUser Exists (0.6ms)[0m  SELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1
  [1m[36m (0.4ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
---------------------------------------------------------------------------------------------
UserTest: test: A given user should not be valid if login name has non-alphanumeric letters. 
---------------------------------------------------------------------------------------------
  [1m[36mUser Load (0.7ms)[0m  [1mSELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35mUser Exists (0.8ms)[0m  SELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'johns-276' AND "users"."id" != 1) LIMIT 1
  [1m[36m (0.4ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
-------------------------------------------------------------------------------
UserTest: test: A given user should not be valid if login name is a duplicate. 
-------------------------------------------------------------------------------
  [1m[36mUser Load (0.7ms)[0m  [1mSELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35m (0.3ms)[0m  SAVEPOINT active_record_1
  [1m[36mUser Exists (0.6ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'orstedma' LIMIT 1[0m
  [1m[35m (0.2ms)[0m  ROLLBACK TO SAVEPOINT active_record_1
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'orstedma' LIMIT 1[0m
  [1m[35m (0.2ms)[0m  ROLLBACK
  [1m[36m (0.1ms)[0m  [1mBEGIN[0m
-----------------------------------------------------------------------
UserTest: test: A given user should not be valid if login name is nil. 
-----------------------------------------------------------------------
  [1m[35mUser Load (0.5ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" IS NULL AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.2ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
----------------------------------------------------------------------------
UserTest: test: A given user should not be valid if login name is too long. 
----------------------------------------------------------------------------
  [1m[35mUser Load (0.8ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'abbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.4ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
-----------------------------------------------------------------------------
UserTest: test: A given user should not be valid if login name is too short. 
-----------------------------------------------------------------------------
  [1m[35mUser Load (0.9ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'aaaaa' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.3ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
---------------------------------------------------------------------------------------------
UserTest: test: A given user should not be valid if login name starts with a capital letter. 
---------------------------------------------------------------------------------------------
  [1m[35mUser Load (1.0ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (0.8ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'Johns276' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.4ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
------------------------------------------------------------------------------------
UserTest: test: A given user should require a start date if an end date is present. 
------------------------------------------------------------------------------------
  [1m[35mUser Load (0.9ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (0.9ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.6ms)[0m  ROLLBACK
  [1m[36m (0.4ms)[0m  [1mBEGIN[0m
--------------------------------------------------------------------------------
UserTest: test: A given user should require an end date on or after start date. 
--------------------------------------------------------------------------------
  [1m[35mUser Load (0.9ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (0.8ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.4ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
---------------------------------------------------------------------
UserTest: test: User should allow first_name to be set to "Charles". 
---------------------------------------------------------------------
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.8ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35m (0.4ms)[0m  ROLLBACK
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
--------------------------------------------------------------------------
UserTest: test: User should ensure first_name has a length of at least 2. 
--------------------------------------------------------------------------
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.5ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.8ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.4ms)[0m  BEGIN
---------------------------------------------------------------------------
UserTest: test: User should ensure first_name has a length of at most 254. 
---------------------------------------------------------------------------
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.8ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.9ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (8.1ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35m (0.3ms)[0m  ROLLBACK
  [1m[36m (0.4ms)[0m  [1mBEGIN[0m
-------------------------------------------------------------------------
UserTest: test: User should ensure last_name has a length of at least 2. 
-------------------------------------------------------------------------
  [1m[35mUser Exists (0.6ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.5ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.6ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
--------------------------------------------------------------------------
UserTest: test: User should ensure last_name has a length of at most 254. 
--------------------------------------------------------------------------
  [1m[36mUser Exists (0.5ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.8ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.6ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35m (0.3ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
--------------------------------------------------------------------------
UserTest: test: User should ensure login_name has a length of at least 6. 
--------------------------------------------------------------------------
  [1m[35mUser Exists (0.8ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxx' LIMIT 1
  [1m[36mUser Exists (0.9ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxx' LIMIT 1[0m
  [1m[35mUser Exists (0.6ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxx' LIMIT 1
  [1m[36mUser Exists (0.5ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxx' LIMIT 1[0m
  [1m[35mUser Exists (0.6ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxx' LIMIT 1
  [1m[36m (0.4ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
---------------------------------------------------------------------------
UserTest: test: User should ensure login_name has a length of at most 254. 
---------------------------------------------------------------------------
  [1m[36mUser Exists (0.5ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' LIMIT 1[0m
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' LIMIT 1
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' LIMIT 1[0m
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' LIMIT 1
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' LIMIT 1[0m
  [1m[35m (0.5ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
----------------------------------------------
UserTest: test: User should have many phones. 
----------------------------------------------
  [1m[35m (0.2ms)[0m  ROLLBACK
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
-------------------------------------------------------------------------
UserTest: test: User should not allow first_name to be set to "charles". 
-------------------------------------------------------------------------
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (5.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35m (0.3ms)[0m  ROLLBACK
  [1m[36m (0.4ms)[0m  [1mBEGIN[0m
--------------------------------------------------------------------------------
UserTest: test: User should require case sensitive unique value for login_name. 
--------------------------------------------------------------------------------
  [1m[35mUser Load (0.5ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (0.5ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'orstedma' LIMIT 1[0m
  [1m[35mUser Exists (0.5ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'orstedma' LIMIT 1
  [1m[36m (0.4ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.2ms)[0m  BEGIN
----------------------------------------------------------
UserTest: test: User should require first_name to be set. 
----------------------------------------------------------
  [1m[36mUser Exists (0.8ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.4ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
---------------------------------------------------------
UserTest: test: User should require last_name to be set. 
---------------------------------------------------------
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
----------------------------------------------------------
UserTest: test: User should require login_name to be set. 
----------------------------------------------------------
  [1m[36mUser Exists (0.5ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
----------------------------------------------------------
UserTest: test: User should require start_date to be set. 
----------------------------------------------------------
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.4ms)[0m  [1mROLLBACK[0m
  [1m[36m (122.5ms)[0m  [1mDROP DATABASE IF EXISTS "ritrack_test"[0m
  [1m[35m (657.6ms)[0m  CREATE DATABASE "ritrack_test" ENCODING = 'unicode'
  [1m[36mSQL (39.8ms)[0m  [1mCREATE EXTENSION IF NOT EXISTS "plpgsql"[0m
  [1m[35m (96.3ms)[0m  CREATE TABLE "phones" ("id" serial primary key, "number" character varying(255), "tag" character varying(255), "user_id" integer, "created_at" timestamp, "updated_at" timestamp) 
  [1m[36m (58.1ms)[0m  [1mCREATE INDEX "index_phones_on_number" ON "phones" USING btree ("number")[0m
  [1m[35m (53.0ms)[0m  CREATE INDEX "index_phones_on_user_id" ON "phones" USING btree ("user_id")
  [1m[36m (97.1ms)[0m  [1mCREATE TABLE "users" ("id" serial primary key, "first_name" character varying(255), "last_name" character varying(255), "nick_name" character varying(255), "login_name" character varying(255), "notes" text, "created_at" timestamp, "updated_at" timestamp, "start_date" date, "end_date" date) [0m
  [1m[35m (10.9ms)[0m  CREATE TABLE "schema_migrations" ("version" character varying(255) NOT NULL) 
  [1m[36m (46.1ms)[0m  [1mCREATE UNIQUE INDEX "unique_schema_migrations" ON "schema_migrations" ("version")[0m
  [1m[35m (1.0ms)[0m  SELECT version FROM "schema_migrations"
  [1m[36m (5.9ms)[0m  [1mINSERT INTO "schema_migrations" (version) VALUES ('20130816142047')[0m
  [1m[35m (7.9ms)[0m  INSERT INTO "schema_migrations" (version) VALUES ('20130811212425')
  [1m[36m (8.0ms)[0m  [1mINSERT INTO "schema_migrations" (version) VALUES ('20130811195620')[0m
  [1m[35m (8.0ms)[0m  INSERT INTO "schema_migrations" (version) VALUES ('20130811193133')
  [1m[36m (8.1ms)[0m  [1mINSERT INTO "schema_migrations" (version) VALUES ('20130811195557')[0m
  [1m[35mActiveRecord::SchemaMigration Load (1.2ms)[0m  SELECT "schema_migrations".* FROM "schema_migrations"
  [1m[36mActiveRecord::SchemaMigration Load (0.7ms)[0m  [1mSELECT "schema_migrations".* FROM "schema_migrations"[0m
  [1m[35m (1.3ms)[0m  ALTER TABLE "phones" DISABLE TRIGGER ALL;ALTER TABLE "users" DISABLE TRIGGER ALL;ALTER TABLE "schema_migrations" DISABLE TRIGGER ALL
  [1m[36m (0.4ms)[0m  [1mBEGIN[0m
  [1m[35mFixture Delete (0.6ms)[0m  DELETE FROM "users"
  [1m[36mFixture Insert (1.3ms)[0m  [1mINSERT INTO "users" ("id", "first_name", "last_name", "nick_name", "login_name", "start_date", "end_date", "notes", "created_at", "updated_at") VALUES (1, 'Michael', 'Orsted', 'Mike', 'orstedma', '2012-02-04', NULL, 'This user lives in Chicago.', '2013-08-16 20:35:58', '2013-08-16 20:35:58')[0m
  [1m[35mFixture Insert (0.6ms)[0m  INSERT INTO "users" ("id", "first_name", "last_name", "nick_name", "login_name", "start_date", "end_date", "notes", "created_at", "updated_at") VALUES (2, 'Frederick', 'Free-Loader', 'Frederick', 'freelofw', '2012-03-04', NULL, 'This user is completely useless', '2013-08-16 20:35:58', '2013-08-16 20:35:58')
  [1m[36mFixture Insert (0.8ms)[0m  [1mINSERT INTO "users" ("id", "first_name", "last_name", "nick_name", "login_name", "start_date", "end_date", "notes", "created_at", "updated_at") VALUES (3, 'Michael', 'Winstead', 'Mike', 'winstem', '2012-02-04', '2013-08-12', 'This user lives in New York. This user is disabled in the system.', '2013-08-16 20:35:58', '2013-08-16 20:35:58')[0m
  [1m[35mFixture Insert (0.8ms)[0m  INSERT INTO "users" ("id", "first_name", "last_name", "nick_name", "login_name", "start_date", "end_date", "notes", "created_at", "updated_at") VALUES (4, 'Allison', 'Wilson', 'Alli', 'wilsona', '2012-03-04', NULL, 'Electrical engineer.', '2013-08-16 20:35:58', '2013-08-16 20:35:58')
  [1m[36mFixture Delete (1.2ms)[0m  [1mDELETE FROM "phones"[0m
  [1m[35mFixture Insert (1.3ms)[0m  INSERT INTO "phones" ("id", "number", "tag", "user_id", "created_at", "updated_at") VALUES (1, '(211) 234-1111', 'Office', 1, '2013-08-16 20:35:58', '2013-08-16 20:35:58')
  [1m[36mFixture Insert (1.0ms)[0m  [1mINSERT INTO "phones" ("id", "number", "tag", "user_id", "created_at", "updated_at") VALUES (2, '(222) 345-2222', 'Home', 1, '2013-08-16 20:35:58', '2013-08-16 20:35:58')[0m
  [1m[35mFixture Insert (0.8ms)[0m  INSERT INTO "phones" ("id", "number", "tag", "user_id", "created_at", "updated_at") VALUES (3, '(333) 456-3333', 'Mobile', 1, '2013-08-16 20:35:58', '2013-08-16 20:35:58')
  [1m[36mFixture Insert (0.8ms)[0m  [1mINSERT INTO "phones" ("id", "number", "tag", "user_id", "created_at", "updated_at") VALUES (4, '(444) 567-4444', 'Pager', 1, '2013-08-16 20:35:58', '2013-08-16 20:35:58')[0m
  [1m[35mFixture Insert (0.8ms)[0m  INSERT INTO "phones" ("id", "number", "tag", "user_id", "created_at", "updated_at") VALUES (5, '(555) 678-5555', 'Mobile', 1, '2013-08-16 20:35:58', '2013-08-16 20:35:58')
  [1m[36mFixture Insert (0.7ms)[0m  [1mINSERT INTO "phones" ("id", "number", "tag", "user_id", "created_at", "updated_at") VALUES (6, '(666) 789-6666', 'Mobile', 1, '2013-08-16 20:35:58', '2013-08-16 20:35:58')[0m
  [1m[35m (5.3ms)[0m  COMMIT
  [1m[36m (0.6ms)[0m  [1mALTER TABLE "phones" ENABLE TRIGGER ALL;ALTER TABLE "users" ENABLE TRIGGER ALL;ALTER TABLE "schema_migrations" ENABLE TRIGGER ALL[0m
  [1m[35m (0.3ms)[0m  BEGIN
----------------------------------------------------------
PhoneTest: test: A given phone should be initially valid. 
----------------------------------------------------------
  [1m[36mPhone Load (1.8ms)[0m  [1mSELECT "phones".* FROM "phones" ORDER BY "phones"."id" ASC LIMIT 1[0m
  [1m[35m (0.3ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
-----------------------------------------------------------------------------------------------------------
PhoneTest: test: A given phone should not be valid with a poorly formatted 10 digit North American number. 
-----------------------------------------------------------------------------------------------------------
  [1m[35mPhone Load (0.8ms)[0m  SELECT "phones".* FROM "phones" ORDER BY "phones"."id" ASC LIMIT 1
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
-------------------------------------------------------------------------------------------------
PhoneTest: test: A given phone should optionally require a valid 10-digit North American number. 
-------------------------------------------------------------------------------------------------
  [1m[36mPhone Load (0.8ms)[0m  [1mSELECT "phones".* FROM "phones" ORDER BY "phones"."id" ASC LIMIT 1[0m
  [1m[35m (0.3ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
----------------------------------------------
PhoneTest: test: Phone should belong to user. 
----------------------------------------------
  [1m[35m (0.3ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
------------------------------------------------------------------------------------------------
PhoneTest: test: Phone should ensure inclusion of tag in ["Home", "Office", "Mobile", "Pager"]. 
------------------------------------------------------------------------------------------------
  [1m[35m (0.5ms)[0m  ROLLBACK
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
------------------------------------------------------------------------
PhoneTest: test: Phone should ensure number has a length of at least 7. 
------------------------------------------------------------------------
  [1m[35m (0.4ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
------------------------------------------------------------------------
PhoneTest: test: Phone should ensure number has a length of at most 17. 
------------------------------------------------------------------------
  [1m[35m (0.4ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
--------------------------------------------------------
PhoneTest: test: Phone should require number to be set. 
--------------------------------------------------------
  [1m[35m (0.5ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
-----------------------------------------------------
PhoneTest: test: Phone should require tag to be set. 
-----------------------------------------------------
  [1m[35m (0.5ms)[0m  ROLLBACK
  [1m[36m (0.5ms)[0m  [1mBEGIN[0m
---------------------------------------------------------
PhoneTest: test: Phone should require user_id to be set. 
---------------------------------------------------------
  [1m[35m (0.5ms)[0m  ROLLBACK
  [1m[36m (0.4ms)[0m  [1mBEGIN[0m
--------------------------------------------------------
UserTest: test: A given user should be valid initially. 
--------------------------------------------------------
  [1m[35mUser Load (1.2ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (1.9ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.4ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
-----------------------------------------------------------------------
UserTest: test: A given user should not be valid if first name is nil. 
-----------------------------------------------------------------------
  [1m[35mUser Load (0.5ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (0.5ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.3ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
----------------------------------------------------------------------------
UserTest: test: A given user should not be valid if first name is too long. 
----------------------------------------------------------------------------
  [1m[35mUser Load (1.0ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.3ms)[0m  ROLLBACK
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
-----------------------------------------------------------------------------
UserTest: test: A given user should not be valid if first name is too short. 
-----------------------------------------------------------------------------
  [1m[35mUser Load (1.1ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (0.9ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.4ms)[0m  ROLLBACK
  [1m[36m (0.4ms)[0m  [1mBEGIN[0m
------------------------------------------------------------------------------------------------
UserTest: test: A given user should not be valid if first name starts with a lower case letter. 
------------------------------------------------------------------------------------------------
  [1m[35mUser Load (1.0ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (1.1ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.5ms)[0m  ROLLBACK
  [1m[36m (0.4ms)[0m  [1mBEGIN[0m
----------------------------------------------------------------------
UserTest: test: A given user should not be valid if last name is nil. 
----------------------------------------------------------------------
  [1m[35mUser Load (1.1ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (0.8ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.4ms)[0m  ROLLBACK
  [1m[36m (0.4ms)[0m  [1mBEGIN[0m
---------------------------------------------------------------------------
UserTest: test: A given user should not be valid if last name is too long. 
---------------------------------------------------------------------------
  [1m[35mUser Load (0.8ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (1.0ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.5ms)[0m  ROLLBACK
  [1m[36m (0.4ms)[0m  [1mBEGIN[0m
----------------------------------------------------------------------------
UserTest: test: A given user should not be valid if last name is too short. 
----------------------------------------------------------------------------
  [1m[35mUser Load (1.1ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (0.9ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.3ms)[0m  ROLLBACK
  [1m[36m (0.4ms)[0m  [1mBEGIN[0m
---------------------------------------------------------------------------------------------
UserTest: test: A given user should not be valid if login name has non-alphanumeric letters. 
---------------------------------------------------------------------------------------------
  [1m[35mUser Load (0.8ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (1.0ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'johns-276' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.5ms)[0m  ROLLBACK
  [1m[36m (0.5ms)[0m  [1mBEGIN[0m
-------------------------------------------------------------------------------
UserTest: test: A given user should not be valid if login name is a duplicate. 
-------------------------------------------------------------------------------
  [1m[35mUser Load (1.0ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36m (0.5ms)[0m  [1mSAVEPOINT active_record_1[0m
  [1m[35mUser Exists (0.9ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'orstedma' LIMIT 1
  [1m[36m (0.4ms)[0m  [1mROLLBACK TO SAVEPOINT active_record_1[0m
  [1m[35mUser Exists (0.9ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'orstedma' LIMIT 1
  [1m[36m (0.4ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
-----------------------------------------------------------------------
UserTest: test: A given user should not be valid if login name is nil. 
-----------------------------------------------------------------------
  [1m[36mUser Load (1.1ms)[0m  [1mSELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35mUser Exists (0.9ms)[0m  SELECT 1 AS one FROM "users" WHERE ("users"."login_name" IS NULL AND "users"."id" != 1) LIMIT 1
  [1m[36m (0.5ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.5ms)[0m  BEGIN
----------------------------------------------------------------------------
UserTest: test: A given user should not be valid if login name is too long. 
----------------------------------------------------------------------------
  [1m[36mUser Load (1.0ms)[0m  [1mSELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35mUser Exists (1.0ms)[0m  SELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'abbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb' AND "users"."id" != 1) LIMIT 1
  [1m[36m (0.5ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.4ms)[0m  BEGIN
-----------------------------------------------------------------------------
UserTest: test: A given user should not be valid if login name is too short. 
-----------------------------------------------------------------------------
  [1m[36mUser Load (1.0ms)[0m  [1mSELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35mUser Exists (1.0ms)[0m  SELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'aaaaa' AND "users"."id" != 1) LIMIT 1
  [1m[36m (0.4ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.5ms)[0m  BEGIN
---------------------------------------------------------------------------------------------
UserTest: test: A given user should not be valid if login name starts with a capital letter. 
---------------------------------------------------------------------------------------------
  [1m[36mUser Load (0.8ms)[0m  [1mSELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35mUser Exists (0.8ms)[0m  SELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'Johns276' AND "users"."id" != 1) LIMIT 1
  [1m[36m (0.5ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.4ms)[0m  BEGIN
------------------------------------------------------------------------------------
UserTest: test: A given user should require a start date if an end date is present. 
------------------------------------------------------------------------------------
  [1m[36mUser Load (0.9ms)[0m  [1mSELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35mUser Exists (0.9ms)[0m  SELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1
  [1m[36m (0.4ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.4ms)[0m  BEGIN
--------------------------------------------------------------------------------
UserTest: test: A given user should require an end date on or after start date. 
--------------------------------------------------------------------------------
  [1m[36mUser Load (0.9ms)[0m  [1mSELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35mUser Exists (0.9ms)[0m  SELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1
  [1m[36m (0.5ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.4ms)[0m  BEGIN
---------------------------------------------------------------------
UserTest: test: User should allow first_name to be set to "Charles". 
---------------------------------------------------------------------
  [1m[36mUser Exists (0.6ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.8ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.4ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.4ms)[0m  BEGIN
--------------------------------------------------------------------------
UserTest: test: User should ensure first_name has a length of at least 2. 
--------------------------------------------------------------------------
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.5ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.8ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35m (0.4ms)[0m  ROLLBACK
  [1m[36m (0.4ms)[0m  [1mBEGIN[0m
---------------------------------------------------------------------------
UserTest: test: User should ensure first_name has a length of at most 254. 
---------------------------------------------------------------------------
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.6ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.6ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.9ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
-------------------------------------------------------------------------
UserTest: test: User should ensure last_name has a length of at least 2. 
-------------------------------------------------------------------------
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.6ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35m (0.4ms)[0m  ROLLBACK
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
--------------------------------------------------------------------------
UserTest: test: User should ensure last_name has a length of at most 254. 
--------------------------------------------------------------------------
  [1m[35mUser Exists (0.6ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.5ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.6ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.4ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
--------------------------------------------------------------------------
UserTest: test: User should ensure login_name has a length of at least 6. 
--------------------------------------------------------------------------
  [1m[36mUser Exists (0.8ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxx' LIMIT 1[0m
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxx' LIMIT 1
  [1m[36mUser Exists (0.8ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxx' LIMIT 1[0m
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxx' LIMIT 1
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxx' LIMIT 1[0m
  [1m[35m (0.3ms)[0m  ROLLBACK
  [1m[36m (0.4ms)[0m  [1mBEGIN[0m
---------------------------------------------------------------------------
UserTest: test: User should ensure login_name has a length of at most 254. 
---------------------------------------------------------------------------
  [1m[35mUser Exists (0.6ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' LIMIT 1
  [1m[36mUser Exists (0.5ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' LIMIT 1[0m
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' LIMIT 1
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' LIMIT 1[0m
  [1m[35mUser Exists (0.5ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' LIMIT 1
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
----------------------------------------------
UserTest: test: User should have many phones. 
----------------------------------------------
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
-------------------------------------------------------------------------
UserTest: test: User should not allow first_name to be set to "charles". 
-------------------------------------------------------------------------
  [1m[36mUser Exists (0.6ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (6.3ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
--------------------------------------------------------------------------------
UserTest: test: User should require case sensitive unique value for login_name. 
--------------------------------------------------------------------------------
  [1m[36mUser Load (0.9ms)[0m  [1mSELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'orstedma' LIMIT 1
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'orstedma' LIMIT 1[0m
  [1m[35m (0.4ms)[0m  ROLLBACK
  [1m[36m (0.4ms)[0m  [1mBEGIN[0m
----------------------------------------------------------
UserTest: test: User should require first_name to be set. 
----------------------------------------------------------
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35m (0.3ms)[0m  ROLLBACK
  [1m[36m (0.4ms)[0m  [1mBEGIN[0m
---------------------------------------------------------
UserTest: test: User should require last_name to be set. 
---------------------------------------------------------
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.8ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35m (0.4ms)[0m  ROLLBACK
  [1m[36m (0.4ms)[0m  [1mBEGIN[0m
----------------------------------------------------------
UserTest: test: User should require login_name to be set. 
----------------------------------------------------------
  [1m[35mUser Exists (0.6ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.6ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35m (0.3ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
----------------------------------------------------------
UserTest: test: User should require start_date to be set. 
----------------------------------------------------------
  [1m[35mUser Exists (0.9ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.5ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35m (0.4ms)[0m  ROLLBACK
  [1m[36m (126.5ms)[0m  [1mDROP DATABASE IF EXISTS "ritrack_test"[0m
  [1m[35m (691.0ms)[0m  CREATE DATABASE "ritrack_test" ENCODING = 'unicode'
  [1m[36mSQL (46.1ms)[0m  [1mCREATE EXTENSION IF NOT EXISTS "plpgsql"[0m
  [1m[35m (94.4ms)[0m  CREATE TABLE "phones" ("id" serial primary key, "number" character varying(255), "tag" character varying(255), "user_id" integer, "created_at" timestamp, "updated_at" timestamp) 
  [1m[36m (49.7ms)[0m  [1mCREATE INDEX "index_phones_on_number" ON "phones" USING btree ("number")[0m
  [1m[35m (51.5ms)[0m  CREATE INDEX "index_phones_on_user_id" ON "phones" USING btree ("user_id")
  [1m[36m (105.2ms)[0m  [1mCREATE TABLE "users" ("id" serial primary key, "first_name" character varying(255), "last_name" character varying(255), "nick_name" character varying(255), "login_name" character varying(255), "notes" text, "created_at" timestamp, "updated_at" timestamp, "start_date" date, "end_date" date) [0m
  [1m[35m (10.8ms)[0m  CREATE TABLE "schema_migrations" ("version" character varying(255) NOT NULL) 
  [1m[36m (62.7ms)[0m  [1mCREATE UNIQUE INDEX "unique_schema_migrations" ON "schema_migrations" ("version")[0m
  [1m[35m (1.0ms)[0m  SELECT version FROM "schema_migrations"
  [1m[36m (5.8ms)[0m  [1mINSERT INTO "schema_migrations" (version) VALUES ('20130816142047')[0m
  [1m[35m (8.1ms)[0m  INSERT INTO "schema_migrations" (version) VALUES ('20130811212425')
  [1m[36m (7.7ms)[0m  [1mINSERT INTO "schema_migrations" (version) VALUES ('20130811195620')[0m
  [1m[35m (8.0ms)[0m  INSERT INTO "schema_migrations" (version) VALUES ('20130811193133')
  [1m[36m (8.0ms)[0m  [1mINSERT INTO "schema_migrations" (version) VALUES ('20130811195557')[0m
  [1m[35mActiveRecord::SchemaMigration Load (1.1ms)[0m  SELECT "schema_migrations".* FROM "schema_migrations"
  [1m[36mActiveRecord::SchemaMigration Load (0.6ms)[0m  [1mSELECT "schema_migrations".* FROM "schema_migrations"[0m
  [1m[35m (1.3ms)[0m  ALTER TABLE "phones" DISABLE TRIGGER ALL;ALTER TABLE "users" DISABLE TRIGGER ALL;ALTER TABLE "schema_migrations" DISABLE TRIGGER ALL
  [1m[36m (0.6ms)[0m  [1mBEGIN[0m
  [1m[35mFixture Delete (1.1ms)[0m  DELETE FROM "users"
  [1m[36mFixture Insert (1.4ms)[0m  [1mINSERT INTO "users" ("id", "first_name", "last_name", "nick_name", "login_name", "start_date", "end_date", "notes", "created_at", "updated_at") VALUES (1, 'Michael', 'Orsted', 'Mike', 'orstedma', '2012-02-04', NULL, 'This user lives in Chicago.', '2013-08-16 20:42:44', '2013-08-16 20:42:44')[0m
  [1m[35mFixture Insert (1.0ms)[0m  INSERT INTO "users" ("id", "first_name", "last_name", "nick_name", "login_name", "start_date", "end_date", "notes", "created_at", "updated_at") VALUES (2, 'Frederick', 'Free-Loader', 'Frederick', 'freelofw', '2012-03-04', NULL, 'This user is completely useless', '2013-08-16 20:42:44', '2013-08-16 20:42:44')
  [1m[36mFixture Insert (0.8ms)[0m  [1mINSERT INTO "users" ("id", "first_name", "last_name", "nick_name", "login_name", "start_date", "end_date", "notes", "created_at", "updated_at") VALUES (3, 'Michael', 'Winstead', 'Mike', 'winstem', '2012-02-04', '2013-08-12', 'This user lives in New York. This user is disabled in the system.', '2013-08-16 20:42:44', '2013-08-16 20:42:44')[0m
  [1m[35mFixture Insert (0.8ms)[0m  INSERT INTO "users" ("id", "first_name", "last_name", "nick_name", "login_name", "start_date", "end_date", "notes", "created_at", "updated_at") VALUES (4, 'Allison', 'Wilson', 'Alli', 'wilsona', '2012-03-04', NULL, 'Electrical engineer.', '2013-08-16 20:42:44', '2013-08-16 20:42:44')
  [1m[36mFixture Delete (1.1ms)[0m  [1mDELETE FROM "phones"[0m
  [1m[35mFixture Insert (1.3ms)[0m  INSERT INTO "phones" ("id", "number", "tag", "user_id", "created_at", "updated_at") VALUES (1, '(211) 234-1111', 'Office', 1, '2013-08-16 20:42:44', '2013-08-16 20:42:44')
  [1m[36mFixture Insert (0.9ms)[0m  [1mINSERT INTO "phones" ("id", "number", "tag", "user_id", "created_at", "updated_at") VALUES (2, '(222) 345-2222', 'Home', 1, '2013-08-16 20:42:44', '2013-08-16 20:42:44')[0m
  [1m[35mFixture Insert (0.8ms)[0m  INSERT INTO "phones" ("id", "number", "tag", "user_id", "created_at", "updated_at") VALUES (3, '(333) 456-3333', 'Mobile', 1, '2013-08-16 20:42:44', '2013-08-16 20:42:44')
  [1m[36mFixture Insert (0.8ms)[0m  [1mINSERT INTO "phones" ("id", "number", "tag", "user_id", "created_at", "updated_at") VALUES (4, '(444) 567-4444', 'Pager', 1, '2013-08-16 20:42:44', '2013-08-16 20:42:44')[0m
  [1m[35mFixture Insert (0.8ms)[0m  INSERT INTO "phones" ("id", "number", "tag", "user_id", "created_at", "updated_at") VALUES (5, '(555) 678-5555', 'Mobile', 1, '2013-08-16 20:42:44', '2013-08-16 20:42:44')
  [1m[36mFixture Insert (0.7ms)[0m  [1mINSERT INTO "phones" ("id", "number", "tag", "user_id", "created_at", "updated_at") VALUES (6, '(666) 789-6666', 'Mobile', 1, '2013-08-16 20:42:44', '2013-08-16 20:42:44')[0m
  [1m[35m (3.0ms)[0m  COMMIT
  [1m[36m (0.7ms)[0m  [1mALTER TABLE "phones" ENABLE TRIGGER ALL;ALTER TABLE "users" ENABLE TRIGGER ALL;ALTER TABLE "schema_migrations" ENABLE TRIGGER ALL[0m
  [1m[35m (0.4ms)[0m  BEGIN
----------------------------------------------------------
PhoneTest: test: A given phone should be initially valid. 
----------------------------------------------------------
  [1m[36mPhone Load (1.8ms)[0m  [1mSELECT "phones".* FROM "phones" ORDER BY "phones"."id" ASC LIMIT 1[0m
  [1m[35m (0.5ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
-----------------------------------------------------------------------------------------------------------
PhoneTest: test: A given phone should not be valid with a poorly formatted 10 digit North American number. 
-----------------------------------------------------------------------------------------------------------
  [1m[35mPhone Load (1.0ms)[0m  SELECT "phones".* FROM "phones" ORDER BY "phones"."id" ASC LIMIT 1
  [1m[36m (0.4ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
-------------------------------------------------------------------------------------------------
PhoneTest: test: A given phone should optionally require a valid 10-digit North American number. 
-------------------------------------------------------------------------------------------------
  [1m[36mPhone Load (1.0ms)[0m  [1mSELECT "phones".* FROM "phones" ORDER BY "phones"."id" ASC LIMIT 1[0m
  [1m[35m (0.4ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
----------------------------------------------
PhoneTest: test: Phone should belong to user. 
----------------------------------------------
  [1m[35m (0.4ms)[0m  ROLLBACK
  [1m[36m (0.4ms)[0m  [1mBEGIN[0m
------------------------------------------------------------------------------------------------
PhoneTest: test: Phone should ensure inclusion of tag in ["Home", "Office", "Mobile", "Pager"]. 
------------------------------------------------------------------------------------------------
  [1m[35m (0.3ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
------------------------------------------------------------------------
PhoneTest: test: Phone should ensure number has a length of at least 7. 
------------------------------------------------------------------------
  [1m[35m (0.3ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
------------------------------------------------------------------------
PhoneTest: test: Phone should ensure number has a length of at most 17. 
------------------------------------------------------------------------
  [1m[35m (0.3ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
--------------------------------------------------------
PhoneTest: test: Phone should require number to be set. 
--------------------------------------------------------
  [1m[35m (0.5ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
-----------------------------------------------------
PhoneTest: test: Phone should require tag to be set. 
-----------------------------------------------------
  [1m[35m (0.3ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
---------------------------------------------------------
PhoneTest: test: Phone should require user_id to be set. 
---------------------------------------------------------
  [1m[35m (0.4ms)[0m  ROLLBACK
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
--------------------------------------------------------
UserTest: test: A given user should be valid initially. 
--------------------------------------------------------
  [1m[35mUser Load (0.8ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (0.9ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.5ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
-----------------------------------------------------------------------
UserTest: test: A given user should not be valid if first name is nil. 
-----------------------------------------------------------------------
  [1m[35mUser Load (0.8ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (0.8ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.3ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
----------------------------------------------------------------------------
UserTest: test: A given user should not be valid if first name is too long. 
----------------------------------------------------------------------------
  [1m[35mUser Load (0.8ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (0.9ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.3ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
-----------------------------------------------------------------------------
UserTest: test: A given user should not be valid if first name is too short. 
-----------------------------------------------------------------------------
  [1m[35mUser Load (0.7ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (0.6ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.3ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
------------------------------------------------------------------------------------------------
UserTest: test: A given user should not be valid if first name starts with a lower case letter. 
------------------------------------------------------------------------------------------------
  [1m[35mUser Load (0.6ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (0.8ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.3ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
----------------------------------------------------------------------
UserTest: test: A given user should not be valid if last name is nil. 
----------------------------------------------------------------------
  [1m[35mUser Load (0.9ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (0.8ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.3ms)[0m  ROLLBACK
  [1m[36m (0.4ms)[0m  [1mBEGIN[0m
---------------------------------------------------------------------------
UserTest: test: A given user should not be valid if last name is too long. 
---------------------------------------------------------------------------
  [1m[35mUser Load (1.0ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (0.8ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.4ms)[0m  ROLLBACK
  [1m[36m (0.6ms)[0m  [1mBEGIN[0m
----------------------------------------------------------------------------
UserTest: test: A given user should not be valid if last name is too short. 
----------------------------------------------------------------------------
  [1m[35mUser Load (1.0ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (0.9ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.5ms)[0m  ROLLBACK
  [1m[36m (0.4ms)[0m  [1mBEGIN[0m
---------------------------------------------------------------------------------------------
UserTest: test: A given user should not be valid if login name has non-alphanumeric letters. 
---------------------------------------------------------------------------------------------
  [1m[35mUser Load (1.1ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (1.0ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'johns-276' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.6ms)[0m  ROLLBACK
  [1m[36m (0.4ms)[0m  [1mBEGIN[0m
-------------------------------------------------------------------------------
UserTest: test: A given user should not be valid if login name is a duplicate. 
-------------------------------------------------------------------------------
  [1m[35mUser Load (1.0ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36m (0.4ms)[0m  [1mSAVEPOINT active_record_1[0m
  [1m[35mUser Exists (0.6ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'orstedma' LIMIT 1
  [1m[36m (0.5ms)[0m  [1mROLLBACK TO SAVEPOINT active_record_1[0m
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'orstedma' LIMIT 1
  [1m[36m (0.4ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
-----------------------------------------------------------------------
UserTest: test: A given user should not be valid if login name is nil. 
-----------------------------------------------------------------------
  [1m[36mUser Load (1.1ms)[0m  [1mSELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE ("users"."login_name" IS NULL AND "users"."id" != 1) LIMIT 1
  [1m[36m (0.5ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
----------------------------------------------------------------------------
UserTest: test: A given user should not be valid if login name is too long. 
----------------------------------------------------------------------------
  [1m[36mUser Load (0.9ms)[0m  [1mSELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35mUser Exists (0.9ms)[0m  SELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'abbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb' AND "users"."id" != 1) LIMIT 1
  [1m[36m (0.4ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.4ms)[0m  BEGIN
-----------------------------------------------------------------------------
UserTest: test: A given user should not be valid if login name is too short. 
-----------------------------------------------------------------------------
  [1m[36mUser Load (0.9ms)[0m  [1mSELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35mUser Exists (0.8ms)[0m  SELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'aaaaa' AND "users"."id" != 1) LIMIT 1
  [1m[36m (0.4ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.4ms)[0m  BEGIN
---------------------------------------------------------------------------------------------
UserTest: test: A given user should not be valid if login name starts with a capital letter. 
---------------------------------------------------------------------------------------------
  [1m[36mUser Load (1.0ms)[0m  [1mSELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35mUser Exists (1.0ms)[0m  SELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'Johns276' AND "users"."id" != 1) LIMIT 1
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.4ms)[0m  BEGIN
------------------------------------------------------------------------------------
UserTest: test: A given user should require a start date if an end date is present. 
------------------------------------------------------------------------------------
  [1m[36mUser Load (0.9ms)[0m  [1mSELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35mUser Exists (0.8ms)[0m  SELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1
  [1m[36m (0.2ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.4ms)[0m  BEGIN
--------------------------------------------------------------------------------
UserTest: test: A given user should require an end date on or after start date. 
--------------------------------------------------------------------------------
  [1m[36mUser Load (0.8ms)[0m  [1mSELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.4ms)[0m  BEGIN
---------------------------------------------------------------------
UserTest: test: User should allow first_name to be set to "Charles". 
---------------------------------------------------------------------
  [1m[36mUser Exists (0.9ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
--------------------------------------------------------------------------
UserTest: test: User should ensure first_name has a length of at least 2. 
--------------------------------------------------------------------------
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.6ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.9ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.5ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.5ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35m (0.2ms)[0m  ROLLBACK
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
---------------------------------------------------------------------------
UserTest: test: User should ensure first_name has a length of at most 254. 
---------------------------------------------------------------------------
  [1m[35mUser Exists (0.5ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.5ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (1.3ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
-------------------------------------------------------------------------
UserTest: test: User should ensure last_name has a length of at least 2. 
-------------------------------------------------------------------------
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.6ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.6ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35m (0.3ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
--------------------------------------------------------------------------
UserTest: test: User should ensure last_name has a length of at most 254. 
--------------------------------------------------------------------------
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.6ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
--------------------------------------------------------------------------
UserTest: test: User should ensure login_name has a length of at least 6. 
--------------------------------------------------------------------------
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxx' LIMIT 1[0m
  [1m[35mUser Exists (0.6ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxx' LIMIT 1
  [1m[36mUser Exists (0.8ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxx' LIMIT 1[0m
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxx' LIMIT 1
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxx' LIMIT 1[0m
  [1m[35m (0.4ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
---------------------------------------------------------------------------
UserTest: test: User should ensure login_name has a length of at most 254. 
---------------------------------------------------------------------------
  [1m[35mUser Exists (0.6ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' LIMIT 1
  [1m[36mUser Exists (0.9ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' LIMIT 1[0m
  [1m[35mUser Exists (0.5ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' LIMIT 1
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' LIMIT 1[0m
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' LIMIT 1
  [1m[36m (0.2ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.2ms)[0m  BEGIN
----------------------------------------------
UserTest: test: User should have many phones. 
----------------------------------------------
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.4ms)[0m  BEGIN
-------------------------------------------------------------------------
UserTest: test: User should not allow first_name to be set to "charles". 
-------------------------------------------------------------------------
  [1m[36mUser Exists (0.9ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (5.4ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.5ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.4ms)[0m  BEGIN
--------------------------------------------------------------------------------
UserTest: test: User should require case sensitive unique value for login_name. 
--------------------------------------------------------------------------------
  [1m[36mUser Load (1.1ms)[0m  [1mSELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35mUser Exists (0.9ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'orstedma' LIMIT 1
  [1m[36mUser Exists (0.5ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'orstedma' LIMIT 1[0m
  [1m[35m (0.4ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
----------------------------------------------------------
UserTest: test: User should require first_name to be set. 
----------------------------------------------------------
  [1m[35mUser Exists (0.6ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.6ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35m (0.3ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
---------------------------------------------------------
UserTest: test: User should require last_name to be set. 
---------------------------------------------------------
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.6ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35m (0.2ms)[0m  ROLLBACK
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
----------------------------------------------------------
UserTest: test: User should require login_name to be set. 
----------------------------------------------------------
  [1m[35mUser Exists (0.5ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35m (0.4ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
----------------------------------------------------------
UserTest: test: User should require start_date to be set. 
----------------------------------------------------------
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.8ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35m (0.4ms)[0m  ROLLBACK
  [1m[36m (127.7ms)[0m  [1mDROP DATABASE IF EXISTS "ritrack_test"[0m
  [1m[35m (749.2ms)[0m  CREATE DATABASE "ritrack_test" ENCODING = 'unicode'
  [1m[36mSQL (46.7ms)[0m  [1mCREATE EXTENSION IF NOT EXISTS "plpgsql"[0m
  [1m[35m (104.7ms)[0m  CREATE TABLE "phones" ("id" serial primary key, "number" character varying(255), "tag" character varying(255), "user_id" integer, "created_at" timestamp, "updated_at" timestamp) 
  [1m[36m (58.1ms)[0m  [1mCREATE INDEX "index_phones_on_number" ON "phones" USING btree ("number")[0m
  [1m[35m (59.3ms)[0m  CREATE INDEX "index_phones_on_user_id" ON "phones" USING btree ("user_id")
  [1m[36m (97.0ms)[0m  [1mCREATE TABLE "users" ("id" serial primary key, "first_name" character varying(255), "last_name" character varying(255), "nick_name" character varying(255), "login_name" character varying(255), "notes" text, "created_at" timestamp, "updated_at" timestamp, "start_date" date, "end_date" date) [0m
  [1m[35m (10.8ms)[0m  CREATE TABLE "schema_migrations" ("version" character varying(255) NOT NULL) 
  [1m[36m (54.5ms)[0m  [1mCREATE UNIQUE INDEX "unique_schema_migrations" ON "schema_migrations" ("version")[0m
  [1m[35m (1.2ms)[0m  SELECT version FROM "schema_migrations"
  [1m[36m (5.6ms)[0m  [1mINSERT INTO "schema_migrations" (version) VALUES ('20130816142047')[0m
  [1m[35m (7.8ms)[0m  INSERT INTO "schema_migrations" (version) VALUES ('20130811212425')
  [1m[36m (7.9ms)[0m  [1mINSERT INTO "schema_migrations" (version) VALUES ('20130811195620')[0m
  [1m[35m (8.0ms)[0m  INSERT INTO "schema_migrations" (version) VALUES ('20130811193133')
  [1m[36m (8.0ms)[0m  [1mINSERT INTO "schema_migrations" (version) VALUES ('20130811195557')[0m
  [1m[35mActiveRecord::SchemaMigration Load (1.0ms)[0m  SELECT "schema_migrations".* FROM "schema_migrations"
  [1m[36mActiveRecord::SchemaMigration Load (0.7ms)[0m  [1mSELECT "schema_migrations".* FROM "schema_migrations"[0m
  [1m[35m (1.3ms)[0m  ALTER TABLE "phones" DISABLE TRIGGER ALL;ALTER TABLE "users" DISABLE TRIGGER ALL;ALTER TABLE "schema_migrations" DISABLE TRIGGER ALL
  [1m[36m (0.6ms)[0m  [1mBEGIN[0m
  [1m[35mFixture Delete (1.1ms)[0m  DELETE FROM "users"
  [1m[36mFixture Insert (1.4ms)[0m  [1mINSERT INTO "users" ("id", "first_name", "last_name", "nick_name", "login_name", "start_date", "end_date", "notes", "created_at", "updated_at") VALUES (1, 'Michael', 'Orsted', 'Mike', 'orstedma', '2012-02-04', NULL, 'This user lives in Chicago.', '2013-08-17 00:43:11', '2013-08-17 00:43:11')[0m
  [1m[35mFixture Insert (0.9ms)[0m  INSERT INTO "users" ("id", "first_name", "last_name", "nick_name", "login_name", "start_date", "end_date", "notes", "created_at", "updated_at") VALUES (2, 'Frederick', 'Free-Loader', 'Frederick', 'freelofw', '2012-03-04', NULL, 'This user is completely useless', '2013-08-17 00:43:11', '2013-08-17 00:43:11')
  [1m[36mFixture Insert (0.8ms)[0m  [1mINSERT INTO "users" ("id", "first_name", "last_name", "nick_name", "login_name", "start_date", "end_date", "notes", "created_at", "updated_at") VALUES (3, 'Michael', 'Winstead', 'Mike', 'winstem', '2012-02-04', '2013-08-12', 'This user lives in New York. This user is disabled in the system.', '2013-08-17 00:43:11', '2013-08-17 00:43:11')[0m
  [1m[35mFixture Insert (0.8ms)[0m  INSERT INTO "users" ("id", "first_name", "last_name", "nick_name", "login_name", "start_date", "end_date", "notes", "created_at", "updated_at") VALUES (4, 'Allison', 'Wilson', 'Alli', 'wilsona', '2012-03-04', NULL, 'Electrical engineer.', '2013-08-17 00:43:11', '2013-08-17 00:43:11')
  [1m[36mFixture Delete (1.1ms)[0m  [1mDELETE FROM "phones"[0m
  [1m[35mFixture Insert (1.3ms)[0m  INSERT INTO "phones" ("id", "number", "tag", "user_id", "created_at", "updated_at") VALUES (1, '(211) 234-1111', 'Office', 1, '2013-08-17 00:43:11', '2013-08-17 00:43:11')
  [1m[36mFixture Insert (1.0ms)[0m  [1mINSERT INTO "phones" ("id", "number", "tag", "user_id", "created_at", "updated_at") VALUES (2, '(222) 345-2222', 'Home', 1, '2013-08-17 00:43:11', '2013-08-17 00:43:11')[0m
  [1m[35mFixture Insert (0.8ms)[0m  INSERT INTO "phones" ("id", "number", "tag", "user_id", "created_at", "updated_at") VALUES (3, '(333) 456-3333', 'Mobile', 1, '2013-08-17 00:43:11', '2013-08-17 00:43:11')
  [1m[36mFixture Insert (0.7ms)[0m  [1mINSERT INTO "phones" ("id", "number", "tag", "user_id", "created_at", "updated_at") VALUES (4, '(444) 567-4444', 'Pager', 1, '2013-08-17 00:43:11', '2013-08-17 00:43:11')[0m
  [1m[35mFixture Insert (0.8ms)[0m  INSERT INTO "phones" ("id", "number", "tag", "user_id", "created_at", "updated_at") VALUES (5, '(555) 678-5555', 'Mobile', 1, '2013-08-17 00:43:11', '2013-08-17 00:43:11')
  [1m[36mFixture Insert (0.8ms)[0m  [1mINSERT INTO "phones" ("id", "number", "tag", "user_id", "created_at", "updated_at") VALUES (6, '(666) 789-6666', 'Mobile', 1, '2013-08-17 00:43:11', '2013-08-17 00:43:11')[0m
  [1m[35m (3.3ms)[0m  COMMIT
  [1m[36m (0.5ms)[0m  [1mALTER TABLE "phones" ENABLE TRIGGER ALL;ALTER TABLE "users" ENABLE TRIGGER ALL;ALTER TABLE "schema_migrations" ENABLE TRIGGER ALL[0m
  [1m[35m (0.3ms)[0m  BEGIN
----------------------------------------------------------------------------------------------------------
PhoneTest: test: A given phone should be a valid number with 10 digits and a leading 1 for long distance. 
----------------------------------------------------------------------------------------------------------
  [1m[36mPhone Load (1.6ms)[0m  [1mSELECT "phones".* FROM "phones" ORDER BY "phones"."id" ASC LIMIT 1[0m
  [1m[35m (0.5ms)[0m  ROLLBACK
  [1m[36m (0.4ms)[0m  [1mBEGIN[0m
----------------------------------------------------------
PhoneTest: test: A given phone should be initially valid. 
----------------------------------------------------------
  [1m[35mPhone Load (0.9ms)[0m  SELECT "phones".* FROM "phones" ORDER BY "phones"."id" ASC LIMIT 1
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
-----------------------------------------------------------------------------------------------------------
PhoneTest: test: A given phone should not be valid with a poorly formatted 10 digit North American number. 
-----------------------------------------------------------------------------------------------------------
  [1m[36mPhone Load (0.8ms)[0m  [1mSELECT "phones".* FROM "phones" ORDER BY "phones"."id" ASC LIMIT 1[0m
  [1m[35m (0.5ms)[0m  ROLLBACK
  [1m[36m (0.4ms)[0m  [1mBEGIN[0m
-------------------------------------------------------------------------------------------------
PhoneTest: test: A given phone should optionally require a valid 10-digit North American number. 
-------------------------------------------------------------------------------------------------
  [1m[35mPhone Load (0.8ms)[0m  SELECT "phones".* FROM "phones" ORDER BY "phones"."id" ASC LIMIT 1
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
----------------------------------------------
PhoneTest: test: Phone should belong to user. 
----------------------------------------------
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.4ms)[0m  BEGIN
------------------------------------------------------------------------------------------------
PhoneTest: test: Phone should ensure inclusion of tag in ["Home", "Office", "Mobile", "Pager"]. 
------------------------------------------------------------------------------------------------
  [1m[36m (0.4ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.2ms)[0m  BEGIN
------------------------------------------------------------------------
PhoneTest: test: Phone should ensure number has a length of at least 7. 
------------------------------------------------------------------------
  [1m[36m (0.5ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
------------------------------------------------------------------------
PhoneTest: test: Phone should ensure number has a length of at most 17. 
------------------------------------------------------------------------
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
--------------------------------------------------------
PhoneTest: test: Phone should require number to be set. 
--------------------------------------------------------
  [1m[36m (0.5ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.4ms)[0m  BEGIN
-----------------------------------------------------
PhoneTest: test: Phone should require tag to be set. 
-----------------------------------------------------
  [1m[36m (0.4ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.4ms)[0m  BEGIN
---------------------------------------------------------
PhoneTest: test: Phone should require user_id to be set. 
---------------------------------------------------------
  [1m[36m (0.5ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
--------------------------------------------------------
UserTest: test: A given user should be valid initially. 
--------------------------------------------------------
  [1m[36mUser Load (0.9ms)[0m  [1mSELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35mUser Exists (1.9ms)[0m  SELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1
  [1m[36m (0.5ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
-----------------------------------------------------------------------
UserTest: test: A given user should not be valid if first name is nil. 
-----------------------------------------------------------------------
  [1m[36mUser Load (0.8ms)[0m  [1mSELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35mUser Exists (0.8ms)[0m  SELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1
  [1m[36m (0.4ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
----------------------------------------------------------------------------
UserTest: test: A given user should not be valid if first name is too long. 
----------------------------------------------------------------------------
  [1m[36mUser Load (0.8ms)[0m  [1mSELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35mUser Exists (0.8ms)[0m  SELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1
  [1m[36m (0.2ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.2ms)[0m  BEGIN
-----------------------------------------------------------------------------
UserTest: test: A given user should not be valid if first name is too short. 
-----------------------------------------------------------------------------
  [1m[36mUser Load (0.6ms)[0m  [1mSELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35mUser Exists (0.5ms)[0m  SELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.4ms)[0m  BEGIN
------------------------------------------------------------------------------------------------
UserTest: test: A given user should not be valid if first name starts with a lower case letter. 
------------------------------------------------------------------------------------------------
  [1m[36mUser Load (0.9ms)[0m  [1mSELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35mUser Exists (0.9ms)[0m  SELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1
  [1m[36m (0.4ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.4ms)[0m  BEGIN
----------------------------------------------------------------------
UserTest: test: A given user should not be valid if last name is nil. 
----------------------------------------------------------------------
  [1m[36mUser Load (0.9ms)[0m  [1mSELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35mUser Exists (0.9ms)[0m  SELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1
  [1m[36m (0.4ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
---------------------------------------------------------------------------
UserTest: test: A given user should not be valid if last name is too long. 
---------------------------------------------------------------------------
  [1m[36mUser Load (1.1ms)[0m  [1mSELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
----------------------------------------------------------------------------
UserTest: test: A given user should not be valid if last name is too short. 
----------------------------------------------------------------------------
  [1m[36mUser Load (0.8ms)[0m  [1mSELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35mUser Exists (0.9ms)[0m  SELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1
  [1m[36m (0.4ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
---------------------------------------------------------------------------------------------
UserTest: test: A given user should not be valid if login name has non-alphanumeric letters. 
---------------------------------------------------------------------------------------------
  [1m[36mUser Load (1.0ms)[0m  [1mSELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35mUser Exists (1.0ms)[0m  SELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'johns-276' AND "users"."id" != 1) LIMIT 1
  [1m[36m (0.5ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.4ms)[0m  BEGIN
-------------------------------------------------------------------------------
UserTest: test: A given user should not be valid if login name is a duplicate. 
-------------------------------------------------------------------------------
  [1m[36mUser Load (1.1ms)[0m  [1mSELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35m (0.6ms)[0m  SAVEPOINT active_record_1
  [1m[36mUser Exists (0.9ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'orstedma' LIMIT 1[0m
  [1m[35m (0.4ms)[0m  ROLLBACK TO SAVEPOINT active_record_1
  [1m[36mUser Exists (0.9ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'orstedma' LIMIT 1[0m
  [1m[35m (0.4ms)[0m  ROLLBACK
  [1m[36m (0.4ms)[0m  [1mBEGIN[0m
-----------------------------------------------------------------------
UserTest: test: A given user should not be valid if login name is nil. 
-----------------------------------------------------------------------
  [1m[35mUser Load (1.0ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (0.9ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" IS NULL AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.5ms)[0m  ROLLBACK
  [1m[36m (0.4ms)[0m  [1mBEGIN[0m
----------------------------------------------------------------------------
UserTest: test: A given user should not be valid if login name is too long. 
----------------------------------------------------------------------------
  [1m[35mUser Load (1.1ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (0.8ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'abbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.4ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
-----------------------------------------------------------------------------
UserTest: test: A given user should not be valid if login name is too short. 
-----------------------------------------------------------------------------
  [1m[35mUser Load (1.0ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (1.0ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'aaaaa' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.5ms)[0m  ROLLBACK
  [1m[36m (0.4ms)[0m  [1mBEGIN[0m
---------------------------------------------------------------------------------------------
UserTest: test: A given user should not be valid if login name starts with a capital letter. 
---------------------------------------------------------------------------------------------
  [1m[35mUser Load (1.0ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'Johns276' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.5ms)[0m  ROLLBACK
  [1m[36m (0.5ms)[0m  [1mBEGIN[0m
------------------------------------------------------------------------------------
UserTest: test: A given user should require a start date if an end date is present. 
------------------------------------------------------------------------------------
  [1m[35mUser Load (1.0ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (1.0ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.4ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
--------------------------------------------------------------------------------
UserTest: test: A given user should require an end date on or after start date. 
--------------------------------------------------------------------------------
  [1m[35mUser Load (1.1ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.4ms)[0m  ROLLBACK
  [1m[36m (0.4ms)[0m  [1mBEGIN[0m
---------------------------------------------------------------------
UserTest: test: User should allow first_name to be set to "Charles". 
---------------------------------------------------------------------
  [1m[35mUser Exists (0.6ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.8ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35m (0.4ms)[0m  ROLLBACK
  [1m[36m (0.4ms)[0m  [1mBEGIN[0m
--------------------------------------------------------------------------
UserTest: test: User should ensure first_name has a length of at least 2. 
--------------------------------------------------------------------------
  [1m[35mUser Exists (0.9ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.6ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.8ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.5ms)[0m  BEGIN
---------------------------------------------------------------------------
UserTest: test: User should ensure first_name has a length of at most 254. 
---------------------------------------------------------------------------
  [1m[36mUser Exists (0.9ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (4.6ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35m (0.4ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
-------------------------------------------------------------------------
UserTest: test: User should ensure last_name has a length of at least 2. 
-------------------------------------------------------------------------
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.8ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.8ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.8ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.6ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.4ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.4ms)[0m  BEGIN
--------------------------------------------------------------------------
UserTest: test: User should ensure last_name has a length of at most 254. 
--------------------------------------------------------------------------
  [1m[36mUser Exists (0.6ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.6ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.5ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35m (0.4ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
--------------------------------------------------------------------------
UserTest: test: User should ensure login_name has a length of at least 6. 
--------------------------------------------------------------------------
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxx' LIMIT 1
  [1m[36mUser Exists (0.6ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxx' LIMIT 1[0m
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxx' LIMIT 1
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxx' LIMIT 1[0m
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxx' LIMIT 1
  [1m[36m (0.5ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.4ms)[0m  BEGIN
---------------------------------------------------------------------------
UserTest: test: User should ensure login_name has a length of at most 254. 
---------------------------------------------------------------------------
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' LIMIT 1[0m
  [1m[35mUser Exists (0.5ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' LIMIT 1
  [1m[36mUser Exists (0.6ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' LIMIT 1[0m
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' LIMIT 1
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' LIMIT 1[0m
  [1m[35m (0.2ms)[0m  ROLLBACK
  [1m[36m (0.1ms)[0m  [1mBEGIN[0m
----------------------------------------------
UserTest: test: User should have many phones. 
----------------------------------------------
  [1m[35m (0.2ms)[0m  ROLLBACK
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
-------------------------------------------------------------------------
UserTest: test: User should not allow first_name to be set to "charles". 
-------------------------------------------------------------------------
  [1m[35mUser Exists (5.1ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35m (0.2ms)[0m  ROLLBACK
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
--------------------------------------------------------------------------------
UserTest: test: User should require case sensitive unique value for login_name. 
--------------------------------------------------------------------------------
  [1m[35mUser Load (0.5ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (0.9ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'orstedma' LIMIT 1[0m
  [1m[35mUser Exists (0.6ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'orstedma' LIMIT 1
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.2ms)[0m  BEGIN
----------------------------------------------------------
UserTest: test: User should require first_name to be set. 
----------------------------------------------------------
  [1m[36mUser Exists (0.6ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.4ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.4ms)[0m  BEGIN
---------------------------------------------------------
UserTest: test: User should require last_name to be set. 
---------------------------------------------------------
  [1m[36mUser Exists (0.5ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.6ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.2ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.2ms)[0m  BEGIN
----------------------------------------------------------
UserTest: test: User should require login_name to be set. 
----------------------------------------------------------
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.4ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
----------------------------------------------------------
UserTest: test: User should require start_date to be set. 
----------------------------------------------------------
  [1m[36mUser Exists (0.6ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.4ms)[0m  [1mROLLBACK[0m
  [1m[36m (220.9ms)[0m  [1mDROP DATABASE IF EXISTS "ritrack_test"[0m
  [1m[35m (724.3ms)[0m  CREATE DATABASE "ritrack_test" ENCODING = 'unicode'
  [1m[36mSQL (44.3ms)[0m  [1mCREATE EXTENSION IF NOT EXISTS "plpgsql"[0m
  [1m[35m (94.3ms)[0m  CREATE TABLE "phones" ("id" serial primary key, "number" character varying(255), "tag" character varying(255), "user_id" integer, "created_at" timestamp, "updated_at" timestamp) 
  [1m[36m (49.7ms)[0m  [1mCREATE INDEX "index_phones_on_number" ON "phones" USING btree ("number")[0m
  [1m[35m (42.6ms)[0m  CREATE INDEX "index_phones_on_user_id" ON "phones" USING btree ("user_id")
  [1m[36m (96.9ms)[0m  [1mCREATE TABLE "users" ("id" serial primary key, "first_name" character varying(255), "last_name" character varying(255), "nick_name" character varying(255), "login_name" character varying(255), "notes" text, "created_at" timestamp, "updated_at" timestamp, "start_date" date, "end_date" date) [0m
  [1m[35m (12.0ms)[0m  CREATE TABLE "schema_migrations" ("version" character varying(255) NOT NULL) 
  [1m[36m (37.8ms)[0m  [1mCREATE UNIQUE INDEX "unique_schema_migrations" ON "schema_migrations" ("version")[0m
  [1m[35m (1.0ms)[0m  SELECT version FROM "schema_migrations"
  [1m[36m (5.9ms)[0m  [1mINSERT INTO "schema_migrations" (version) VALUES ('20130816142047')[0m
  [1m[35m (7.9ms)[0m  INSERT INTO "schema_migrations" (version) VALUES ('20130811212425')
  [1m[36m (8.0ms)[0m  [1mINSERT INTO "schema_migrations" (version) VALUES ('20130811195620')[0m
  [1m[35m (7.9ms)[0m  INSERT INTO "schema_migrations" (version) VALUES ('20130811193133')
  [1m[36m (8.0ms)[0m  [1mINSERT INTO "schema_migrations" (version) VALUES ('20130811195557')[0m
  [1m[35mActiveRecord::SchemaMigration Load (1.1ms)[0m  SELECT "schema_migrations".* FROM "schema_migrations"
  [1m[36mActiveRecord::SchemaMigration Load (0.6ms)[0m  [1mSELECT "schema_migrations".* FROM "schema_migrations"[0m
  [1m[35m (1.3ms)[0m  ALTER TABLE "phones" DISABLE TRIGGER ALL;ALTER TABLE "users" DISABLE TRIGGER ALL;ALTER TABLE "schema_migrations" DISABLE TRIGGER ALL
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
  [1m[35mFixture Delete (1.0ms)[0m  DELETE FROM "users"
  [1m[36mFixture Insert (1.3ms)[0m  [1mINSERT INTO "users" ("id", "first_name", "last_name", "nick_name", "login_name", "start_date", "end_date", "notes", "created_at", "updated_at") VALUES (1, 'Michael', 'Orsted', 'Mike', 'orstedma', '2012-02-04', NULL, 'This user lives in Chicago.', '2013-08-17 00:50:08', '2013-08-17 00:50:08')[0m
  [1m[35mFixture Insert (0.9ms)[0m  INSERT INTO "users" ("id", "first_name", "last_name", "nick_name", "login_name", "start_date", "end_date", "notes", "created_at", "updated_at") VALUES (2, 'Frederick', 'Free-Loader', 'Frederick', 'freelofw', '2012-03-04', NULL, 'This user is completely useless', '2013-08-17 00:50:08', '2013-08-17 00:50:08')
  [1m[36mFixture Insert (0.8ms)[0m  [1mINSERT INTO "users" ("id", "first_name", "last_name", "nick_name", "login_name", "start_date", "end_date", "notes", "created_at", "updated_at") VALUES (3, 'Michael', 'Winstead', 'Mike', 'winstem', '2012-02-04', '2013-08-12', 'This user lives in New York. This user is disabled in the system.', '2013-08-17 00:50:08', '2013-08-17 00:50:08')[0m
  [1m[35mFixture Insert (0.8ms)[0m  INSERT INTO "users" ("id", "first_name", "last_name", "nick_name", "login_name", "start_date", "end_date", "notes", "created_at", "updated_at") VALUES (4, 'Allison', 'Wilson', 'Alli', 'wilsona', '2012-03-04', NULL, 'Electrical engineer.', '2013-08-17 00:50:08', '2013-08-17 00:50:08')
  [1m[36mFixture Delete (1.2ms)[0m  [1mDELETE FROM "phones"[0m
  [1m[35mFixture Insert (1.3ms)[0m  INSERT INTO "phones" ("id", "number", "tag", "user_id", "created_at", "updated_at") VALUES (1, '(211) 234-1111', 'Office', 1, '2013-08-17 00:50:08', '2013-08-17 00:50:08')
  [1m[36mFixture Insert (1.0ms)[0m  [1mINSERT INTO "phones" ("id", "number", "tag", "user_id", "created_at", "updated_at") VALUES (2, '(222) 345-2222', 'Home', 1, '2013-08-17 00:50:08', '2013-08-17 00:50:08')[0m
  [1m[35mFixture Insert (0.8ms)[0m  INSERT INTO "phones" ("id", "number", "tag", "user_id", "created_at", "updated_at") VALUES (3, '(333) 456-3333', 'Mobile', 1, '2013-08-17 00:50:08', '2013-08-17 00:50:08')
  [1m[36mFixture Insert (0.8ms)[0m  [1mINSERT INTO "phones" ("id", "number", "tag", "user_id", "created_at", "updated_at") VALUES (4, '(444) 567-4444', 'Pager', 1, '2013-08-17 00:50:08', '2013-08-17 00:50:08')[0m
  [1m[35mFixture Insert (0.8ms)[0m  INSERT INTO "phones" ("id", "number", "tag", "user_id", "created_at", "updated_at") VALUES (5, '(555) 678-5555', 'Mobile', 1, '2013-08-17 00:50:08', '2013-08-17 00:50:08')
  [1m[36mFixture Insert (0.7ms)[0m  [1mINSERT INTO "phones" ("id", "number", "tag", "user_id", "created_at", "updated_at") VALUES (6, '(666) 789-6666', 'Mobile', 1, '2013-08-17 00:50:08', '2013-08-17 00:50:08')[0m
  [1m[35m (6.3ms)[0m  COMMIT
  [1m[36m (0.5ms)[0m  [1mALTER TABLE "phones" ENABLE TRIGGER ALL;ALTER TABLE "users" ENABLE TRIGGER ALL;ALTER TABLE "schema_migrations" ENABLE TRIGGER ALL[0m
  [1m[35m (0.3ms)[0m  BEGIN
----------------------------------------------------------
PhoneTest: test: A given phone should be initially valid. 
----------------------------------------------------------
  [1m[36mPhone Load (1.8ms)[0m  [1mSELECT "phones".* FROM "phones" ORDER BY "phones"."id" ASC LIMIT 1[0m
  [1m[35m (0.3ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
-----------------------------------------------------------------------------------------------------------
PhoneTest: test: A given phone should not be valid with a poorly formatted 10 digit North American number. 
-----------------------------------------------------------------------------------------------------------
  [1m[35mPhone Load (0.8ms)[0m  SELECT "phones".* FROM "phones" ORDER BY "phones"."id" ASC LIMIT 1
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
----------------------------------------------------------------------------------------------------------------------
PhoneTest: test: A given phone should optionally be a valid number with 10 digits with a leading 1 for long distance. 
----------------------------------------------------------------------------------------------------------------------
  [1m[36mPhone Load (0.8ms)[0m  [1mSELECT "phones".* FROM "phones" ORDER BY "phones"."id" ASC LIMIT 1[0m
  [1m[35m (0.3ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
-------------------------------------------------------------------------------------------------
PhoneTest: test: A given phone should optionally require a valid 10-digit North American number. 
-------------------------------------------------------------------------------------------------
  [1m[35mPhone Load (0.8ms)[0m  SELECT "phones".* FROM "phones" ORDER BY "phones"."id" ASC LIMIT 1
  [1m[36m (1.0ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.9ms)[0m  BEGIN
----------------------------------------------
PhoneTest: test: Phone should belong to user. 
----------------------------------------------
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
------------------------------------------------------------------------------------------------
PhoneTest: test: Phone should ensure inclusion of tag in ["Home", "Office", "Mobile", "Pager"]. 
------------------------------------------------------------------------------------------------
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
------------------------------------------------------------------------
PhoneTest: test: Phone should ensure number has a length of at least 7. 
------------------------------------------------------------------------
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
------------------------------------------------------------------------
PhoneTest: test: Phone should ensure number has a length of at most 17. 
------------------------------------------------------------------------
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
--------------------------------------------------------
PhoneTest: test: Phone should require number to be set. 
--------------------------------------------------------
  [1m[36m (0.4ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.4ms)[0m  BEGIN
-----------------------------------------------------
PhoneTest: test: Phone should require tag to be set. 
-----------------------------------------------------
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
---------------------------------------------------------
PhoneTest: test: Phone should require user_id to be set. 
---------------------------------------------------------
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
--------------------------------------------------------
UserTest: test: A given user should be valid initially. 
--------------------------------------------------------
  [1m[36mUser Load (1.0ms)[0m  [1mSELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35mUser Exists (1.9ms)[0m  SELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1
  [1m[36m (0.5ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
-----------------------------------------------------------------------
UserTest: test: A given user should not be valid if first name is nil. 
-----------------------------------------------------------------------
  [1m[36mUser Load (0.8ms)[0m  [1mSELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35mUser Exists (0.9ms)[0m  SELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1
  [1m[36m (0.4ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.4ms)[0m  BEGIN
----------------------------------------------------------------------------
UserTest: test: A given user should not be valid if first name is too long. 
----------------------------------------------------------------------------
  [1m[36mUser Load (1.0ms)[0m  [1mSELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35mUser Exists (0.9ms)[0m  SELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1
  [1m[36m (0.4ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.4ms)[0m  BEGIN
-----------------------------------------------------------------------------
UserTest: test: A given user should not be valid if first name is too short. 
-----------------------------------------------------------------------------
  [1m[36mUser Load (1.1ms)[0m  [1mSELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35mUser Exists (1.0ms)[0m  SELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1
  [1m[36m (0.4ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.4ms)[0m  BEGIN
------------------------------------------------------------------------------------------------
UserTest: test: A given user should not be valid if first name starts with a lower case letter. 
------------------------------------------------------------------------------------------------
  [1m[36mUser Load (1.0ms)[0m  [1mSELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35mUser Exists (1.0ms)[0m  SELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1
  [1m[36m (0.5ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.4ms)[0m  BEGIN
----------------------------------------------------------------------
UserTest: test: A given user should not be valid if last name is nil. 
----------------------------------------------------------------------
  [1m[36mUser Load (1.0ms)[0m  [1mSELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35mUser Exists (0.9ms)[0m  SELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1
  [1m[36m (0.4ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.4ms)[0m  BEGIN
---------------------------------------------------------------------------
UserTest: test: A given user should not be valid if last name is too long. 
---------------------------------------------------------------------------
  [1m[36mUser Load (1.0ms)[0m  [1mSELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35mUser Exists (0.9ms)[0m  SELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1
  [1m[36m (0.4ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.4ms)[0m  BEGIN
----------------------------------------------------------------------------
UserTest: test: A given user should not be valid if last name is too short. 
----------------------------------------------------------------------------
  [1m[36mUser Load (1.0ms)[0m  [1mSELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35mUser Exists (0.9ms)[0m  SELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1
  [1m[36m (0.5ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.4ms)[0m  BEGIN
---------------------------------------------------------------------------------------------
UserTest: test: A given user should not be valid if login name has non-alphanumeric letters. 
---------------------------------------------------------------------------------------------
  [1m[36mUser Load (1.1ms)[0m  [1mSELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35mUser Exists (1.0ms)[0m  SELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'johns-276' AND "users"."id" != 1) LIMIT 1
  [1m[36m (0.4ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.5ms)[0m  BEGIN
-------------------------------------------------------------------------------
UserTest: test: A given user should not be valid if login name is a duplicate. 
-------------------------------------------------------------------------------
  [1m[36mUser Load (1.1ms)[0m  [1mSELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35m (0.5ms)[0m  SAVEPOINT active_record_1
  [1m[36mUser Exists (0.6ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'orstedma' LIMIT 1[0m
  [1m[35m (0.4ms)[0m  ROLLBACK TO SAVEPOINT active_record_1
  [1m[36mUser Exists (0.9ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'orstedma' LIMIT 1[0m
  [1m[35m (0.4ms)[0m  ROLLBACK
  [1m[36m (0.4ms)[0m  [1mBEGIN[0m
-----------------------------------------------------------------------
UserTest: test: A given user should not be valid if login name is nil. 
-----------------------------------------------------------------------
  [1m[35mUser Load (0.8ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (0.9ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" IS NULL AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.4ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
----------------------------------------------------------------------------
UserTest: test: A given user should not be valid if login name is too long. 
----------------------------------------------------------------------------
  [1m[35mUser Load (0.9ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (0.8ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'abbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.4ms)[0m  ROLLBACK
  [1m[36m (0.4ms)[0m  [1mBEGIN[0m
-----------------------------------------------------------------------------
UserTest: test: A given user should not be valid if login name is too short. 
-----------------------------------------------------------------------------
  [1m[35mUser Load (1.0ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (0.9ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'aaaaa' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.4ms)[0m  ROLLBACK
  [1m[36m (0.5ms)[0m  [1mBEGIN[0m
---------------------------------------------------------------------------------------------
UserTest: test: A given user should not be valid if login name starts with a capital letter. 
---------------------------------------------------------------------------------------------
  [1m[35mUser Load (1.2ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (1.0ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'Johns276' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.5ms)[0m  ROLLBACK
  [1m[36m (0.4ms)[0m  [1mBEGIN[0m
------------------------------------------------------------------------------------
UserTest: test: A given user should require a start date if an end date is present. 
------------------------------------------------------------------------------------
  [1m[35mUser Load (1.0ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (0.9ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.4ms)[0m  ROLLBACK
  [1m[36m (0.5ms)[0m  [1mBEGIN[0m
--------------------------------------------------------------------------------
UserTest: test: A given user should require an end date on or after start date. 
--------------------------------------------------------------------------------
  [1m[35mUser Load (1.0ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (0.9ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.5ms)[0m  ROLLBACK
  [1m[36m (0.5ms)[0m  [1mBEGIN[0m
---------------------------------------------------------------------
UserTest: test: User should allow first_name to be set to "Charles". 
---------------------------------------------------------------------
  [1m[35mUser Exists (0.9ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.3ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35m (0.2ms)[0m  ROLLBACK
  [1m[36m (0.1ms)[0m  [1mBEGIN[0m
--------------------------------------------------------------------------
UserTest: test: User should ensure first_name has a length of at least 2. 
--------------------------------------------------------------------------
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.8ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.6ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.2ms)[0m  BEGIN
---------------------------------------------------------------------------
UserTest: test: User should ensure first_name has a length of at most 254. 
---------------------------------------------------------------------------
  [1m[36mUser Exists (0.5ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.6ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.6ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (4.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35m (0.4ms)[0m  ROLLBACK
  [1m[36m (0.4ms)[0m  [1mBEGIN[0m
-------------------------------------------------------------------------
UserTest: test: User should ensure last_name has a length of at least 2. 
-------------------------------------------------------------------------
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.8ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.6ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.6ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.6ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
--------------------------------------------------------------------------
UserTest: test: User should ensure last_name has a length of at most 254. 
--------------------------------------------------------------------------
  [1m[36mUser Exists (0.5ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.6ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.8ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35m (0.4ms)[0m  ROLLBACK
  [1m[36m (0.4ms)[0m  [1mBEGIN[0m
--------------------------------------------------------------------------
UserTest: test: User should ensure login_name has a length of at least 6. 
--------------------------------------------------------------------------
  [1m[35mUser Exists (0.9ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxx' LIMIT 1
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxx' LIMIT 1[0m
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxx' LIMIT 1
  [1m[36mUser Exists (0.6ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxx' LIMIT 1[0m
  [1m[35mUser Exists (0.6ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxx' LIMIT 1
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
---------------------------------------------------------------------------
UserTest: test: User should ensure login_name has a length of at most 254. 
---------------------------------------------------------------------------
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' LIMIT 1[0m
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' LIMIT 1
  [1m[36mUser Exists (0.6ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' LIMIT 1[0m
  [1m[35mUser Exists (0.5ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' LIMIT 1
  [1m[36mUser Exists (0.5ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' LIMIT 1[0m
  [1m[35m (0.4ms)[0m  ROLLBACK
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
----------------------------------------------
UserTest: test: User should have many phones. 
----------------------------------------------
  [1m[35m (0.3ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
-------------------------------------------------------------------------
UserTest: test: User should not allow first_name to be set to "charles". 
-------------------------------------------------------------------------
  [1m[35mUser Exists (5.2ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35m (0.2ms)[0m  ROLLBACK
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
--------------------------------------------------------------------------------
UserTest: test: User should require case sensitive unique value for login_name. 
--------------------------------------------------------------------------------
  [1m[35mUser Load (0.8ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'orstedma' LIMIT 1[0m
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'orstedma' LIMIT 1
  [1m[36m (0.4ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
----------------------------------------------------------
UserTest: test: User should require first_name to be set. 
----------------------------------------------------------
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.4ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
---------------------------------------------------------
UserTest: test: User should require last_name to be set. 
---------------------------------------------------------
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
----------------------------------------------------------
UserTest: test: User should require login_name to be set. 
----------------------------------------------------------
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.4ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.4ms)[0m  BEGIN
----------------------------------------------------------
UserTest: test: User should require start_date to be set. 
----------------------------------------------------------
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.8ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.4ms)[0m  [1mROLLBACK[0m
  [1m[36m (1142.2ms)[0m  [1mDROP DATABASE IF EXISTS "ritrack_test"[0m
  [1m[35m (1357.7ms)[0m  CREATE DATABASE "ritrack_test" ENCODING = 'unicode'
  [1m[36mSQL (1.5ms)[0m  [1mCREATE EXTENSION IF NOT EXISTS "plpgsql"[0m
  [1m[35m (97.5ms)[0m  CREATE TABLE "phones" ("id" serial primary key, "number" character varying(255), "tag" character varying(255), "user_id" integer, "created_at" timestamp, "updated_at" timestamp) 
  [1m[36m (58.1ms)[0m  [1mCREATE INDEX "index_phones_on_number" ON "phones" USING btree ("number")[0m
  [1m[35m (61.7ms)[0m  CREATE INDEX "index_phones_on_user_id" ON "phones" USING btree ("user_id")
  [1m[36m (97.8ms)[0m  [1mCREATE TABLE "users" ("id" serial primary key, "first_name" character varying(255), "last_name" character varying(255), "nick_name" character varying(255), "login_name" character varying(255), "notes" text, "created_at" timestamp, "updated_at" timestamp, "start_date" date, "end_date" date) [0m
  [1m[35m (4.6ms)[0m  CREATE TABLE "schema_migrations" ("version" character varying(255) NOT NULL) 
  [1m[36m (63.8ms)[0m  [1mCREATE UNIQUE INDEX "unique_schema_migrations" ON "schema_migrations" ("version")[0m
  [1m[35m (0.8ms)[0m  SELECT version FROM "schema_migrations"
  [1m[36m (6.3ms)[0m  [1mINSERT INTO "schema_migrations" (version) VALUES ('20130816142047')[0m
  [1m[35m (8.0ms)[0m  INSERT INTO "schema_migrations" (version) VALUES ('20130811212425')
  [1m[36m (8.0ms)[0m  [1mINSERT INTO "schema_migrations" (version) VALUES ('20130811195620')[0m
  [1m[35m (8.0ms)[0m  INSERT INTO "schema_migrations" (version) VALUES ('20130811193133')
  [1m[36m (8.0ms)[0m  [1mINSERT INTO "schema_migrations" (version) VALUES ('20130811195557')[0m
  [1m[35mActiveRecord::SchemaMigration Load (0.6ms)[0m  SELECT "schema_migrations".* FROM "schema_migrations"
  [1m[36mActiveRecord::SchemaMigration Load (0.4ms)[0m  [1mSELECT "schema_migrations".* FROM "schema_migrations"[0m
  [1m[35m (0.7ms)[0m  ALTER TABLE "phones" DISABLE TRIGGER ALL;ALTER TABLE "users" DISABLE TRIGGER ALL;ALTER TABLE "schema_migrations" DISABLE TRIGGER ALL
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
  [1m[35mFixture Delete (0.6ms)[0m  DELETE FROM "phones"
  [1m[36mFixture Insert (1.0ms)[0m  [1mINSERT INTO "phones" ("id", "number", "tag", "user_id", "created_at", "updated_at") VALUES (1, '(211) 234-1111', 'Office', 1, '2013-08-17 20:53:54', '2013-08-17 20:53:54')[0m
  [1m[35mFixture Insert (0.4ms)[0m  INSERT INTO "phones" ("id", "number", "tag", "user_id", "created_at", "updated_at") VALUES (2, '(222) 345-2222', 'Home', 1, '2013-08-17 20:53:54', '2013-08-17 20:53:54')
  [1m[36mFixture Insert (0.4ms)[0m  [1mINSERT INTO "phones" ("id", "number", "tag", "user_id", "created_at", "updated_at") VALUES (3, '(333) 456-3333', 'Mobile', 1, '2013-08-17 20:53:54', '2013-08-17 20:53:54')[0m
  [1m[35mFixture Insert (0.4ms)[0m  INSERT INTO "phones" ("id", "number", "tag", "user_id", "created_at", "updated_at") VALUES (4, '(444) 567-4444', 'Pager', 1, '2013-08-17 20:53:54', '2013-08-17 20:53:54')
  [1m[36mFixture Insert (0.4ms)[0m  [1mINSERT INTO "phones" ("id", "number", "tag", "user_id", "created_at", "updated_at") VALUES (5, '(555) 678-5555', 'Mobile', 1, '2013-08-17 20:53:54', '2013-08-17 20:53:54')[0m
  [1m[35mFixture Insert (0.3ms)[0m  INSERT INTO "phones" ("id", "number", "tag", "user_id", "created_at", "updated_at") VALUES (6, '(666) 789-6666', 'Mobile', 1, '2013-08-17 20:53:54', '2013-08-17 20:53:54')
  [1m[36mFixture Delete (0.5ms)[0m  [1mDELETE FROM "users"[0m
  [1m[35mFixture Insert (0.5ms)[0m  INSERT INTO "users" ("id", "first_name", "last_name", "nick_name", "login_name", "start_date", "end_date", "notes", "created_at", "updated_at") VALUES (1, 'Michael', 'Orsted', 'Mike', 'orstedma', '2012-02-04', NULL, 'This user lives in Chicago.', '2013-08-17 20:53:54', '2013-08-17 20:53:54')
  [1m[36mFixture Insert (0.3ms)[0m  [1mINSERT INTO "users" ("id", "first_name", "last_name", "nick_name", "login_name", "start_date", "end_date", "notes", "created_at", "updated_at") VALUES (2, 'Frederick', 'Free-Loader', 'Frederick', 'freelofw', '2012-03-04', NULL, 'This user is completely useless', '2013-08-17 20:53:54', '2013-08-17 20:53:54')[0m
  [1m[35mFixture Insert (0.3ms)[0m  INSERT INTO "users" ("id", "first_name", "last_name", "nick_name", "login_name", "start_date", "end_date", "notes", "created_at", "updated_at") VALUES (3, 'Michael', 'Winstead', 'Mike', 'winstem', '2012-02-04', '2013-08-12', 'This user lives in New York. This user is disabled in the system.', '2013-08-17 20:53:54', '2013-08-17 20:53:54')
  [1m[36mFixture Insert (0.3ms)[0m  [1mINSERT INTO "users" ("id", "first_name", "last_name", "nick_name", "login_name", "start_date", "end_date", "notes", "created_at", "updated_at") VALUES (4, 'Allison', 'Wilson', 'Alli', 'wilsona', '2012-03-04', NULL, 'Electrical engineer.', '2013-08-17 20:53:54', '2013-08-17 20:53:54')[0m
  [1m[35m (14.5ms)[0m  COMMIT
  [1m[36m (0.4ms)[0m  [1mALTER TABLE "phones" ENABLE TRIGGER ALL;ALTER TABLE "users" ENABLE TRIGGER ALL;ALTER TABLE "schema_migrations" ENABLE TRIGGER ALL[0m
  [1m[35m (0.2ms)[0m  BEGIN
----------------------------------------------------------
PhoneTest: test: A given phone should be initially valid. 
----------------------------------------------------------
  [1m[36mPhone Load (1.0ms)[0m  [1mSELECT "phones".* FROM "phones" ORDER BY "phones"."id" ASC LIMIT 1[0m
  [1m[35m (0.2ms)[0m  ROLLBACK
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
-----------------------------------------------------------------------------------------------------------
PhoneTest: test: A given phone should not be valid with a poorly formatted 10 digit North American number. 
-----------------------------------------------------------------------------------------------------------
  [1m[35mPhone Load (0.5ms)[0m  SELECT "phones".* FROM "phones" ORDER BY "phones"."id" ASC LIMIT 1
  [1m[36m (0.2ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.2ms)[0m  BEGIN
----------------------------------------------------------------------------------------------------------------------
PhoneTest: test: A given phone should optionally be a valid number with 10 digits with a leading 1 for long distance. 
----------------------------------------------------------------------------------------------------------------------
  [1m[36mPhone Load (0.4ms)[0m  [1mSELECT "phones".* FROM "phones" ORDER BY "phones"."id" ASC LIMIT 1[0m
  [1m[35m (0.1ms)[0m  ROLLBACK
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
-------------------------------------------------------------------------------------------------
PhoneTest: test: A given phone should optionally require a valid 10-digit North American number. 
-------------------------------------------------------------------------------------------------
  [1m[35mPhone Load (0.4ms)[0m  SELECT "phones".* FROM "phones" ORDER BY "phones"."id" ASC LIMIT 1
  [1m[36m (0.1ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.1ms)[0m  BEGIN
----------------------------------------------
PhoneTest: test: Phone should belong to user. 
----------------------------------------------
  [1m[36m (0.1ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.2ms)[0m  BEGIN
------------------------------------------------------------------------------------------------
PhoneTest: test: Phone should ensure inclusion of tag in ["Home", "Office", "Mobile", "Pager"]. 
------------------------------------------------------------------------------------------------
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.2ms)[0m  BEGIN
------------------------------------------------------------------------
PhoneTest: test: Phone should ensure number has a length of at least 7. 
------------------------------------------------------------------------
  [1m[36m (0.2ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.2ms)[0m  BEGIN
------------------------------------------------------------------------
PhoneTest: test: Phone should ensure number has a length of at most 17. 
------------------------------------------------------------------------
  [1m[36m (0.2ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.1ms)[0m  BEGIN
--------------------------------------------------------
PhoneTest: test: Phone should require number to be set. 
--------------------------------------------------------
  [1m[36m (0.2ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.1ms)[0m  BEGIN
-----------------------------------------------------
PhoneTest: test: Phone should require tag to be set. 
-----------------------------------------------------
  [1m[36m (0.1ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.1ms)[0m  BEGIN
---------------------------------------------------------
PhoneTest: test: Phone should require user_id to be set. 
---------------------------------------------------------
  [1m[36m (0.2ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.1ms)[0m  BEGIN
--------------------------------------------------------
UserTest: test: A given user should be valid initially. 
--------------------------------------------------------
  [1m[36mUser Load (0.3ms)[0m  [1mSELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35mUser Exists (1.2ms)[0m  SELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.2ms)[0m  BEGIN
-----------------------------------------------------------------------
UserTest: test: A given user should not be valid if first name is nil. 
-----------------------------------------------------------------------
  [1m[36mUser Load (0.5ms)[0m  [1mSELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35mUser Exists (0.3ms)[0m  SELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1
  [1m[36m (0.2ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.2ms)[0m  BEGIN
----------------------------------------------------------------------------
UserTest: test: A given user should not be valid if first name is too long. 
----------------------------------------------------------------------------
  [1m[36mUser Load (0.5ms)[0m  [1mSELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
-----------------------------------------------------------------------------
UserTest: test: A given user should not be valid if first name is too short. 
-----------------------------------------------------------------------------
  [1m[36mUser Load (0.6ms)[0m  [1mSELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35mUser Exists (0.6ms)[0m  SELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1
  [1m[36m (0.2ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.2ms)[0m  BEGIN
------------------------------------------------------------------------------------------------
UserTest: test: A given user should not be valid if first name starts with a lower case letter. 
------------------------------------------------------------------------------------------------
  [1m[36mUser Load (0.5ms)[0m  [1mSELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35mUser Exists (0.5ms)[0m  SELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1
  [1m[36m (0.2ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.2ms)[0m  BEGIN
----------------------------------------------------------------------
UserTest: test: A given user should not be valid if last name is nil. 
----------------------------------------------------------------------
  [1m[36mUser Load (0.6ms)[0m  [1mSELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35mUser Exists (0.5ms)[0m  SELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1
  [1m[36m (0.2ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.2ms)[0m  BEGIN
---------------------------------------------------------------------------
UserTest: test: A given user should not be valid if last name is too long. 
---------------------------------------------------------------------------
  [1m[36mUser Load (0.6ms)[0m  [1mSELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.2ms)[0m  BEGIN
----------------------------------------------------------------------------
UserTest: test: A given user should not be valid if last name is too short. 
----------------------------------------------------------------------------
  [1m[36mUser Load (0.5ms)[0m  [1mSELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1
  [1m[36m (0.2ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.2ms)[0m  BEGIN
---------------------------------------------------------------------------------------------
UserTest: test: A given user should not be valid if login name has non-alphanumeric letters. 
---------------------------------------------------------------------------------------------
  [1m[36mUser Load (0.5ms)[0m  [1mSELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35mUser Exists (0.5ms)[0m  SELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'johns-276' AND "users"."id" != 1) LIMIT 1
  [1m[36m (0.1ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.2ms)[0m  BEGIN
-------------------------------------------------------------------------------
UserTest: test: A given user should not be valid if login name is a duplicate. 
-------------------------------------------------------------------------------
  [1m[36mUser Load (0.5ms)[0m  [1mSELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35m (0.1ms)[0m  SAVEPOINT active_record_1
  [1m[36mUser Exists (0.3ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'orstedma' LIMIT 1[0m
  [1m[35m (0.2ms)[0m  ROLLBACK TO SAVEPOINT active_record_1
  [1m[36mUser Exists (0.3ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'orstedma' LIMIT 1[0m
  [1m[35m (0.2ms)[0m  ROLLBACK
  [1m[36m (0.1ms)[0m  [1mBEGIN[0m
-----------------------------------------------------------------------
UserTest: test: A given user should not be valid if login name is nil. 
-----------------------------------------------------------------------
  [1m[35mUser Load (0.5ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" IS NULL AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.2ms)[0m  ROLLBACK
  [1m[36m (0.1ms)[0m  [1mBEGIN[0m
----------------------------------------------------------------------------
UserTest: test: A given user should not be valid if login name is too long. 
----------------------------------------------------------------------------
  [1m[35mUser Load (0.4ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (0.3ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'abbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.2ms)[0m  ROLLBACK
  [1m[36m (0.1ms)[0m  [1mBEGIN[0m
-----------------------------------------------------------------------------
UserTest: test: A given user should not be valid if login name is too short. 
-----------------------------------------------------------------------------
  [1m[35mUser Load (0.4ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (0.3ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'aaaaa' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.2ms)[0m  ROLLBACK
  [1m[36m (0.1ms)[0m  [1mBEGIN[0m
---------------------------------------------------------------------------------------------
UserTest: test: A given user should not be valid if login name starts with a capital letter. 
---------------------------------------------------------------------------------------------
  [1m[35mUser Load (0.4ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (0.3ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'Johns276' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.2ms)[0m  ROLLBACK
  [1m[36m (0.1ms)[0m  [1mBEGIN[0m
------------------------------------------------------------------------------------
UserTest: test: A given user should require a start date if an end date is present. 
------------------------------------------------------------------------------------
  [1m[35mUser Load (0.3ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (0.3ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.1ms)[0m  ROLLBACK
  [1m[36m (0.1ms)[0m  [1mBEGIN[0m
--------------------------------------------------------------------------------
UserTest: test: A given user should require an end date on or after start date. 
--------------------------------------------------------------------------------
  [1m[35mUser Load (0.4ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (0.3ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.1ms)[0m  ROLLBACK
  [1m[36m (0.1ms)[0m  [1mBEGIN[0m
---------------------------------------------------------------------
UserTest: test: User should allow first_name to be set to "Charles". 
---------------------------------------------------------------------
  [1m[35mUser Exists (0.3ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.3ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35m (0.1ms)[0m  ROLLBACK
  [1m[36m (0.1ms)[0m  [1mBEGIN[0m
--------------------------------------------------------------------------
UserTest: test: User should ensure first_name has a length of at least 2. 
--------------------------------------------------------------------------
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.3ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.3ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.1ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.1ms)[0m  BEGIN
---------------------------------------------------------------------------
UserTest: test: User should ensure first_name has a length of at most 254. 
---------------------------------------------------------------------------
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.3ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.3ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.3ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.3ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35m (0.1ms)[0m  ROLLBACK
  [1m[36m (0.1ms)[0m  [1mBEGIN[0m
-------------------------------------------------------------------------
UserTest: test: User should ensure last_name has a length of at least 2. 
-------------------------------------------------------------------------
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.5ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.2ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.2ms)[0m  BEGIN
--------------------------------------------------------------------------
UserTest: test: User should ensure last_name has a length of at most 254. 
--------------------------------------------------------------------------
  [1m[36mUser Exists (0.5ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (2.8ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.5ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35m (0.2ms)[0m  ROLLBACK
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
--------------------------------------------------------------------------
UserTest: test: User should ensure login_name has a length of at least 6. 
--------------------------------------------------------------------------
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxx' LIMIT 1
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxx' LIMIT 1[0m
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxx' LIMIT 1
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxx' LIMIT 1[0m
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxx' LIMIT 1
  [1m[36m (0.2ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.2ms)[0m  BEGIN
---------------------------------------------------------------------------
UserTest: test: User should ensure login_name has a length of at most 254. 
---------------------------------------------------------------------------
  [1m[36mUser Exists (0.5ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' LIMIT 1[0m
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' LIMIT 1
  [1m[36mUser Exists (0.5ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' LIMIT 1[0m
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' LIMIT 1
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' LIMIT 1[0m
  [1m[35m (0.2ms)[0m  ROLLBACK
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
----------------------------------------------
UserTest: test: User should have many phones. 
----------------------------------------------
  [1m[35m (0.2ms)[0m  ROLLBACK
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
-------------------------------------------------------------------------
UserTest: test: User should not allow first_name to be set to "charles". 
-------------------------------------------------------------------------
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.5ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35m (0.2ms)[0m  ROLLBACK
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
--------------------------------------------------------------------------------
UserTest: test: User should require case sensitive unique value for login_name. 
--------------------------------------------------------------------------------
  [1m[35mUser Load (0.4ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'orstedma' LIMIT 1[0m
  [1m[35mUser Exists (0.5ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'orstedma' LIMIT 1
  [1m[36m (0.2ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.2ms)[0m  BEGIN
----------------------------------------------------------
UserTest: test: User should require first_name to be set. 
----------------------------------------------------------
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.5ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.2ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.2ms)[0m  BEGIN
---------------------------------------------------------
UserTest: test: User should require last_name to be set. 
---------------------------------------------------------
  [1m[36mUser Exists (0.5ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (2.6ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
----------------------------------------------------------
UserTest: test: User should require login_name to be set. 
----------------------------------------------------------
  [1m[36mUser Exists (0.5ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.2ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.2ms)[0m  BEGIN
----------------------------------------------------------
UserTest: test: User should require start_date to be set. 
----------------------------------------------------------
  [1m[36mUser Exists (0.5ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.2ms)[0m  [1mROLLBACK[0m
  [1m[36m (1081.6ms)[0m  [1mDROP DATABASE IF EXISTS "ritrack_test"[0m
  [1m[35m (2370.2ms)[0m  CREATE DATABASE "ritrack_test" ENCODING = 'unicode'
  [1m[36mSQL (1.6ms)[0m  [1mCREATE EXTENSION IF NOT EXISTS "plpgsql"[0m
  [1m[35m (100.3ms)[0m  CREATE TABLE "locations" ("id" serial primary key, "company" character varying(255), "organization" character varying(255), "address1" character varying(255), "address2" character varying(255), "city" character varying(255), "state" character varying(255), "zip" character varying(255), "country" character varying(255), "user_id" integer, "created_at" timestamp, "updated_at" timestamp) 
  [1m[36m (58.1ms)[0m  [1mCREATE INDEX "index_locations_on_user_id" ON "locations" USING btree ("user_id")[0m
  [1m[35m (89.8ms)[0m  CREATE TABLE "phones" ("id" serial primary key, "number" character varying(255), "tag" character varying(255), "user_id" integer, "created_at" timestamp, "updated_at" timestamp) 
  [1m[36m (49.8ms)[0m  [1mCREATE INDEX "index_phones_on_number" ON "phones" USING btree ("number")[0m
  [1m[35m (45.5ms)[0m  CREATE INDEX "index_phones_on_user_id" ON "phones" USING btree ("user_id")
  [1m[36m (89.4ms)[0m  [1mCREATE TABLE "ticket_queues" ("id" serial primary key, "name" character varying(255), "description" character varying(255), "url" character varying(255), "priority" integer, "default_due_in" integer, "start_date" date, "end_date" date, "created_at" timestamp, "updated_at" timestamp) [0m
  [1m[35m (90.2ms)[0m  CREATE TABLE "ticket_respones" ("id" serial primary key, "body" text, "response_sent" timestamp, "ticket_id" integer, "created_at" timestamp, "updated_at" timestamp) 
  [1m[36m (47.0ms)[0m  [1mCREATE INDEX "index_ticket_respones_on_ticket_id" ON "ticket_respones" USING btree ("ticket_id")[0m
  [1m[35m (97.6ms)[0m  CREATE TABLE "tickets" ("id" serial primary key, "subject" character varying(255), "status" character varying(255), "priority" integer, "start_date" timestamp, "end_date" timestamp, "due_date" timestamp, "user_id" integer, "ticket_queue_id" integer, "created_at" timestamp, "updated_at" timestamp) 
  [1m[36m (55.7ms)[0m  [1mCREATE INDEX "index_tickets_on_ticket_queue_id" ON "tickets" USING btree ("ticket_queue_id")[0m
  [1m[35m (46.3ms)[0m  CREATE INDEX "index_tickets_on_user_id" ON "tickets" USING btree ("user_id")
  [1m[36m (89.1ms)[0m  [1mCREATE TABLE "users" ("id" serial primary key, "first_name" character varying(255), "last_name" character varying(255), "nick_name" character varying(255), "login_name" character varying(255), "notes" text, "created_at" timestamp, "updated_at" timestamp, "start_date" date, "end_date" date, "is_admin" boolean, "can_login" boolean, "user_by_email" boolean) [0m
  [1m[35m (4.3ms)[0m  CREATE TABLE "schema_migrations" ("version" character varying(255) NOT NULL) 
  [1m[36m (48.2ms)[0m  [1mCREATE UNIQUE INDEX "unique_schema_migrations" ON "schema_migrations" ("version")[0m
  [1m[35m (0.8ms)[0m  SELECT version FROM "schema_migrations"
  [1m[36m (6.2ms)[0m  [1mINSERT INTO "schema_migrations" (version) VALUES ('20130826183525')[0m
  [1m[35m (7.9ms)[0m  INSERT INTO "schema_migrations" (version) VALUES ('20130816142047')
  [1m[36m (8.0ms)[0m  [1mINSERT INTO "schema_migrations" (version) VALUES ('20130826182256')[0m
  [1m[35m (8.0ms)[0m  INSERT INTO "schema_migrations" (version) VALUES ('20130821233827')
  [1m[36m (8.0ms)[0m  [1mINSERT INTO "schema_migrations" (version) VALUES ('20130826154055')[0m
  [1m[35m (8.0ms)[0m  INSERT INTO "schema_migrations" (version) VALUES ('20130811212425')
  [1m[36m (8.0ms)[0m  [1mINSERT INTO "schema_migrations" (version) VALUES ('20130825220004')[0m
  [1m[35m (8.0ms)[0m  INSERT INTO "schema_migrations" (version) VALUES ('20130811195620')
  [1m[36m (8.0ms)[0m  [1mINSERT INTO "schema_migrations" (version) VALUES ('20130811193133')[0m
  [1m[35m (7.9ms)[0m  INSERT INTO "schema_migrations" (version) VALUES ('20130811195557')
  [1m[36mActiveRecord::SchemaMigration Load (0.6ms)[0m  [1mSELECT "schema_migrations".* FROM "schema_migrations"[0m
  [1m[35mActiveRecord::SchemaMigration Load (0.3ms)[0m  SELECT "schema_migrations".* FROM "schema_migrations"
  [1m[36m (7.8ms)[0m  [1mALTER TABLE "locations" DISABLE TRIGGER ALL;ALTER TABLE "phones" DISABLE TRIGGER ALL;ALTER TABLE "ticket_queues" DISABLE TRIGGER ALL;ALTER TABLE "ticket_respones" DISABLE TRIGGER ALL;ALTER TABLE "tickets" DISABLE TRIGGER ALL;ALTER TABLE "users" DISABLE TRIGGER ALL;ALTER TABLE "schema_migrations" DISABLE TRIGGER ALL[0m
  [1m[35m (0.2ms)[0m  BEGIN
  [1m[36mFixture Delete (0.6ms)[0m  [1mDELETE FROM "tickets"[0m
  [1m[35mFixture Insert (1.0ms)[0m  INSERT INTO "tickets" ("id", "subject", "status", "priority", "start_date", "end_date", "due_date", "user_id", "ticket_queue_id", "created_at", "updated_at") VALUES (1, 'Jobs filling hard disks completely', 'New', 1, '2013-08-26 13:22:56.000000', NULL, '2013-08-26 13:22:56.000000', 1, 1, '2013-08-26 22:32:08', '2013-08-26 22:32:08')
  [1m[36mFixture Insert (0.5ms)[0m  [1mINSERT INTO "tickets" ("id", "subject", "status", "priority", "start_date", "end_date", "due_date", "user_id", "ticket_queue_id", "created_at", "updated_at") VALUES (2, 'Hard drive failing. Replacement requested.', 'Opened', 1, '2013-08-26 13:22:56.000000', NULL, '2013-09-26 13:22:56.000000', 1, 1, '2013-08-26 22:32:08', '2013-08-26 22:32:08')[0m
  [1m[35mFixture Delete (0.5ms)[0m  DELETE FROM "ticket_respones"
  [1m[36mFixture Insert (0.5ms)[0m  [1mINSERT INTO "ticket_respones" ("body", "response_sent", "ticket_id", "created_at", "updated_at", "id") VALUES ('MyText', '2013-08-26 13:35:25.000000', NULL, '2013-08-26 22:32:08', '2013-08-26 22:32:08', 980190962)[0m
  [1m[35mFixture Insert (0.4ms)[0m  INSERT INTO "ticket_respones" ("body", "response_sent", "ticket_id", "created_at", "updated_at", "id") VALUES ('MyText', '2013-08-26 13:35:25.000000', NULL, '2013-08-26 22:32:08', '2013-08-26 22:32:08', 298486374)
  [1m[36mFixture Delete (0.5ms)[0m  [1mDELETE FROM "ticket_queues"[0m
  [1m[35mFixture Insert (0.6ms)[0m  INSERT INTO "ticket_queues" ("id", "name", "description", "url", "priority", "default_due_in", "start_date", "end_date", "created_at", "updated_at") VALUES (1, 'Queue1', 'A ticket queue', 'mydomain.com', 1, 1, '2013-08-26', NULL, '2013-08-26 22:32:08', '2013-08-26 22:32:08')
  [1m[36mFixture Insert (0.3ms)[0m  [1mINSERT INTO "ticket_queues" ("id", "name", "description", "url", "priority", "default_due_in", "start_date", "end_date", "created_at", "updated_at") VALUES (2, 'Queue2', 'A ticket queue', 'mydomain.com', 1, 1, '2013-08-26', NULL, '2013-08-26 22:32:08', '2013-08-26 22:32:08')[0m
  [1m[35mFixture Delete (0.5ms)[0m  DELETE FROM "phones"
  [1m[36mFixture Insert (0.6ms)[0m  [1mINSERT INTO "phones" ("id", "number", "tag", "user_id", "created_at", "updated_at") VALUES (1, '(211) 234-1111', 'Office', 1, '2013-08-26 22:32:08', '2013-08-26 22:32:08')[0m
  [1m[35mFixture Insert (0.4ms)[0m  INSERT INTO "phones" ("id", "number", "tag", "user_id", "created_at", "updated_at") VALUES (2, '(222) 345-2222', 'Home', 1, '2013-08-26 22:32:08', '2013-08-26 22:32:08')
  [1m[36mFixture Insert (0.3ms)[0m  [1mINSERT INTO "phones" ("id", "number", "tag", "user_id", "created_at", "updated_at") VALUES (3, '(333) 456-3333', 'Mobile', 1, '2013-08-26 22:32:08', '2013-08-26 22:32:08')[0m
  [1m[35mFixture Insert (0.3ms)[0m  INSERT INTO "phones" ("id", "number", "tag", "user_id", "created_at", "updated_at") VALUES (4, '(444) 567-4444', 'Pager', 1, '2013-08-26 22:32:08', '2013-08-26 22:32:08')
  [1m[36mFixture Insert (0.3ms)[0m  [1mINSERT INTO "phones" ("id", "number", "tag", "user_id", "created_at", "updated_at") VALUES (5, '(555) 678-5555', 'Mobile', 1, '2013-08-26 22:32:08', '2013-08-26 22:32:08')[0m
  [1m[35mFixture Insert (0.3ms)[0m  INSERT INTO "phones" ("id", "number", "tag", "user_id", "created_at", "updated_at") VALUES (6, '(666) 789-6666', 'Mobile', 1, '2013-08-26 22:32:08', '2013-08-26 22:32:08')
  [1m[36mFixture Delete (0.5ms)[0m  [1mDELETE FROM "locations"[0m
  [1m[35mFixture Insert (0.6ms)[0m  INSERT INTO "locations" ("id", "company", "organization", "address1", "address2", "city", "state", "zip", "country", "user_id", "created_at", "updated_at") VALUES (1, 'NPR', 'News Desk', '1444 First Street', 'Floor 15', 'Washington', 'DC', '10270', 'US', 1, '2013-08-26 22:32:08', '2013-08-26 22:32:08')
  [1m[36mFixture Insert (0.5ms)[0m  [1mINSERT INTO "locations" ("company", "organization", "address1", "address2", "city", "state", "zip", "country", "user_id", "created_at", "updated_at", "id") VALUES ('NPR', 'Scotland Desk', '63 Park Avenue', 'Suite 102', 'Chicago', 'IL', '69755', 'US', 1, '2013-08-26 22:32:08', '2013-08-26 22:32:08', 298486374)[0m
  [1m[35mFixture Delete (0.5ms)[0m  DELETE FROM "users"
  [1m[36mFixture Insert (0.5ms)[0m  [1mINSERT INTO "users" ("id", "first_name", "last_name", "nick_name", "login_name", "start_date", "end_date", "notes", "created_at", "updated_at") VALUES (1, 'Michael', 'Orsted', 'Mike', 'orstedma', '2012-02-04', NULL, 'This user lives in Chicago.', '2013-08-26 22:32:08', '2013-08-26 22:32:08')[0m
  [1m[35mFixture Insert (0.4ms)[0m  INSERT INTO "users" ("id", "first_name", "last_name", "nick_name", "login_name", "start_date", "end_date", "notes", "created_at", "updated_at") VALUES (2, 'Frederick', 'Free-Loader', 'Frederick', 'freelofw', '2012-03-04', NULL, 'This user is completely useless', '2013-08-26 22:32:08', '2013-08-26 22:32:08')
  [1m[36mFixture Insert (0.3ms)[0m  [1mINSERT INTO "users" ("id", "first_name", "last_name", "nick_name", "login_name", "start_date", "end_date", "notes", "created_at", "updated_at") VALUES (3, 'Michael', 'Winstead', 'Mike', 'winstem', '2012-02-04', '2013-08-12', 'This user lives in New York. This user is disabled in the system.', '2013-08-26 22:32:08', '2013-08-26 22:32:08')[0m
  [1m[35mFixture Insert (0.4ms)[0m  INSERT INTO "users" ("id", "first_name", "last_name", "nick_name", "login_name", "start_date", "end_date", "notes", "created_at", "updated_at") VALUES (4, 'Allison', 'Wilson', 'Alli', 'wilsona', '2012-03-04', NULL, 'Electrical engineer.', '2013-08-26 22:32:08', '2013-08-26 22:32:08')
  [1m[36m (21.8ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.6ms)[0m  ALTER TABLE "locations" ENABLE TRIGGER ALL;ALTER TABLE "phones" ENABLE TRIGGER ALL;ALTER TABLE "ticket_queues" ENABLE TRIGGER ALL;ALTER TABLE "ticket_respones" ENABLE TRIGGER ALL;ALTER TABLE "tickets" ENABLE TRIGGER ALL;ALTER TABLE "users" ENABLE TRIGGER ALL;ALTER TABLE "schema_migrations" ENABLE TRIGGER ALL
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
--------------------------------------------------------------------------------------------------------
LocationTest: test: A given Location should not be valid if adddress2 is specified and address1 is not. 
--------------------------------------------------------------------------------------------------------
  [1m[35mLocation Load (1.0ms)[0m  SELECT "locations".* FROM "locations" ORDER BY "locations"."id" ASC LIMIT 1
  [1m[36m (0.2ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.1ms)[0m  BEGIN
------------------------------------------------------------------------------------------------------
LocationTest: test: A given Location should not be valid if company is specified and address1 is not. 
------------------------------------------------------------------------------------------------------
  [1m[36mLocation Load (0.5ms)[0m  [1mSELECT "locations".* FROM "locations" ORDER BY "locations"."id" ASC LIMIT 1[0m
  [1m[35m (0.1ms)[0m  ROLLBACK
  [1m[36m (0.1ms)[0m  [1mBEGIN[0m
--------------------------------------------------------------------------------------------------
LocationTest: test: A given Location should not be valid if company is specified and city is not. 
--------------------------------------------------------------------------------------------------
  [1m[35mLocation Load (0.4ms)[0m  SELECT "locations".* FROM "locations" ORDER BY "locations"."id" ASC LIMIT 1
  [1m[36m (0.1ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.0ms)[0m  BEGIN
---------------------------------------------------------------------------------------------------
LocationTest: test: A given Location should not be valid if company is specified and state is not. 
---------------------------------------------------------------------------------------------------
  [1m[36mLocation Load (0.3ms)[0m  [1mSELECT "locations".* FROM "locations" ORDER BY "locations"."id" ASC LIMIT 1[0m
  [1m[35m (0.1ms)[0m  ROLLBACK
  [1m[36m (0.1ms)[0m  [1mBEGIN[0m
-------------------------------------------------------------------------------------------------
LocationTest: test: A given Location should not be valid if company is specified and zip is not. 
-------------------------------------------------------------------------------------------------
  [1m[35mLocation Load (0.4ms)[0m  SELECT "locations".* FROM "locations" ORDER BY "locations"."id" ASC LIMIT 1
  [1m[36m (0.2ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.1ms)[0m  BEGIN
--------------------------------------------------------------------------------------------
LocationTest: test: A given Location should require a valid comany if comapny is specified. 
--------------------------------------------------------------------------------------------
  [1m[36mLocation Load (0.6ms)[0m  [1mSELECT "locations".* FROM "locations" ORDER BY "locations"."id" ASC LIMIT 1[0m
  [1m[35m (0.3ms)[0m  ROLLBACK
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
------------------------------------------------------------------------------------------------------
LocationTest: test: A new Location should not be valid if adddress2 is specified and address1 is not. 
------------------------------------------------------------------------------------------------------
  [1m[35m (0.3ms)[0m  ROLLBACK
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
----------------------------------------------------------------------------------------------------
LocationTest: test: A new Location should not be valid if company is specified and address1 is not. 
----------------------------------------------------------------------------------------------------
  [1m[35m (0.2ms)[0m  ROLLBACK
  [1m[36m (0.1ms)[0m  [1mBEGIN[0m
------------------------------------------------------------------------------------------------
LocationTest: test: A new Location should not be valid if company is specified and city is not. 
------------------------------------------------------------------------------------------------
  [1m[35m (0.2ms)[0m  ROLLBACK
  [1m[36m (0.1ms)[0m  [1mBEGIN[0m
-------------------------------------------------------------------------------------------------
LocationTest: test: A new Location should not be valid if company is specified and state is not. 
-------------------------------------------------------------------------------------------------
  [1m[35m (0.2ms)[0m  ROLLBACK
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
-----------------------------------------------------------------------------------------------
LocationTest: test: A new Location should not be valid if company is specified and zip is not. 
-----------------------------------------------------------------------------------------------
  [1m[35m (0.2ms)[0m  ROLLBACK
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
------------------------------------------------------------------------------------------
LocationTest: test: A new Location should require a valid comany if comapny is specified. 
------------------------------------------------------------------------------------------
  [1m[35m (0.2ms)[0m  ROLLBACK
  [1m[36m (0.1ms)[0m  [1mBEGIN[0m
---------------------------------------------------------------------------------------------
LocationTest: test: Location should allow company to be set to "American Telegraph Company". 
---------------------------------------------------------------------------------------------
  [1m[35m (0.1ms)[0m  ROLLBACK
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
-------------------------------------------------------------------------------------
LocationTest: test: Location should allow company to be set to "American Telegraph". 
-------------------------------------------------------------------------------------
  [1m[35m (0.2ms)[0m  ROLLBACK
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
---------------------------------------------------------------------------
LocationTest: test: Location should allow company to be set to "American". 
---------------------------------------------------------------------------
  [1m[35m (0.1ms)[0m  ROLLBACK
  [1m[36m (0.1ms)[0m  [1mBEGIN[0m
----------------------------------------------------------------------
LocationTest: test: Location should allow company to be set to "IBM". 
----------------------------------------------------------------------
  [1m[35m (0.3ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
--------------------------------------------------------------------
LocationTest: test: Location should allow zip to be set to "37122". 
--------------------------------------------------------------------
  [1m[35m (0.2ms)[0m  ROLLBACK
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
-------------------------------------------------------------------------
LocationTest: test: Location should allow zip to be set to "37122-4444". 
-------------------------------------------------------------------------
  [1m[35m (0.3ms)[0m  ROLLBACK
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
----------------------------------------------------
LocationTest: test: Location should belong to user. 
----------------------------------------------------
  [1m[35m (0.3ms)[0m  ROLLBACK
  [1m[36m (0.1ms)[0m  [1mBEGIN[0m
-------------------------------------------------------------------------------------------------
LocationTest: test: Location should not allow company to be set to "American Telegraph company". 
-------------------------------------------------------------------------------------------------
  [1m[35m (0.1ms)[0m  ROLLBACK
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
----------------------------------------------------------------------------
LocationTest: test: Location should not allow company to be set to "INTEL". 
----------------------------------------------------------------------------
  [1m[35m (0.2ms)[0m  ROLLBACK
  [1m[36m (0.1ms)[0m  [1mBEGIN[0m
----------------------------------------------------------------------------
LocationTest: test: Location should not allow zip to be set to "3712-4444". 
----------------------------------------------------------------------------
  [1m[35m (0.2ms)[0m  ROLLBACK
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
----------------------------------------------------------------------------
LocationTest: test: Location should not allow zip to be set to "37122-444". 
----------------------------------------------------------------------------
  [1m[35m (0.2ms)[0m  ROLLBACK
  [1m[36m (0.1ms)[0m  [1mBEGIN[0m
---------------------------------------------------------------
LocationTest: test: Location should require user_id to be set. 
---------------------------------------------------------------
  [1m[35m (0.2ms)[0m  ROLLBACK
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
----------------------------------------------------------
PhoneTest: test: A given phone should be initially valid. 
----------------------------------------------------------
  [1m[35mPhone Load (0.7ms)[0m  SELECT "phones".* FROM "phones" ORDER BY "phones"."id" ASC LIMIT 1
  [1m[36m (0.2ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.1ms)[0m  BEGIN
-----------------------------------------------------------------------------------------------------------
PhoneTest: test: A given phone should not be valid with a poorly formatted 10 digit North American number. 
-----------------------------------------------------------------------------------------------------------
  [1m[36mPhone Load (0.6ms)[0m  [1mSELECT "phones".* FROM "phones" ORDER BY "phones"."id" ASC LIMIT 1[0m
  [1m[35m (0.2ms)[0m  ROLLBACK
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
----------------------------------------------------------------------------------------------------------
PhoneTest: test: A given phone should not be valid with a poorly formatted 7 digit North American number. 
----------------------------------------------------------------------------------------------------------
  [1m[35mPhone Load (0.4ms)[0m  SELECT "phones".* FROM "phones" ORDER BY "phones"."id" ASC LIMIT 1
  [1m[36m (0.2ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.1ms)[0m  BEGIN
---------------------------------------------------------------------------------------
PhoneTest: test: A given phone should optionally be a valid  EPP international number. 
---------------------------------------------------------------------------------------
  [1m[36mPhone Load (0.4ms)[0m  [1mSELECT "phones".* FROM "phones" ORDER BY "phones"."id" ASC LIMIT 1[0m
  [1m[35m (0.2ms)[0m  ROLLBACK
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
-----------------------------------------------------------------------------------------------
PhoneTest: test: A given phone should optionally be a valid  ITU-T E.123 international number. 
-----------------------------------------------------------------------------------------------
  [1m[35mPhone Load (0.4ms)[0m  SELECT "phones".* FROM "phones" ORDER BY "phones"."id" ASC LIMIT 1
  [1m[36m (0.1ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.0ms)[0m  BEGIN
-------------------------------------------------------------------------------------------------
PhoneTest: test: A given phone should optionally be a valid North American number with 7 digits. 
-------------------------------------------------------------------------------------------------
  [1m[36mPhone Load (0.4ms)[0m  [1mSELECT "phones".* FROM "phones" ORDER BY "phones"."id" ASC LIMIT 1[0m
  [1m[35m (0.2ms)[0m  ROLLBACK
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
----------------------------------------------------------------------------------------------------------------------
PhoneTest: test: A given phone should optionally be a valid number with 10 digits with a leading 1 for long distance. 
----------------------------------------------------------------------------------------------------------------------
  [1m[35mPhone Load (0.5ms)[0m  SELECT "phones".* FROM "phones" ORDER BY "phones"."id" ASC LIMIT 1
  [1m[36m (0.1ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.1ms)[0m  BEGIN
-------------------------------------------------------------------------------------------------
PhoneTest: test: A given phone should optionally require a valid 10-digit North American number. 
-------------------------------------------------------------------------------------------------
  [1m[36mPhone Load (0.4ms)[0m  [1mSELECT "phones".* FROM "phones" ORDER BY "phones"."id" ASC LIMIT 1[0m
  [1m[35m (0.1ms)[0m  ROLLBACK
  [1m[36m (0.1ms)[0m  [1mBEGIN[0m
---------------------------------------------------------
PhoneTest: test: A given phone should require a user_id. 
---------------------------------------------------------
  [1m[35mPhone Load (0.4ms)[0m  SELECT "phones".* FROM "phones" ORDER BY "phones"."id" ASC LIMIT 1
  [1m[36m (0.1ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.2ms)[0m  BEGIN
------------------------------------------------------------
PhoneTest: test: A new phone should not be initially valid. 
------------------------------------------------------------
  [1m[36m (0.2ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.2ms)[0m  BEGIN
------------------------------------------------------------------------------
PhoneTest: test: A new phone should not be savable without being fully valid. 
------------------------------------------------------------------------------
  [1m[36m (0.1ms)[0m  [1mSAVEPOINT active_record_1[0m
  [1m[35mSQL (24.0ms)[0m  INSERT INTO "phones" ("created_at", "number", "tag", "updated_at", "user_id") VALUES ($1, $2, $3, $4, $5) RETURNING "id"  [["created_at", Mon, 26 Aug 2013 22:32:08 UTC +00:00], ["number", "345-6789"], ["tag", "Home"], ["updated_at", Mon, 26 Aug 2013 22:32:08 UTC +00:00], ["user_id", 100]]
  [1m[36m (0.2ms)[0m  [1mRELEASE SAVEPOINT active_record_1[0m
  [1m[35m (0.2ms)[0m  ROLLBACK
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
---------------------------------------------------------------------------------------------------------
PhoneTest: test: A new phone should not be valid with a poorly formatted 10 digit North American number. 
---------------------------------------------------------------------------------------------------------
  [1m[35m (0.2ms)[0m  ROLLBACK
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
--------------------------------------------------------------------------------------------------------
PhoneTest: test: A new phone should not be valid with a poorly formatted 7 digit North American number. 
--------------------------------------------------------------------------------------------------------
  [1m[35m (0.2ms)[0m  ROLLBACK
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
-----------------------------------------------------------------------------------------------
PhoneTest: test: A new phone should optionally be a valid North American number with 7 digits. 
-----------------------------------------------------------------------------------------------
  [1m[35m (0.2ms)[0m  ROLLBACK
  [1m[36m (0.1ms)[0m  [1mBEGIN[0m
--------------------------------------------------------------------------------------------------------------------
PhoneTest: test: A new phone should optionally be a valid number with 10 digits with a leading 1 for long distance. 
--------------------------------------------------------------------------------------------------------------------
  [1m[35m (0.1ms)[0m  ROLLBACK
  [1m[36m (0.1ms)[0m  [1mBEGIN[0m
-----------------------------------------------------------------------------------------------
PhoneTest: test: A new phone should optionally require a valid 10-digit North American number. 
-----------------------------------------------------------------------------------------------
  [1m[35m (0.2ms)[0m  ROLLBACK
  [1m[36m (0.1ms)[0m  [1mBEGIN[0m
----------------------------------------------
PhoneTest: test: Phone should belong to user. 
----------------------------------------------
  [1m[35m (0.1ms)[0m  ROLLBACK
  [1m[36m (0.1ms)[0m  [1mBEGIN[0m
------------------------------------------------------------------------------------------------
PhoneTest: test: Phone should ensure inclusion of tag in ["Home", "Office", "Mobile", "Pager"]. 
------------------------------------------------------------------------------------------------
  [1m[35m (0.1ms)[0m  ROLLBACK
  [1m[36m (0.1ms)[0m  [1mBEGIN[0m
------------------------------------------------------------------------
PhoneTest: test: Phone should ensure number has a length of at least 7. 
------------------------------------------------------------------------
  [1m[35m (0.2ms)[0m  ROLLBACK
  [1m[36m (0.1ms)[0m  [1mBEGIN[0m
------------------------------------------------------------------------
PhoneTest: test: Phone should ensure number has a length of at most 24. 
------------------------------------------------------------------------
  [1m[35m (0.2ms)[0m  ROLLBACK
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
--------------------------------------------------------
PhoneTest: test: Phone should require number to be set. 
--------------------------------------------------------
  [1m[35m (0.2ms)[0m  ROLLBACK
  [1m[36m (0.1ms)[0m  [1mBEGIN[0m
-----------------------------------------------------
PhoneTest: test: Phone should require tag to be set. 
-----------------------------------------------------
  [1m[35m (0.2ms)[0m  ROLLBACK
  [1m[36m (0.1ms)[0m  [1mBEGIN[0m
---------------------------------------------------------
PhoneTest: test: Phone should require user_id to be set. 
---------------------------------------------------------
  [1m[35m (0.2ms)[0m  ROLLBACK
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
---------------------------------------------------------------------------------------------------
TicketQueueTest: test: A given ticket queue should require a start date if an end date is present. 
---------------------------------------------------------------------------------------------------
  [1m[35mTicketQueue Load (0.6ms)[0m  SELECT "ticket_queues".* FROM "ticket_queues" ORDER BY "ticket_queues"."id" ASC LIMIT 1
  [1m[36mTicketQueue Exists (1.2ms)[0m  [1mSELECT 1 AS one FROM "ticket_queues" WHERE ("ticket_queues"."name" = 'Queue1' AND "ticket_queues"."id" != 1) LIMIT 1[0m
  [1m[35m (0.2ms)[0m  ROLLBACK
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
-----------------------------------------------------------------------------------------------
TicketQueueTest: test: A given ticket queue should require an end date on or after start date. 
-----------------------------------------------------------------------------------------------
  [1m[35mTicketQueue Load (0.5ms)[0m  SELECT "ticket_queues".* FROM "ticket_queues" ORDER BY "ticket_queues"."id" ASC LIMIT 1
  [1m[36mTicketQueue Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "ticket_queues" WHERE ("ticket_queues"."name" = 'Queue1' AND "ticket_queues"."id" != 1) LIMIT 1[0m
  [1m[35m (0.2ms)[0m  ROLLBACK
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
-------------------------------------------------------------
TicketQueueTest: test: TicketQueue should have many tickets. 
-------------------------------------------------------------
  [1m[35m (0.3ms)[0m  ROLLBACK
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
----------------------------------------------------------------------------------------
TicketQueueTest: test: TicketQueue should require case sensitive unique value for name. 
----------------------------------------------------------------------------------------
  [1m[35mTicketQueue Load (0.5ms)[0m  SELECT "ticket_queues".* FROM "ticket_queues" ORDER BY "ticket_queues"."id" ASC LIMIT 1
  [1m[36mTicketQueue Exists (0.5ms)[0m  [1mSELECT 1 AS one FROM "ticket_queues" WHERE "ticket_queues"."name" = 'Queue1' LIMIT 1[0m
  [1m[35mTicketQueue Exists (0.4ms)[0m  SELECT 1 AS one FROM "ticket_queues" WHERE "ticket_queues"."name" = 'Queue1' LIMIT 1
  [1m[36m (0.2ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.2ms)[0m  BEGIN
----------------------------------------------------------------------------
TicketQueueTest: test: TicketQueue should require default_due_in to be set. 
----------------------------------------------------------------------------
  [1m[36mTicketQueue Exists (0.5ms)[0m  [1mSELECT 1 AS one FROM "ticket_queues" WHERE "ticket_queues"."name" IS NULL LIMIT 1[0m
  [1m[35mTicketQueue Exists (0.5ms)[0m  SELECT 1 AS one FROM "ticket_queues" WHERE "ticket_queues"."name" IS NULL LIMIT 1
  [1m[36m (0.2ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.2ms)[0m  BEGIN
-------------------------------------------------------------------------
TicketQueueTest: test: TicketQueue should require description to be set. 
-------------------------------------------------------------------------
  [1m[36mTicketQueue Exists (0.5ms)[0m  [1mSELECT 1 AS one FROM "ticket_queues" WHERE "ticket_queues"."name" IS NULL LIMIT 1[0m
  [1m[35mTicketQueue Exists (0.3ms)[0m  SELECT 1 AS one FROM "ticket_queues" WHERE "ticket_queues"."name" IS NULL LIMIT 1
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.2ms)[0m  BEGIN
------------------------------------------------------------------
TicketQueueTest: test: TicketQueue should require name to be set. 
------------------------------------------------------------------
  [1m[36mTicketQueue Exists (0.3ms)[0m  [1mSELECT 1 AS one FROM "ticket_queues" WHERE "ticket_queues"."name" IS NULL LIMIT 1[0m
  [1m[35mTicketQueue Exists (0.4ms)[0m  SELECT 1 AS one FROM "ticket_queues" WHERE "ticket_queues"."name" IS NULL LIMIT 1
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.2ms)[0m  BEGIN
----------------------------------------------------------------------
TicketQueueTest: test: TicketQueue should require priority to be set. 
----------------------------------------------------------------------
  [1m[36mTicketQueue Exists (2.6ms)[0m  [1mSELECT 1 AS one FROM "ticket_queues" WHERE "ticket_queues"."name" IS NULL LIMIT 1[0m
  [1m[35mTicketQueue Exists (0.5ms)[0m  SELECT 1 AS one FROM "ticket_queues" WHERE "ticket_queues"."name" IS NULL LIMIT 1
  [1m[36m (0.2ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.2ms)[0m  BEGIN
------------------------------------------------------------------------
TicketQueueTest: test: TicketQueue should require start_date to be set. 
------------------------------------------------------------------------
  [1m[36mTicketQueue Exists (0.5ms)[0m  [1mSELECT 1 AS one FROM "ticket_queues" WHERE "ticket_queues"."name" IS NULL LIMIT 1[0m
  [1m[35mTicketQueue Exists (0.4ms)[0m  SELECT 1 AS one FROM "ticket_queues" WHERE "ticket_queues"."name" IS NULL LIMIT 1
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.2ms)[0m  BEGIN
-----------------------------------------------------------------
TicketQueueTest: test: TicketQueue should require url to be set. 
-----------------------------------------------------------------
  [1m[36mTicketQueue Exists (0.5ms)[0m  [1mSELECT 1 AS one FROM "ticket_queues" WHERE "ticket_queues"."name" IS NULL LIMIT 1[0m
  [1m[35mTicketQueue Exists (0.4ms)[0m  SELECT 1 AS one FROM "ticket_queues" WHERE "ticket_queues"."name" IS NULL LIMIT 1
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.2ms)[0m  BEGIN
---------------------------------------------------------------
TicketTest: test: Ticket should allow priority to be set to 1. 
---------------------------------------------------------------
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.2ms)[0m  BEGIN
----------------------------------------------------------------
TicketTest: test: Ticket should allow priority to be set to 25. 
----------------------------------------------------------------
  [1m[36m (0.2ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.1ms)[0m  BEGIN
--------------------------------------------------------
TicketTest: test: Ticket should belong to ticket_queue. 
--------------------------------------------------------
  [1m[36m (0.2ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.1ms)[0m  BEGIN
------------------------------------------------
TicketTest: test: Ticket should belong to user. 
------------------------------------------------
  [1m[36m (0.1ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.1ms)[0m  BEGIN
-------------------------------------------------------------------
TicketTest: test: Ticket should not allow priority to be set to 0. 
-------------------------------------------------------------------
  [1m[36m (0.2ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.1ms)[0m  BEGIN
---------------------------------------------------------------------
TicketTest: test: Ticket should not allow priority to be set to 1.5. 
---------------------------------------------------------------------
  [1m[36m (0.1ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.1ms)[0m  BEGIN
--------------------------------------------------------------------
TicketTest: test: Ticket should not allow priority to be set to 26. 
--------------------------------------------------------------------
  [1m[36m (0.2ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.1ms)[0m  BEGIN
------------------------------------------------------------------------
TicketTest: test: Ticket should only allow numeric values for priority. 
------------------------------------------------------------------------
  [1m[36m (0.2ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.1ms)[0m  BEGIN
------------------------------------------------------------
TicketTest: test: Ticket should require priority to be set. 
------------------------------------------------------------
  [1m[36m (0.2ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.1ms)[0m  BEGIN
-----------------------------------------------------------
TicketTest: test: Ticket should require subject to be set. 
-----------------------------------------------------------
  [1m[36m (0.2ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.1ms)[0m  BEGIN
----------------------------------------------------------
UserTest: test: A given user should allow adding a phone. 
----------------------------------------------------------
  [1m[36mUser Load (0.6ms)[0m  [1mSELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35m (0.2ms)[0m  SAVEPOINT active_record_1
  [1m[36mSQL (0.6ms)[0m  [1mINSERT INTO "phones" ("created_at", "number", "tag", "updated_at", "user_id") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["created_at", Mon, 26 Aug 2013 22:32:09 UTC +00:00], ["number", "234-5678"], ["tag", "Home"], ["updated_at", Mon, 26 Aug 2013 22:32:09 UTC +00:00], ["user_id", 1]]
  [1m[35m (0.2ms)[0m  RELEASE SAVEPOINT active_record_1
  [1m[36m (0.1ms)[0m  [1mSAVEPOINT active_record_1[0m
  [1m[35mUser Exists (0.6ms)[0m  SELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1
  [1m[36m (0.2ms)[0m  [1mRELEASE SAVEPOINT active_record_1[0m
  [1m[35m (0.8ms)[0m  SELECT COUNT(*) FROM "phones" WHERE "phones"."user_id" = $1  [["user_id", 1]]
  [1m[36m (0.2ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.2ms)[0m  BEGIN
---------------------------------------------------------------------------
UserTest: test: A given user should allow retrieval of user phone numbers. 
---------------------------------------------------------------------------
  [1m[36mUser Load (0.6ms)[0m  [1mSELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35m (0.4ms)[0m  SELECT COUNT(*) FROM "phones" WHERE "phones"."user_id" = $1  [["user_id", 1]]
  [1m[36m (0.2ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.2ms)[0m  BEGIN
--------------------------------------------------------
UserTest: test: A given user should be valid initially. 
--------------------------------------------------------
  [1m[36mUser Load (0.4ms)[0m  [1mSELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1
  [1m[36m (0.2ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.2ms)[0m  BEGIN
-----------------------------------------------------------------------
UserTest: test: A given user should not be valid if first name is nil. 
-----------------------------------------------------------------------
  [1m[36mUser Load (0.4ms)[0m  [1mSELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1
  [1m[36m (0.2ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.2ms)[0m  BEGIN
----------------------------------------------------------------------------
UserTest: test: A given user should not be valid if first name is too long. 
----------------------------------------------------------------------------
  [1m[36mUser Load (0.4ms)[0m  [1mSELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1
  [1m[36m (0.2ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.1ms)[0m  BEGIN
-----------------------------------------------------------------------------
UserTest: test: A given user should not be valid if first name is too short. 
-----------------------------------------------------------------------------
  [1m[36mUser Load (0.4ms)[0m  [1mSELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35mUser Exists (0.5ms)[0m  SELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1
  [1m[36m (0.2ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.2ms)[0m  BEGIN
------------------------------------------------------------------------------------------------
UserTest: test: A given user should not be valid if first name starts with a lower case letter. 
------------------------------------------------------------------------------------------------
  [1m[36mUser Load (0.6ms)[0m  [1mSELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35mUser Exists (0.5ms)[0m  SELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1
  [1m[36m (0.2ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.2ms)[0m  BEGIN
----------------------------------------------------------------------
UserTest: test: A given user should not be valid if last name is nil. 
----------------------------------------------------------------------
  [1m[36mUser Load (0.6ms)[0m  [1mSELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35mUser Exists (0.6ms)[0m  SELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1
  [1m[36m (0.2ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.2ms)[0m  BEGIN
---------------------------------------------------------------------------
UserTest: test: A given user should not be valid if last name is too long. 
---------------------------------------------------------------------------
  [1m[36mUser Load (0.5ms)[0m  [1mSELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35mUser Exists (0.5ms)[0m  SELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1
  [1m[36m (0.2ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.2ms)[0m  BEGIN
----------------------------------------------------------------------------
UserTest: test: A given user should not be valid if last name is too short. 
----------------------------------------------------------------------------
  [1m[36mUser Load (0.5ms)[0m  [1mSELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35mUser Exists (0.5ms)[0m  SELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1
  [1m[36m (0.2ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.2ms)[0m  BEGIN
---------------------------------------------------------------------------------------------
UserTest: test: A given user should not be valid if login name has non-alphanumeric letters. 
---------------------------------------------------------------------------------------------
  [1m[36mUser Load (0.5ms)[0m  [1mSELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'johns-276' AND "users"."id" != 1) LIMIT 1
  [1m[36m (0.2ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.2ms)[0m  BEGIN
-------------------------------------------------------------------------------
UserTest: test: A given user should not be valid if login name is a duplicate. 
-------------------------------------------------------------------------------
  [1m[36mUser Load (0.6ms)[0m  [1mSELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35m (0.2ms)[0m  SAVEPOINT active_record_1
  [1m[36mUser Exists (0.5ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'orstedma' LIMIT 1[0m
  [1m[35m (0.2ms)[0m  ROLLBACK TO SAVEPOINT active_record_1
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'orstedma' LIMIT 1[0m
  [1m[35m (0.2ms)[0m  ROLLBACK
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
-----------------------------------------------------------------------
UserTest: test: A given user should not be valid if login name is nil. 
-----------------------------------------------------------------------
  [1m[35mUser Load (0.5ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" IS NULL AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.2ms)[0m  ROLLBACK
  [1m[36m (0.1ms)[0m  [1mBEGIN[0m
----------------------------------------------------------------------------
UserTest: test: A given user should not be valid if login name is too long. 
----------------------------------------------------------------------------
  [1m[35mUser Load (0.5ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (0.5ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'abbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.3ms)[0m  ROLLBACK
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
-----------------------------------------------------------------------------
UserTest: test: A given user should not be valid if login name is too short. 
-----------------------------------------------------------------------------
  [1m[35mUser Load (0.6ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'aaaaa' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.2ms)[0m  ROLLBACK
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
---------------------------------------------------------------------------------------------
UserTest: test: A given user should not be valid if login name starts with a capital letter. 
---------------------------------------------------------------------------------------------
  [1m[35mUser Load (0.6ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (0.5ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'Johns276' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.2ms)[0m  ROLLBACK
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
------------------------------------------------------------------------------------
UserTest: test: A given user should require a start date if an end date is present. 
------------------------------------------------------------------------------------
  [1m[35mUser Load (0.6ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (0.5ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.2ms)[0m  ROLLBACK
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
--------------------------------------------------------------------------------
UserTest: test: A given user should require an end date on or after start date. 
--------------------------------------------------------------------------------
  [1m[35mUser Load (0.6ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (0.5ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.2ms)[0m  ROLLBACK
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
----------------------------------------------------------------
UserTest: test: A given user should retrieve only valid phones. 
----------------------------------------------------------------
  [1m[35mUser Load (0.6ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mPhone Load (0.8ms)[0m  [1mSELECT "phones".* FROM "phones" WHERE "phones"."user_id" = $1[0m  [["user_id", 1]]
  [1m[35m (0.2ms)[0m  ROLLBACK
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
--------------------------------------------------------
UserTest: test: A new user should allow adding a phone. 
--------------------------------------------------------
  [1m[35m (0.3ms)[0m  ROLLBACK
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
------------------------------------------------------
UserTest: test: A new user should be valid initially. 
------------------------------------------------------
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.2ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.2ms)[0m  BEGIN
---------------------------------------------------------------------
UserTest: test: A new user should not be valid if first name is nil. 
---------------------------------------------------------------------
  [1m[36mUser Exists (0.5ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35m (0.2ms)[0m  ROLLBACK
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
--------------------------------------------------------------------------
UserTest: test: A new user should not be valid if first name is too long. 
--------------------------------------------------------------------------
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.2ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.2ms)[0m  BEGIN
---------------------------------------------------------------------------
UserTest: test: A new user should not be valid if first name is too short. 
---------------------------------------------------------------------------
  [1m[36mUser Exists (2.1ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35m (0.3ms)[0m  ROLLBACK
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
----------------------------------------------------------------------------------------------
UserTest: test: A new user should not be valid if first name starts with a lower case letter. 
----------------------------------------------------------------------------------------------
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.2ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.2ms)[0m  BEGIN
--------------------------------------------------------------------
UserTest: test: A new user should not be valid if last name is nil. 
--------------------------------------------------------------------
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35m (0.2ms)[0m  ROLLBACK
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
-------------------------------------------------------------------------
UserTest: test: A new user should not be valid if last name is too long. 
-------------------------------------------------------------------------
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.2ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.2ms)[0m  BEGIN
--------------------------------------------------------------------------
UserTest: test: A new user should not be valid if last name is too short. 
--------------------------------------------------------------------------
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35m (0.1ms)[0m  ROLLBACK
  [1m[36m (0.1ms)[0m  [1mBEGIN[0m
-------------------------------------------------------------------------------------------
UserTest: test: A new user should not be valid if login name has non-alphanumeric letters. 
-------------------------------------------------------------------------------------------
  [1m[35mUser Exists (0.5ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'johns-276' LIMIT 1
  [1m[36m (0.2ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.1ms)[0m  BEGIN
-----------------------------------------------------------------------------
UserTest: test: A new user should not be valid if login name is a duplicate. 
-----------------------------------------------------------------------------
  [1m[36m (0.1ms)[0m  [1mSAVEPOINT active_record_1[0m
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'orstedma' LIMIT 1
  [1m[36m (0.2ms)[0m  [1mROLLBACK TO SAVEPOINT active_record_1[0m
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'orstedma' LIMIT 1
  [1m[36m (0.2ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.2ms)[0m  BEGIN
---------------------------------------------------------------------
UserTest: test: A new user should not be valid if login name is nil. 
---------------------------------------------------------------------
  [1m[36mUser Exists (0.5ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35m (0.3ms)[0m  ROLLBACK
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
--------------------------------------------------------------------------
UserTest: test: A new user should not be valid if login name is too long. 
--------------------------------------------------------------------------
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'abbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb' LIMIT 1
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.2ms)[0m  BEGIN
---------------------------------------------------------------------------
UserTest: test: A new user should not be valid if login name is too short. 
---------------------------------------------------------------------------
  [1m[36mUser Exists (0.6ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'aaaaa' LIMIT 1[0m
  [1m[35m (0.2ms)[0m  ROLLBACK
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
-------------------------------------------------------------------------------------------
UserTest: test: A new user should not be valid if login name starts with a capital letter. 
-------------------------------------------------------------------------------------------
  [1m[35mUser Exists (0.5ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'Johns276' LIMIT 1
  [1m[36m (0.2ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.1ms)[0m  BEGIN
----------------------------------------------------------------------------------
UserTest: test: A new user should require a start date if an end date is present. 
----------------------------------------------------------------------------------
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35m (0.2ms)[0m  ROLLBACK
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
------------------------------------------------------------------------------
UserTest: test: A new user should require an end date on or after start date. 
------------------------------------------------------------------------------
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.2ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.2ms)[0m  BEGIN
---------------------------------------------------------------------
UserTest: test: User should allow first_name to be set to "Charles". 
---------------------------------------------------------------------
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.2ms)[0m  BEGIN
--------------------------------------------------------------------------
UserTest: test: User should ensure first_name has a length of at least 2. 
--------------------------------------------------------------------------
  [1m[36mUser Exists (0.5ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.2ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.5ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35m (0.2ms)[0m  ROLLBACK
  [1m[36m (0.1ms)[0m  [1mBEGIN[0m
---------------------------------------------------------------------------
UserTest: test: User should ensure first_name has a length of at most 254. 
---------------------------------------------------------------------------
  [1m[35mUser Exists (0.5ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (2.8ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.6ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.2ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.2ms)[0m  BEGIN
-------------------------------------------------------------------------
UserTest: test: User should ensure last_name has a length of at least 2. 
-------------------------------------------------------------------------
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35m (0.2ms)[0m  ROLLBACK
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
--------------------------------------------------------------------------
UserTest: test: User should ensure last_name has a length of at most 254. 
--------------------------------------------------------------------------
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.3ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.3ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.1ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.2ms)[0m  BEGIN
--------------------------------------------------------------------------
UserTest: test: User should ensure login_name has a length of at least 6. 
--------------------------------------------------------------------------
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxx' LIMIT 1[0m
  [1m[35mUser Exists (0.5ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxx' LIMIT 1
  [1m[36mUser Exists (0.5ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxx' LIMIT 1[0m
  [1m[35mUser Exists (0.5ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxx' LIMIT 1
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxx' LIMIT 1[0m
  [1m[35m (0.2ms)[0m  ROLLBACK
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
---------------------------------------------------------------------------
UserTest: test: User should ensure login_name has a length of at most 254. 
---------------------------------------------------------------------------
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' LIMIT 1
  [1m[36mUser Exists (0.5ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' LIMIT 1[0m
  [1m[35mUser Exists (0.5ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' LIMIT 1
  [1m[36mUser Exists (3.0ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' LIMIT 1[0m
  [1m[35mUser Exists (0.6ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' LIMIT 1
  [1m[36m (0.2ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.2ms)[0m  BEGIN
--------------------------------------------------------------------------
UserTest: test: User should ensure nick_name has a length of at most 254. 
--------------------------------------------------------------------------
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.5ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35m (0.2ms)[0m  ROLLBACK
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
-------------------------------------------------
UserTest: test: User should have many locations. 
-------------------------------------------------
  [1m[35m (0.2ms)[0m  ROLLBACK
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
----------------------------------------------
UserTest: test: User should have many phones. 
----------------------------------------------
  [1m[35m (0.2ms)[0m  ROLLBACK
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
-------------------------------------------------------------------------
UserTest: test: User should not allow first_name to be set to "charles". 
-------------------------------------------------------------------------
  [1m[35mUser Exists (0.5ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.3ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35m (0.2ms)[0m  ROLLBACK
  [1m[36m (0.1ms)[0m  [1mBEGIN[0m
--------------------------------------------------------------------------------
UserTest: test: User should require case sensitive unique value for login_name. 
--------------------------------------------------------------------------------
  [1m[35mUser Load (0.5ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'orstedma' LIMIT 1[0m
  [1m[35mUser Exists (0.5ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'orstedma' LIMIT 1
  [1m[36m (0.2ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.2ms)[0m  BEGIN
----------------------------------------------------------
UserTest: test: User should require first_name to be set. 
----------------------------------------------------------
  [1m[36mUser Exists (0.5ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.5ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.2ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.2ms)[0m  BEGIN
---------------------------------------------------------
UserTest: test: User should require last_name to be set. 
---------------------------------------------------------
  [1m[36mUser Exists (0.5ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.2ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.2ms)[0m  BEGIN
----------------------------------------------------------
UserTest: test: User should require login_name to be set. 
----------------------------------------------------------
  [1m[36mUser Exists (0.5ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.2ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.1ms)[0m  BEGIN
----------------------------------------------------------
UserTest: test: User should require start_date to be set. 
----------------------------------------------------------
  [1m[36mUser Exists (2.8ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.5ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.2ms)[0m  [1mROLLBACK[0m
  [1m[36m (224.7ms)[0m  [1mDROP DATABASE IF EXISTS "ritrack_test"[0m
  [1m[35m (640.9ms)[0m  CREATE DATABASE "ritrack_test" ENCODING = 'unicode'
  [1m[36mSQL (1.6ms)[0m  [1mCREATE EXTENSION IF NOT EXISTS "plpgsql"[0m
  [1m[35m (101.3ms)[0m  CREATE TABLE "locations" ("id" serial primary key, "company" character varying(255), "organization" character varying(255), "address1" character varying(255), "address2" character varying(255), "city" character varying(255), "state" character varying(255), "zip" character varying(255), "country" character varying(255), "user_id" integer, "created_at" timestamp, "updated_at" timestamp) 
  [1m[36m (49.7ms)[0m  [1mCREATE INDEX "index_locations_on_user_id" ON "locations" USING btree ("user_id")[0m
  [1m[35m (98.1ms)[0m  CREATE TABLE "phones" ("id" serial primary key, "number" character varying(255), "tag" character varying(255), "user_id" integer, "created_at" timestamp, "updated_at" timestamp) 
  [1m[36m (58.0ms)[0m  [1mCREATE INDEX "index_phones_on_number" ON "phones" USING btree ("number")[0m
  [1m[35m (62.0ms)[0m  CREATE INDEX "index_phones_on_user_id" ON "phones" USING btree ("user_id")
  [1m[36m (89.3ms)[0m  [1mCREATE TABLE "ticket_queues" ("id" serial primary key, "name" character varying(255), "description" character varying(255), "url" character varying(255), "priority" integer, "default_due_in" integer, "start_date" date, "end_date" date, "created_at" timestamp, "updated_at" timestamp) [0m
  [1m[35m (89.3ms)[0m  CREATE TABLE "ticket_respones" ("id" serial primary key, "body" text, "response_sent" timestamp, "ticket_id" integer, "created_at" timestamp, "updated_at" timestamp) 
  [1m[36m (47.1ms)[0m  [1mCREATE INDEX "index_ticket_respones_on_ticket_id" ON "ticket_respones" USING btree ("ticket_id")[0m
  [1m[35m (98.9ms)[0m  CREATE TABLE "tickets" ("id" serial primary key, "subject" character varying(255), "status" character varying(255), "priority" integer, "start_date" timestamp, "end_date" timestamp, "due_date" timestamp, "user_id" integer, "ticket_queue_id" integer, "created_at" timestamp, "updated_at" timestamp) 
  [1m[36m (47.2ms)[0m  [1mCREATE INDEX "index_tickets_on_ticket_queue_id" ON "tickets" USING btree ("ticket_queue_id")[0m
  [1m[35m (46.3ms)[0m  CREATE INDEX "index_tickets_on_user_id" ON "tickets" USING btree ("user_id")
  [1m[36m (97.9ms)[0m  [1mCREATE TABLE "users" ("id" serial primary key, "first_name" character varying(255), "last_name" character varying(255), "nick_name" character varying(255), "login_name" character varying(255), "notes" text, "created_at" timestamp, "updated_at" timestamp, "start_date" date, "end_date" date, "is_admin" boolean, "can_login" boolean, "user_by_email" boolean) [0m
  [1m[35m (4.6ms)[0m  CREATE TABLE "schema_migrations" ("version" character varying(255) NOT NULL) 
  [1m[36m (47.2ms)[0m  [1mCREATE UNIQUE INDEX "unique_schema_migrations" ON "schema_migrations" ("version")[0m
  [1m[35m (0.9ms)[0m  SELECT version FROM "schema_migrations"
  [1m[36m (6.3ms)[0m  [1mINSERT INTO "schema_migrations" (version) VALUES ('20130826183525')[0m
  [1m[35m (7.9ms)[0m  INSERT INTO "schema_migrations" (version) VALUES ('20130816142047')
  [1m[36m (8.0ms)[0m  [1mINSERT INTO "schema_migrations" (version) VALUES ('20130826182256')[0m
  [1m[35m (8.0ms)[0m  INSERT INTO "schema_migrations" (version) VALUES ('20130821233827')
  [1m[36m (8.0ms)[0m  [1mINSERT INTO "schema_migrations" (version) VALUES ('20130826154055')[0m
  [1m[35m (7.9ms)[0m  INSERT INTO "schema_migrations" (version) VALUES ('20130811212425')
  [1m[36m (8.0ms)[0m  [1mINSERT INTO "schema_migrations" (version) VALUES ('20130825220004')[0m
  [1m[35m (8.0ms)[0m  INSERT INTO "schema_migrations" (version) VALUES ('20130811195620')
  [1m[36m (8.0ms)[0m  [1mINSERT INTO "schema_migrations" (version) VALUES ('20130811193133')[0m
  [1m[35m (8.0ms)[0m  INSERT INTO "schema_migrations" (version) VALUES ('20130811195557')
  [1m[36mActiveRecord::SchemaMigration Load (0.6ms)[0m  [1mSELECT "schema_migrations".* FROM "schema_migrations"[0m
  [1m[35mActiveRecord::SchemaMigration Load (0.4ms)[0m  SELECT "schema_migrations".* FROM "schema_migrations"
  [1m[36m (8.3ms)[0m  [1mALTER TABLE "locations" DISABLE TRIGGER ALL;ALTER TABLE "phones" DISABLE TRIGGER ALL;ALTER TABLE "ticket_queues" DISABLE TRIGGER ALL;ALTER TABLE "ticket_respones" DISABLE TRIGGER ALL;ALTER TABLE "tickets" DISABLE TRIGGER ALL;ALTER TABLE "users" DISABLE TRIGGER ALL;ALTER TABLE "schema_migrations" DISABLE TRIGGER ALL[0m
  [1m[35m (0.2ms)[0m  BEGIN
  [1m[36mFixture Delete (0.6ms)[0m  [1mDELETE FROM "tickets"[0m
  [1m[35mFixture Insert (0.8ms)[0m  INSERT INTO "tickets" ("id", "subject", "status", "priority", "start_date", "end_date", "due_date", "user_id", "ticket_queue_id", "created_at", "updated_at") VALUES (1, 'Jobs filling hard disks completely', 'New', 1, '2013-08-26 13:22:56.000000', NULL, '2013-08-26 13:22:56.000000', 1, 1, '2013-08-27 00:21:43', '2013-08-27 00:21:43')
  [1m[36mFixture Insert (0.3ms)[0m  [1mINSERT INTO "tickets" ("id", "subject", "status", "priority", "start_date", "end_date", "due_date", "user_id", "ticket_queue_id", "created_at", "updated_at") VALUES (2, 'Hard drive failing. Replacement requested.', 'Opened', 1, '2013-08-26 13:22:56.000000', NULL, '2013-09-26 13:22:56.000000', 1, 1, '2013-08-27 00:21:43', '2013-08-27 00:21:43')[0m
  [1m[35mFixture Delete (0.5ms)[0m  DELETE FROM "ticket_respones"
  [1m[36mFixture Insert (0.6ms)[0m  [1mINSERT INTO "ticket_respones" ("body", "response_sent", "ticket_id", "created_at", "updated_at", "id") VALUES ('MyText', '2013-08-26 13:35:25.000000', NULL, '2013-08-27 00:21:43', '2013-08-27 00:21:43', 980190962)[0m
  [1m[35mFixture Insert (0.4ms)[0m  INSERT INTO "ticket_respones" ("body", "response_sent", "ticket_id", "created_at", "updated_at", "id") VALUES ('MyText', '2013-08-26 13:35:25.000000', NULL, '2013-08-27 00:21:43', '2013-08-27 00:21:43', 298486374)
  [1m[36mFixture Delete (0.5ms)[0m  [1mDELETE FROM "ticket_queues"[0m
  [1m[35mFixture Insert (0.5ms)[0m  INSERT INTO "ticket_queues" ("id", "name", "description", "url", "priority", "default_due_in", "start_date", "end_date", "created_at", "updated_at") VALUES (1, 'Queue1', 'A ticket queue', 'mydomain.com', 1, 1, '2013-08-26', NULL, '2013-08-27 00:21:43', '2013-08-27 00:21:43')
  [1m[36mFixture Insert (0.4ms)[0m  [1mINSERT INTO "ticket_queues" ("id", "name", "description", "url", "priority", "default_due_in", "start_date", "end_date", "created_at", "updated_at") VALUES (2, 'Queue2', 'A ticket queue', 'mydomain.com', 1, 1, '2013-08-26', NULL, '2013-08-27 00:21:43', '2013-08-27 00:21:43')[0m
  [1m[35mFixture Delete (0.6ms)[0m  DELETE FROM "phones"
  [1m[36mFixture Insert (0.7ms)[0m  [1mINSERT INTO "phones" ("id", "number", "tag", "user_id", "created_at", "updated_at") VALUES (1, '(211) 234-1111', 'Office', 1, '2013-08-27 00:21:43', '2013-08-27 00:21:43')[0m
  [1m[35mFixture Insert (0.5ms)[0m  INSERT INTO "phones" ("id", "number", "tag", "user_id", "created_at", "updated_at") VALUES (2, '(222) 345-2222', 'Home', 1, '2013-08-27 00:21:43', '2013-08-27 00:21:43')
  [1m[36mFixture Insert (0.4ms)[0m  [1mINSERT INTO "phones" ("id", "number", "tag", "user_id", "created_at", "updated_at") VALUES (3, '(333) 456-3333', 'Mobile', 1, '2013-08-27 00:21:43', '2013-08-27 00:21:43')[0m
  [1m[35mFixture Insert (0.3ms)[0m  INSERT INTO "phones" ("id", "number", "tag", "user_id", "created_at", "updated_at") VALUES (4, '(444) 567-4444', 'Pager', 1, '2013-08-27 00:21:43', '2013-08-27 00:21:43')
  [1m[36mFixture Insert (0.3ms)[0m  [1mINSERT INTO "phones" ("id", "number", "tag", "user_id", "created_at", "updated_at") VALUES (5, '(555) 678-5555', 'Mobile', 1, '2013-08-27 00:21:43', '2013-08-27 00:21:43')[0m
  [1m[35mFixture Insert (0.2ms)[0m  INSERT INTO "phones" ("id", "number", "tag", "user_id", "created_at", "updated_at") VALUES (6, '(666) 789-6666', 'Mobile', 1, '2013-08-27 00:21:43', '2013-08-27 00:21:43')
  [1m[36mFixture Delete (0.5ms)[0m  [1mDELETE FROM "locations"[0m
  [1m[35mFixture Insert (0.6ms)[0m  INSERT INTO "locations" ("id", "company", "organization", "address1", "address2", "city", "state", "zip", "country", "user_id", "created_at", "updated_at") VALUES (1, 'NPR', 'News Desk', '1444 First Street', 'Floor 15', 'Washington', 'DC', '10270', 'US', 1, '2013-08-27 00:21:43', '2013-08-27 00:21:43')
  [1m[36mFixture Insert (0.5ms)[0m  [1mINSERT INTO "locations" ("company", "organization", "address1", "address2", "city", "state", "zip", "country", "user_id", "created_at", "updated_at", "id") VALUES ('NPR', 'Scotland Desk', '63 Park Avenue', 'Suite 102', 'Chicago', 'IL', '69755', 'US', 1, '2013-08-27 00:21:43', '2013-08-27 00:21:43', 298486374)[0m
  [1m[35mFixture Delete (0.5ms)[0m  DELETE FROM "users"
  [1m[36mFixture Insert (0.5ms)[0m  [1mINSERT INTO "users" ("id", "first_name", "last_name", "nick_name", "login_name", "start_date", "end_date", "notes", "created_at", "updated_at") VALUES (1, 'Michael', 'Orsted', 'Mike', 'orstedma', '2012-02-04', NULL, 'This user lives in Chicago.', '2013-08-27 00:21:43', '2013-08-27 00:21:43')[0m
  [1m[35mFixture Insert (0.4ms)[0m  INSERT INTO "users" ("id", "first_name", "last_name", "nick_name", "login_name", "start_date", "end_date", "notes", "created_at", "updated_at") VALUES (2, 'Frederick', 'Free-Loader', 'Frederick', 'freelofw', '2012-03-04', NULL, 'This user is completely useless', '2013-08-27 00:21:43', '2013-08-27 00:21:43')
  [1m[36mFixture Insert (0.3ms)[0m  [1mINSERT INTO "users" ("id", "first_name", "last_name", "nick_name", "login_name", "start_date", "end_date", "notes", "created_at", "updated_at") VALUES (3, 'Michael', 'Winstead', 'Mike', 'winstem', '2012-02-04', '2013-08-12', 'This user lives in New York. This user is disabled in the system.', '2013-08-27 00:21:43', '2013-08-27 00:21:43')[0m
  [1m[35mFixture Insert (0.3ms)[0m  INSERT INTO "users" ("id", "first_name", "last_name", "nick_name", "login_name", "start_date", "end_date", "notes", "created_at", "updated_at") VALUES (4, 'Allison', 'Wilson', 'Alli', 'wilsona', '2012-03-04', NULL, 'Electrical engineer.', '2013-08-27 00:21:43', '2013-08-27 00:21:43')
  [1m[36m (9.5ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.5ms)[0m  ALTER TABLE "locations" ENABLE TRIGGER ALL;ALTER TABLE "phones" ENABLE TRIGGER ALL;ALTER TABLE "ticket_queues" ENABLE TRIGGER ALL;ALTER TABLE "ticket_respones" ENABLE TRIGGER ALL;ALTER TABLE "tickets" ENABLE TRIGGER ALL;ALTER TABLE "users" ENABLE TRIGGER ALL;ALTER TABLE "schema_migrations" ENABLE TRIGGER ALL
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
--------------------------------------------------------------------------------------------------------
LocationTest: test: A given Location should not be valid if adddress2 is specified and address1 is not. 
--------------------------------------------------------------------------------------------------------
  [1m[35mLocation Load (1.0ms)[0m  SELECT "locations".* FROM "locations" ORDER BY "locations"."id" ASC LIMIT 1
  [1m[36m (0.2ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.2ms)[0m  BEGIN
------------------------------------------------------------------------------------------------------
LocationTest: test: A given Location should not be valid if company is specified and address1 is not. 
------------------------------------------------------------------------------------------------------
  [1m[36mLocation Load (0.6ms)[0m  [1mSELECT "locations".* FROM "locations" ORDER BY "locations"."id" ASC LIMIT 1[0m
  [1m[35m (0.2ms)[0m  ROLLBACK
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
--------------------------------------------------------------------------------------------------
LocationTest: test: A given Location should not be valid if company is specified and city is not. 
--------------------------------------------------------------------------------------------------
  [1m[35mLocation Load (0.4ms)[0m  SELECT "locations".* FROM "locations" ORDER BY "locations"."id" ASC LIMIT 1
  [1m[36m (0.1ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.1ms)[0m  BEGIN
---------------------------------------------------------------------------------------------------
LocationTest: test: A given Location should not be valid if company is specified and state is not. 
---------------------------------------------------------------------------------------------------
  [1m[36mLocation Load (0.4ms)[0m  [1mSELECT "locations".* FROM "locations" ORDER BY "locations"."id" ASC LIMIT 1[0m
  [1m[35m (0.1ms)[0m  ROLLBACK
  [1m[36m (0.0ms)[0m  [1mBEGIN[0m
-------------------------------------------------------------------------------------------------
LocationTest: test: A given Location should not be valid if company is specified and zip is not. 
-------------------------------------------------------------------------------------------------
  [1m[35mLocation Load (0.3ms)[0m  SELECT "locations".* FROM "locations" ORDER BY "locations"."id" ASC LIMIT 1
  [1m[36m (0.1ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.1ms)[0m  BEGIN
--------------------------------------------------------------------------------------------
LocationTest: test: A given Location should require a valid comany if comapny is specified. 
--------------------------------------------------------------------------------------------
  [1m[36mLocation Load (0.6ms)[0m  [1mSELECT "locations".* FROM "locations" ORDER BY "locations"."id" ASC LIMIT 1[0m
  [1m[35m (0.1ms)[0m  ROLLBACK
  [1m[36m (0.1ms)[0m  [1mBEGIN[0m
------------------------------------------------------------------------------------------------------
LocationTest: test: A new Location should not be valid if adddress2 is specified and address1 is not. 
------------------------------------------------------------------------------------------------------
  [1m[35m (0.1ms)[0m  ROLLBACK
  [1m[36m (0.1ms)[0m  [1mBEGIN[0m
----------------------------------------------------------------------------------------------------
LocationTest: test: A new Location should not be valid if company is specified and address1 is not. 
----------------------------------------------------------------------------------------------------
  [1m[35m (0.1ms)[0m  ROLLBACK
  [1m[36m (0.1ms)[0m  [1mBEGIN[0m
------------------------------------------------------------------------------------------------
LocationTest: test: A new Location should not be valid if company is specified and city is not. 
------------------------------------------------------------------------------------------------
  [1m[35m (0.1ms)[0m  ROLLBACK
  [1m[36m (0.1ms)[0m  [1mBEGIN[0m
-------------------------------------------------------------------------------------------------
LocationTest: test: A new Location should not be valid if company is specified and state is not. 
-------------------------------------------------------------------------------------------------
  [1m[35m (0.2ms)[0m  ROLLBACK
  [1m[36m (0.0ms)[0m  [1mBEGIN[0m
-----------------------------------------------------------------------------------------------
LocationTest: test: A new Location should not be valid if company is specified and zip is not. 
-----------------------------------------------------------------------------------------------
  [1m[35m (0.1ms)[0m  ROLLBACK
  [1m[36m (0.1ms)[0m  [1mBEGIN[0m
------------------------------------------------------------------------------------------
LocationTest: test: A new Location should require a valid comany if comapny is specified. 
------------------------------------------------------------------------------------------
  [1m[35m (0.1ms)[0m  ROLLBACK
  [1m[36m (0.1ms)[0m  [1mBEGIN[0m
---------------------------------------------------------------------------------------------
LocationTest: test: Location should allow company to be set to "American Telegraph Company". 
---------------------------------------------------------------------------------------------
  [1m[35m (0.1ms)[0m  ROLLBACK
  [1m[36m (0.1ms)[0m  [1mBEGIN[0m
-------------------------------------------------------------------------------------
LocationTest: test: Location should allow company to be set to "American Telegraph". 
-------------------------------------------------------------------------------------
  [1m[35m (0.1ms)[0m  ROLLBACK
  [1m[36m (0.1ms)[0m  [1mBEGIN[0m
---------------------------------------------------------------------------
LocationTest: test: Location should allow company to be set to "American". 
---------------------------------------------------------------------------
  [1m[35m (0.1ms)[0m  ROLLBACK
  [1m[36m (0.1ms)[0m  [1mBEGIN[0m
----------------------------------------------------------------------
LocationTest: test: Location should allow company to be set to "IBM". 
----------------------------------------------------------------------
  [1m[35m (0.1ms)[0m  ROLLBACK
  [1m[36m (0.1ms)[0m  [1mBEGIN[0m
--------------------------------------------------------------------
LocationTest: test: Location should allow zip to be set to "37122". 
--------------------------------------------------------------------
  [1m[35m (0.1ms)[0m  ROLLBACK
  [1m[36m (0.1ms)[0m  [1mBEGIN[0m
-------------------------------------------------------------------------
LocationTest: test: Location should allow zip to be set to "37122-4444". 
-------------------------------------------------------------------------
  [1m[35m (0.1ms)[0m  ROLLBACK
  [1m[36m (0.1ms)[0m  [1mBEGIN[0m
----------------------------------------------------
LocationTest: test: Location should belong to user. 
----------------------------------------------------
  [1m[35m (0.1ms)[0m  ROLLBACK
  [1m[36m (0.1ms)[0m  [1mBEGIN[0m
-------------------------------------------------------------------------------------------------
LocationTest: test: Location should not allow company to be set to "American Telegraph company". 
-------------------------------------------------------------------------------------------------
  [1m[35m (0.2ms)[0m  ROLLBACK
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
----------------------------------------------------------------------------
LocationTest: test: Location should not allow company to be set to "INTEL". 
----------------------------------------------------------------------------
  [1m[35m (0.3ms)[0m  ROLLBACK
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
----------------------------------------------------------------------------
LocationTest: test: Location should not allow zip to be set to "3712-4444". 
----------------------------------------------------------------------------
  [1m[35m (0.2ms)[0m  ROLLBACK
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
----------------------------------------------------------------------------
LocationTest: test: Location should not allow zip to be set to "37122-444". 
----------------------------------------------------------------------------
  [1m[35m (0.2ms)[0m  ROLLBACK
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
---------------------------------------------------------------
LocationTest: test: Location should require user_id to be set. 
---------------------------------------------------------------
  [1m[35m (0.3ms)[0m  ROLLBACK
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
----------------------------------------------------------
PhoneTest: test: A given phone should be initially valid. 
----------------------------------------------------------
  [1m[35mPhone Load (0.7ms)[0m  SELECT "phones".* FROM "phones" ORDER BY "phones"."id" ASC LIMIT 1
  [1m[36m (0.2ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.1ms)[0m  BEGIN
-----------------------------------------------------------------------------------------------------------
PhoneTest: test: A given phone should not be valid with a poorly formatted 10 digit North American number. 
-----------------------------------------------------------------------------------------------------------
  [1m[36mPhone Load (0.6ms)[0m  [1mSELECT "phones".* FROM "phones" ORDER BY "phones"."id" ASC LIMIT 1[0m
  [1m[35m (0.2ms)[0m  ROLLBACK
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
----------------------------------------------------------------------------------------------------------
PhoneTest: test: A given phone should not be valid with a poorly formatted 7 digit North American number. 
----------------------------------------------------------------------------------------------------------
  [1m[35mPhone Load (0.5ms)[0m  SELECT "phones".* FROM "phones" ORDER BY "phones"."id" ASC LIMIT 1
  [1m[36m (0.1ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.1ms)[0m  BEGIN
---------------------------------------------------------------------------------------
PhoneTest: test: A given phone should optionally be a valid  EPP international number. 
---------------------------------------------------------------------------------------
  [1m[36mPhone Load (0.4ms)[0m  [1mSELECT "phones".* FROM "phones" ORDER BY "phones"."id" ASC LIMIT 1[0m
  [1m[35m (0.1ms)[0m  ROLLBACK
  [1m[36m (0.1ms)[0m  [1mBEGIN[0m
-----------------------------------------------------------------------------------------------
PhoneTest: test: A given phone should optionally be a valid  ITU-T E.123 international number. 
-----------------------------------------------------------------------------------------------
  [1m[35mPhone Load (0.4ms)[0m  SELECT "phones".* FROM "phones" ORDER BY "phones"."id" ASC LIMIT 1
  [1m[36m (0.0ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.1ms)[0m  BEGIN
-------------------------------------------------------------------------------------------------
PhoneTest: test: A given phone should optionally be a valid North American number with 7 digits. 
-------------------------------------------------------------------------------------------------
  [1m[36mPhone Load (0.5ms)[0m  [1mSELECT "phones".* FROM "phones" ORDER BY "phones"."id" ASC LIMIT 1[0m
  [1m[35m (0.2ms)[0m  ROLLBACK
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
----------------------------------------------------------------------------------------------------------------------
PhoneTest: test: A given phone should optionally be a valid number with 10 digits with a leading 1 for long distance. 
----------------------------------------------------------------------------------------------------------------------
  [1m[35mPhone Load (0.4ms)[0m  SELECT "phones".* FROM "phones" ORDER BY "phones"."id" ASC LIMIT 1
  [1m[36m (0.2ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.2ms)[0m  BEGIN
-------------------------------------------------------------------------------------------------
PhoneTest: test: A given phone should optionally require a valid 10-digit North American number. 
-------------------------------------------------------------------------------------------------
  [1m[36mPhone Load (0.4ms)[0m  [1mSELECT "phones".* FROM "phones" ORDER BY "phones"."id" ASC LIMIT 1[0m
  [1m[35m (0.2ms)[0m  ROLLBACK
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
---------------------------------------------------------
PhoneTest: test: A given phone should require a user_id. 
---------------------------------------------------------
  [1m[35mPhone Load (0.4ms)[0m  SELECT "phones".* FROM "phones" ORDER BY "phones"."id" ASC LIMIT 1
  [1m[36m (0.2ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.2ms)[0m  BEGIN
------------------------------------------------------------
PhoneTest: test: A new phone should not be initially valid. 
------------------------------------------------------------
  [1m[36m (0.1ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.1ms)[0m  BEGIN
------------------------------------------------------------------------------
PhoneTest: test: A new phone should not be savable without being fully valid. 
------------------------------------------------------------------------------
  [1m[36m (0.1ms)[0m  [1mSAVEPOINT active_record_1[0m
  [1m[35mSQL (1.6ms)[0m  INSERT INTO "phones" ("created_at", "number", "tag", "updated_at", "user_id") VALUES ($1, $2, $3, $4, $5) RETURNING "id"  [["created_at", Tue, 27 Aug 2013 00:21:44 UTC +00:00], ["number", "345-6789"], ["tag", "Home"], ["updated_at", Tue, 27 Aug 2013 00:21:44 UTC +00:00], ["user_id", 100]]
  [1m[36m (0.2ms)[0m  [1mRELEASE SAVEPOINT active_record_1[0m
  [1m[35m (0.2ms)[0m  ROLLBACK
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
---------------------------------------------------------------------------------------------------------
PhoneTest: test: A new phone should not be valid with a poorly formatted 10 digit North American number. 
---------------------------------------------------------------------------------------------------------
  [1m[35m (0.2ms)[0m  ROLLBACK
  [1m[36m (0.1ms)[0m  [1mBEGIN[0m
--------------------------------------------------------------------------------------------------------
PhoneTest: test: A new phone should not be valid with a poorly formatted 7 digit North American number. 
--------------------------------------------------------------------------------------------------------
  [1m[35m (0.1ms)[0m  ROLLBACK
  [1m[36m (0.1ms)[0m  [1mBEGIN[0m
-----------------------------------------------------------------------------------------------
PhoneTest: test: A new phone should optionally be a valid North American number with 7 digits. 
-----------------------------------------------------------------------------------------------
  [1m[35m (0.1ms)[0m  ROLLBACK
  [1m[36m (0.0ms)[0m  [1mBEGIN[0m
--------------------------------------------------------------------------------------------------------------------
PhoneTest: test: A new phone should optionally be a valid number with 10 digits with a leading 1 for long distance. 
--------------------------------------------------------------------------------------------------------------------
  [1m[35m (0.2ms)[0m  ROLLBACK
  [1m[36m (0.1ms)[0m  [1mBEGIN[0m
-----------------------------------------------------------------------------------------------
PhoneTest: test: A new phone should optionally require a valid 10-digit North American number. 
-----------------------------------------------------------------------------------------------
  [1m[35m (0.1ms)[0m  ROLLBACK
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
----------------------------------------------
PhoneTest: test: Phone should belong to user. 
----------------------------------------------
  [1m[35m (0.2ms)[0m  ROLLBACK
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
------------------------------------------------------------------------------------------------
PhoneTest: test: Phone should ensure inclusion of tag in ["Home", "Office", "Mobile", "Pager"]. 
------------------------------------------------------------------------------------------------
  [1m[35m (0.3ms)[0m  ROLLBACK
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
------------------------------------------------------------------------
PhoneTest: test: Phone should ensure number has a length of at least 7. 
------------------------------------------------------------------------
  [1m[35m (0.3ms)[0m  ROLLBACK
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
------------------------------------------------------------------------
PhoneTest: test: Phone should ensure number has a length of at most 24. 
------------------------------------------------------------------------
  [1m[35m (0.3ms)[0m  ROLLBACK
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
--------------------------------------------------------
PhoneTest: test: Phone should require number to be set. 
--------------------------------------------------------
  [1m[35m (0.3ms)[0m  ROLLBACK
  [1m[36m (0.1ms)[0m  [1mBEGIN[0m
-----------------------------------------------------
PhoneTest: test: Phone should require tag to be set. 
-----------------------------------------------------
  [1m[35m (0.3ms)[0m  ROLLBACK
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
---------------------------------------------------------
PhoneTest: test: Phone should require user_id to be set. 
---------------------------------------------------------
  [1m[35m (0.3ms)[0m  ROLLBACK
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
---------------------------------------------------------------------------------------------------
TicketQueueTest: test: A given ticket queue should require a start date if an end date is present. 
---------------------------------------------------------------------------------------------------
  [1m[35mTicketQueue Load (0.7ms)[0m  SELECT "ticket_queues".* FROM "ticket_queues" ORDER BY "ticket_queues"."id" ASC LIMIT 1
  [1m[36mTicketQueue Exists (1.1ms)[0m  [1mSELECT 1 AS one FROM "ticket_queues" WHERE ("ticket_queues"."name" = 'Queue1' AND "ticket_queues"."id" != 1) LIMIT 1[0m
  [1m[35m (0.2ms)[0m  ROLLBACK
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
-----------------------------------------------------------------------------------------------
TicketQueueTest: test: A given ticket queue should require an end date on or after start date. 
-----------------------------------------------------------------------------------------------
  [1m[35mTicketQueue Load (0.5ms)[0m  SELECT "ticket_queues".* FROM "ticket_queues" ORDER BY "ticket_queues"."id" ASC LIMIT 1
  [1m[36mTicketQueue Exists (0.5ms)[0m  [1mSELECT 1 AS one FROM "ticket_queues" WHERE ("ticket_queues"."name" = 'Queue1' AND "ticket_queues"."id" != 1) LIMIT 1[0m
  [1m[35m (0.2ms)[0m  ROLLBACK
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
-------------------------------------------------------------
TicketQueueTest: test: TicketQueue should have many tickets. 
-------------------------------------------------------------
  [1m[35m (0.2ms)[0m  ROLLBACK
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
----------------------------------------------------------------------------------------
TicketQueueTest: test: TicketQueue should require case sensitive unique value for name. 
----------------------------------------------------------------------------------------
  [1m[35mTicketQueue Load (0.4ms)[0m  SELECT "ticket_queues".* FROM "ticket_queues" ORDER BY "ticket_queues"."id" ASC LIMIT 1
  [1m[36mTicketQueue Exists (0.3ms)[0m  [1mSELECT 1 AS one FROM "ticket_queues" WHERE "ticket_queues"."name" = 'Queue1' LIMIT 1[0m
  [1m[35mTicketQueue Exists (0.4ms)[0m  SELECT 1 AS one FROM "ticket_queues" WHERE "ticket_queues"."name" = 'Queue1' LIMIT 1
  [1m[36m (0.1ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.1ms)[0m  BEGIN
----------------------------------------------------------------------------
TicketQueueTest: test: TicketQueue should require default_due_in to be set. 
----------------------------------------------------------------------------
  [1m[36mTicketQueue Exists (0.3ms)[0m  [1mSELECT 1 AS one FROM "ticket_queues" WHERE "ticket_queues"."name" IS NULL LIMIT 1[0m
  [1m[35mTicketQueue Exists (0.4ms)[0m  SELECT 1 AS one FROM "ticket_queues" WHERE "ticket_queues"."name" IS NULL LIMIT 1
  [1m[36m (0.2ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.1ms)[0m  BEGIN
-------------------------------------------------------------------------
TicketQueueTest: test: TicketQueue should require description to be set. 
-------------------------------------------------------------------------
  [1m[36mTicketQueue Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "ticket_queues" WHERE "ticket_queues"."name" IS NULL LIMIT 1[0m
  [1m[35mTicketQueue Exists (0.4ms)[0m  SELECT 1 AS one FROM "ticket_queues" WHERE "ticket_queues"."name" IS NULL LIMIT 1
  [1m[36m (0.2ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.1ms)[0m  BEGIN
------------------------------------------------------------------
TicketQueueTest: test: TicketQueue should require name to be set. 
------------------------------------------------------------------
  [1m[36mTicketQueue Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "ticket_queues" WHERE "ticket_queues"."name" IS NULL LIMIT 1[0m
  [1m[35mTicketQueue Exists (0.3ms)[0m  SELECT 1 AS one FROM "ticket_queues" WHERE "ticket_queues"."name" IS NULL LIMIT 1
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.2ms)[0m  BEGIN
----------------------------------------------------------------------
TicketQueueTest: test: TicketQueue should require priority to be set. 
----------------------------------------------------------------------
  [1m[36mTicketQueue Exists (2.4ms)[0m  [1mSELECT 1 AS one FROM "ticket_queues" WHERE "ticket_queues"."name" IS NULL LIMIT 1[0m
  [1m[35mTicketQueue Exists (0.4ms)[0m  SELECT 1 AS one FROM "ticket_queues" WHERE "ticket_queues"."name" IS NULL LIMIT 1
  [1m[36m (0.2ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.2ms)[0m  BEGIN
------------------------------------------------------------------------
TicketQueueTest: test: TicketQueue should require start_date to be set. 
------------------------------------------------------------------------
  [1m[36mTicketQueue Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "ticket_queues" WHERE "ticket_queues"."name" IS NULL LIMIT 1[0m
  [1m[35mTicketQueue Exists (0.3ms)[0m  SELECT 1 AS one FROM "ticket_queues" WHERE "ticket_queues"."name" IS NULL LIMIT 1
  [1m[36m (0.2ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.1ms)[0m  BEGIN
-----------------------------------------------------------------
TicketQueueTest: test: TicketQueue should require url to be set. 
-----------------------------------------------------------------
  [1m[36mTicketQueue Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "ticket_queues" WHERE "ticket_queues"."name" IS NULL LIMIT 1[0m
  [1m[35mTicketQueue Exists (0.3ms)[0m  SELECT 1 AS one FROM "ticket_queues" WHERE "ticket_queues"."name" IS NULL LIMIT 1
  [1m[36m (0.2ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.1ms)[0m  BEGIN
---------------------------------------------------------------
TicketTest: test: Ticket should allow priority to be set to 1. 
---------------------------------------------------------------
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.1ms)[0m  BEGIN
----------------------------------------------------------------
TicketTest: test: Ticket should allow priority to be set to 25. 
----------------------------------------------------------------
  [1m[36m (0.2ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.1ms)[0m  BEGIN
--------------------------------------------------------
TicketTest: test: Ticket should belong to ticket_queue. 
--------------------------------------------------------
  [1m[36m (0.1ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.1ms)[0m  BEGIN
------------------------------------------------
TicketTest: test: Ticket should belong to user. 
------------------------------------------------
  [1m[36m (0.1ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.1ms)[0m  BEGIN
-------------------------------------------------------------------
TicketTest: test: Ticket should not allow priority to be set to 0. 
-------------------------------------------------------------------
  [1m[36m (0.1ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.1ms)[0m  BEGIN
---------------------------------------------------------------------
TicketTest: test: Ticket should not allow priority to be set to 1.5. 
---------------------------------------------------------------------
  [1m[36m (0.2ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.1ms)[0m  BEGIN
--------------------------------------------------------------------
TicketTest: test: Ticket should not allow priority to be set to 26. 
--------------------------------------------------------------------
  [1m[36m (0.2ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.1ms)[0m  BEGIN
------------------------------------------------------------------------
TicketTest: test: Ticket should only allow numeric values for priority. 
------------------------------------------------------------------------
  [1m[36m (0.2ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.1ms)[0m  BEGIN
------------------------------------------------------------
TicketTest: test: Ticket should require priority to be set. 
------------------------------------------------------------
  [1m[36m (0.2ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.1ms)[0m  BEGIN
--------------------------------------------------------------
TicketTest: test: Ticket should require start_date to be set. 
--------------------------------------------------------------
  [1m[36m (0.2ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.1ms)[0m  BEGIN
-----------------------------------------------------------
TicketTest: test: Ticket should require subject to be set. 
-----------------------------------------------------------
  [1m[36m (0.2ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.1ms)[0m  BEGIN
----------------------------------------------------------
UserTest: test: A given user should allow adding a phone. 
----------------------------------------------------------
  [1m[36mUser Load (0.7ms)[0m  [1mSELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35m (0.2ms)[0m  SAVEPOINT active_record_1
  [1m[36mSQL (0.6ms)[0m  [1mINSERT INTO "phones" ("created_at", "number", "tag", "updated_at", "user_id") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["created_at", Tue, 27 Aug 2013 00:21:44 UTC +00:00], ["number", "234-5678"], ["tag", "Home"], ["updated_at", Tue, 27 Aug 2013 00:21:44 UTC +00:00], ["user_id", 1]]
  [1m[35m (0.2ms)[0m  RELEASE SAVEPOINT active_record_1
  [1m[36m (0.2ms)[0m  [1mSAVEPOINT active_record_1[0m
  [1m[35mUser Exists (0.6ms)[0m  SELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1
  [1m[36m (0.2ms)[0m  [1mRELEASE SAVEPOINT active_record_1[0m
  [1m[35m (0.8ms)[0m  SELECT COUNT(*) FROM "phones" WHERE "phones"."user_id" = $1  [["user_id", 1]]
  [1m[36m (0.2ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.2ms)[0m  BEGIN
---------------------------------------------------------------------------
UserTest: test: A given user should allow retrieval of user phone numbers. 
---------------------------------------------------------------------------
  [1m[36mUser Load (0.5ms)[0m  [1mSELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35m (0.4ms)[0m  SELECT COUNT(*) FROM "phones" WHERE "phones"."user_id" = $1  [["user_id", 1]]
  [1m[36m (0.2ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.1ms)[0m  BEGIN
--------------------------------------------------------
UserTest: test: A given user should be valid initially. 
--------------------------------------------------------
  [1m[36mUser Load (2.7ms)[0m  [1mSELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35mUser Exists (0.5ms)[0m  SELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1
  [1m[36m (0.2ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.2ms)[0m  BEGIN
-----------------------------------------------------------------------
UserTest: test: A given user should not be valid if first name is nil. 
-----------------------------------------------------------------------
  [1m[36mUser Load (0.6ms)[0m  [1mSELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35mUser Exists (0.5ms)[0m  SELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1
  [1m[36m (0.2ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.2ms)[0m  BEGIN
----------------------------------------------------------------------------
UserTest: test: A given user should not be valid if first name is too long. 
----------------------------------------------------------------------------
  [1m[36mUser Load (0.5ms)[0m  [1mSELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1
  [1m[36m (0.2ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.2ms)[0m  BEGIN
-----------------------------------------------------------------------------
UserTest: test: A given user should not be valid if first name is too short. 
-----------------------------------------------------------------------------
  [1m[36mUser Load (0.4ms)[0m  [1mSELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1
  [1m[36m (0.2ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.1ms)[0m  BEGIN
------------------------------------------------------------------------------------------------
UserTest: test: A given user should not be valid if first name starts with a lower case letter. 
------------------------------------------------------------------------------------------------
  [1m[36mUser Load (0.4ms)[0m  [1mSELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1
  [1m[36m (0.2ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.2ms)[0m  BEGIN
----------------------------------------------------------------------
UserTest: test: A given user should not be valid if last name is nil. 
----------------------------------------------------------------------
  [1m[36mUser Load (0.5ms)[0m  [1mSELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1
  [1m[36m (0.2ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.2ms)[0m  BEGIN
---------------------------------------------------------------------------
UserTest: test: A given user should not be valid if last name is too long. 
---------------------------------------------------------------------------
  [1m[36mUser Load (0.4ms)[0m  [1mSELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1
  [1m[36m (0.1ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.2ms)[0m  BEGIN
----------------------------------------------------------------------------
UserTest: test: A given user should not be valid if last name is too short. 
----------------------------------------------------------------------------
  [1m[36mUser Load (0.4ms)[0m  [1mSELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35mUser Exists (0.3ms)[0m  SELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1
  [1m[36m (0.1ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.1ms)[0m  BEGIN
---------------------------------------------------------------------------------------------
UserTest: test: A given user should not be valid if login name has non-alphanumeric letters. 
---------------------------------------------------------------------------------------------
  [1m[36mUser Load (0.4ms)[0m  [1mSELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35mUser Exists (0.3ms)[0m  SELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'johns-276' AND "users"."id" != 1) LIMIT 1
  [1m[36m (0.2ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.1ms)[0m  BEGIN
-------------------------------------------------------------------------------
UserTest: test: A given user should not be valid if login name is a duplicate. 
-------------------------------------------------------------------------------
  [1m[36mUser Load (0.4ms)[0m  [1mSELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35m (0.1ms)[0m  SAVEPOINT active_record_1
  [1m[36mUser Exists (0.3ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'orstedma' LIMIT 1[0m
  [1m[35m (0.2ms)[0m  ROLLBACK TO SAVEPOINT active_record_1
  [1m[36mUser Exists (0.3ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'orstedma' LIMIT 1[0m
  [1m[35m (0.1ms)[0m  ROLLBACK
  [1m[36m (0.0ms)[0m  [1mBEGIN[0m
-----------------------------------------------------------------------
UserTest: test: A given user should not be valid if login name is nil. 
-----------------------------------------------------------------------
  [1m[35mUser Load (0.3ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (0.3ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" IS NULL AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.1ms)[0m  ROLLBACK
  [1m[36m (0.1ms)[0m  [1mBEGIN[0m
----------------------------------------------------------------------------
UserTest: test: A given user should not be valid if login name is too long. 
----------------------------------------------------------------------------
  [1m[35mUser Load (0.4ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (0.3ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'abbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.1ms)[0m  ROLLBACK
  [1m[36m (0.1ms)[0m  [1mBEGIN[0m
-----------------------------------------------------------------------------
UserTest: test: A given user should not be valid if login name is too short. 
-----------------------------------------------------------------------------
  [1m[35mUser Load (0.5ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (0.3ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'aaaaa' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.1ms)[0m  ROLLBACK
  [1m[36m (0.1ms)[0m  [1mBEGIN[0m
---------------------------------------------------------------------------------------------
UserTest: test: A given user should not be valid if login name starts with a capital letter. 
---------------------------------------------------------------------------------------------
  [1m[35mUser Load (0.4ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (0.3ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'Johns276' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.0ms)[0m  ROLLBACK
  [1m[36m (0.1ms)[0m  [1mBEGIN[0m
------------------------------------------------------------------------------------
UserTest: test: A given user should require a start date if an end date is present. 
------------------------------------------------------------------------------------
  [1m[35mUser Load (0.3ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (0.3ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.1ms)[0m  ROLLBACK
  [1m[36m (0.0ms)[0m  [1mBEGIN[0m
--------------------------------------------------------------------------------
UserTest: test: A given user should require an end date on or after start date. 
--------------------------------------------------------------------------------
  [1m[35mUser Load (0.4ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (0.3ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.1ms)[0m  ROLLBACK
  [1m[36m (0.1ms)[0m  [1mBEGIN[0m
----------------------------------------------------------------
UserTest: test: A given user should retrieve only valid phones. 
----------------------------------------------------------------
  [1m[35mUser Load (0.2ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mPhone Load (0.7ms)[0m  [1mSELECT "phones".* FROM "phones" WHERE "phones"."user_id" = $1[0m  [["user_id", 1]]
  [1m[35m (0.2ms)[0m  ROLLBACK
  [1m[36m (0.0ms)[0m  [1mBEGIN[0m
--------------------------------------------------------
UserTest: test: A new user should allow adding a phone. 
--------------------------------------------------------
  [1m[35m (0.1ms)[0m  ROLLBACK
  [1m[36m (0.0ms)[0m  [1mBEGIN[0m
------------------------------------------------------
UserTest: test: A new user should be valid initially. 
------------------------------------------------------
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.2ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.1ms)[0m  BEGIN
---------------------------------------------------------------------
UserTest: test: A new user should not be valid if first name is nil. 
---------------------------------------------------------------------
  [1m[36mUser Exists (0.5ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35m (0.2ms)[0m  ROLLBACK
  [1m[36m (0.1ms)[0m  [1mBEGIN[0m
--------------------------------------------------------------------------
UserTest: test: A new user should not be valid if first name is too long. 
--------------------------------------------------------------------------
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.2ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.2ms)[0m  BEGIN
---------------------------------------------------------------------------
UserTest: test: A new user should not be valid if first name is too short. 
---------------------------------------------------------------------------
  [1m[36mUser Exists (0.2ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35m (0.1ms)[0m  ROLLBACK
  [1m[36m (0.1ms)[0m  [1mBEGIN[0m
----------------------------------------------------------------------------------------------
UserTest: test: A new user should not be valid if first name starts with a lower case letter. 
----------------------------------------------------------------------------------------------
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.2ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.2ms)[0m  BEGIN
--------------------------------------------------------------------
UserTest: test: A new user should not be valid if last name is nil. 
--------------------------------------------------------------------
  [1m[36mUser Exists (0.5ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35m (0.2ms)[0m  ROLLBACK
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
-------------------------------------------------------------------------
UserTest: test: A new user should not be valid if last name is too long. 
-------------------------------------------------------------------------
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.1ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.1ms)[0m  BEGIN
--------------------------------------------------------------------------
UserTest: test: A new user should not be valid if last name is too short. 
--------------------------------------------------------------------------
  [1m[36mUser Exists (0.3ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35m (0.1ms)[0m  ROLLBACK
  [1m[36m (0.1ms)[0m  [1mBEGIN[0m
-------------------------------------------------------------------------------------------
UserTest: test: A new user should not be valid if login name has non-alphanumeric letters. 
-------------------------------------------------------------------------------------------
  [1m[35mUser Exists (0.3ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'johns-276' LIMIT 1
  [1m[36m (0.1ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.1ms)[0m  BEGIN
-----------------------------------------------------------------------------
UserTest: test: A new user should not be valid if login name is a duplicate. 
-----------------------------------------------------------------------------
  [1m[36m (0.1ms)[0m  [1mSAVEPOINT active_record_1[0m
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'orstedma' LIMIT 1
  [1m[36m (0.3ms)[0m  [1mROLLBACK TO SAVEPOINT active_record_1[0m
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'orstedma' LIMIT 1
  [1m[36m (0.2ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.2ms)[0m  BEGIN
---------------------------------------------------------------------
UserTest: test: A new user should not be valid if login name is nil. 
---------------------------------------------------------------------
  [1m[36mUser Exists (0.5ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35m (0.2ms)[0m  ROLLBACK
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
--------------------------------------------------------------------------
UserTest: test: A new user should not be valid if login name is too long. 
--------------------------------------------------------------------------
  [1m[35mUser Exists (0.5ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'abbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb' LIMIT 1
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.2ms)[0m  BEGIN
---------------------------------------------------------------------------
UserTest: test: A new user should not be valid if login name is too short. 
---------------------------------------------------------------------------
  [1m[36mUser Exists (0.5ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'aaaaa' LIMIT 1[0m
  [1m[35m (0.2ms)[0m  ROLLBACK
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
-------------------------------------------------------------------------------------------
UserTest: test: A new user should not be valid if login name starts with a capital letter. 
-------------------------------------------------------------------------------------------
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'Johns276' LIMIT 1
  [1m[36m (0.1ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.2ms)[0m  BEGIN
----------------------------------------------------------------------------------
UserTest: test: A new user should require a start date if an end date is present. 
----------------------------------------------------------------------------------
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35m (0.3ms)[0m  ROLLBACK
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
------------------------------------------------------------------------------
UserTest: test: A new user should require an end date on or after start date. 
------------------------------------------------------------------------------
  [1m[35mUser Exists (2.9ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.2ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.2ms)[0m  BEGIN
---------------------------------------------------------------------
UserTest: test: User should allow first_name to be set to "Charles". 
---------------------------------------------------------------------
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.2ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.1ms)[0m  BEGIN
--------------------------------------------------------------------------
UserTest: test: User should ensure first_name has a length of at least 2. 
--------------------------------------------------------------------------
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.5ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.5ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35m (0.2ms)[0m  ROLLBACK
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
---------------------------------------------------------------------------
UserTest: test: User should ensure first_name has a length of at most 254. 
---------------------------------------------------------------------------
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.5ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.2ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.2ms)[0m  BEGIN
-------------------------------------------------------------------------
UserTest: test: User should ensure last_name has a length of at least 2. 
-------------------------------------------------------------------------
  [1m[36mUser Exists (0.5ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35m (0.2ms)[0m  ROLLBACK
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
--------------------------------------------------------------------------
UserTest: test: User should ensure last_name has a length of at most 254. 
--------------------------------------------------------------------------
  [1m[35mUser Exists (0.5ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (3.2ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.5ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.2ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.2ms)[0m  BEGIN
--------------------------------------------------------------------------
UserTest: test: User should ensure login_name has a length of at least 6. 
--------------------------------------------------------------------------
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxx' LIMIT 1[0m
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxx' LIMIT 1
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxx' LIMIT 1[0m
  [1m[35mUser Exists (0.3ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxx' LIMIT 1
  [1m[36mUser Exists (0.3ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxx' LIMIT 1[0m
  [1m[35m (0.1ms)[0m  ROLLBACK
  [1m[36m (0.1ms)[0m  [1mBEGIN[0m
---------------------------------------------------------------------------
UserTest: test: User should ensure login_name has a length of at most 254. 
---------------------------------------------------------------------------
  [1m[35mUser Exists (0.5ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' LIMIT 1
  [1m[36mUser Exists (0.3ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' LIMIT 1[0m
  [1m[35mUser Exists (0.5ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' LIMIT 1
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' LIMIT 1[0m
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' LIMIT 1
  [1m[36m (0.2ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.2ms)[0m  BEGIN
--------------------------------------------------------------------------
UserTest: test: User should ensure nick_name has a length of at most 254. 
--------------------------------------------------------------------------
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.5ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.5ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35m (0.2ms)[0m  ROLLBACK
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
-------------------------------------------------
UserTest: test: User should have many locations. 
-------------------------------------------------
  [1m[35m (0.2ms)[0m  ROLLBACK
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
----------------------------------------------
UserTest: test: User should have many phones. 
----------------------------------------------
  [1m[35m (0.2ms)[0m  ROLLBACK
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
-------------------------------------------------------------------------
UserTest: test: User should not allow first_name to be set to "charles". 
-------------------------------------------------------------------------
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35m (0.2ms)[0m  ROLLBACK
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
--------------------------------------------------------------------------------
UserTest: test: User should require case sensitive unique value for login_name. 
--------------------------------------------------------------------------------
  [1m[35mUser Load (0.5ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'orstedma' LIMIT 1[0m
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'orstedma' LIMIT 1
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.2ms)[0m  BEGIN
----------------------------------------------------------
UserTest: test: User should require first_name to be set. 
----------------------------------------------------------
  [1m[36mUser Exists (2.9ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.6ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.2ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.1ms)[0m  BEGIN
---------------------------------------------------------
UserTest: test: User should require last_name to be set. 
---------------------------------------------------------
  [1m[36mUser Exists (0.5ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.5ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.2ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.2ms)[0m  BEGIN
----------------------------------------------------------
UserTest: test: User should require login_name to be set. 
----------------------------------------------------------
  [1m[36mUser Exists (0.5ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.2ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.1ms)[0m  BEGIN
----------------------------------------------------------
UserTest: test: User should require start_date to be set. 
----------------------------------------------------------
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.2ms)[0m  [1mROLLBACK[0m
  [1m[36m (529.3ms)[0m  [1mDROP DATABASE IF EXISTS "ritrack_test"[0m
  [1m[35m (699.4ms)[0m  CREATE DATABASE "ritrack_test" ENCODING = 'unicode'
  [1m[36mSQL (1.6ms)[0m  [1mCREATE EXTENSION IF NOT EXISTS "plpgsql"[0m
  [1m[35m (92.5ms)[0m  CREATE TABLE "locations" ("id" serial primary key, "company" character varying(255), "organization" character varying(255), "address1" character varying(255), "address2" character varying(255), "city" character varying(255), "state" character varying(255), "zip" character varying(255), "country" character varying(255), "user_id" integer, "created_at" timestamp, "updated_at" timestamp) 
  [1m[36m (49.6ms)[0m  [1mCREATE INDEX "index_locations_on_user_id" ON "locations" USING btree ("user_id")[0m
  [1m[35m (89.6ms)[0m  CREATE TABLE "phones" ("id" serial primary key, "number" character varying(255), "tag" character varying(255), "user_id" integer, "created_at" timestamp, "updated_at" timestamp) 
  [1m[36m (49.7ms)[0m  [1mCREATE INDEX "index_phones_on_number" ON "phones" USING btree ("number")[0m
  [1m[35m (53.6ms)[0m  CREATE INDEX "index_phones_on_user_id" ON "phones" USING btree ("user_id")
  [1m[36m (81.0ms)[0m  [1mCREATE TABLE "ticket_queues" ("id" serial primary key, "name" character varying(255), "description" character varying(255), "url" character varying(255), "priority" integer, "default_due_in" integer, "start_date" date, "end_date" date, "created_at" timestamp, "updated_at" timestamp) [0m
  [1m[35m (81.1ms)[0m  CREATE TABLE "ticket_responses" ("id" serial primary key, "body" text, "response_sent" timestamp, "ticket_id" integer, "created_at" timestamp, "updated_at" timestamp) 
  [1m[36m (55.5ms)[0m  [1mCREATE INDEX "index_ticket_responses_on_ticket_id" ON "ticket_responses" USING btree ("ticket_id")[0m
  [1m[35m (80.9ms)[0m  CREATE TABLE "tickets" ("id" serial primary key, "subject" character varying(255), "status" character varying(255), "priority" integer, "start_date" timestamp, "end_date" timestamp, "due_date" timestamp, "user_id" integer, "ticket_queue_id" integer, "created_at" timestamp, "updated_at" timestamp, "requestor_id" integer) 
  [1m[36m (55.5ms)[0m  [1mCREATE INDEX "index_tickets_on_requestor_id" ON "tickets" USING btree ("requestor_id")[0m
  [1m[35m (54.6ms)[0m  CREATE INDEX "index_tickets_on_ticket_queue_id" ON "tickets" USING btree ("ticket_queue_id")
  [1m[36m (62.9ms)[0m  [1mCREATE INDEX "index_tickets_on_user_id" ON "tickets" USING btree ("user_id")[0m
  [1m[35m (89.6ms)[0m  CREATE TABLE "users" ("id" serial primary key, "first_name" character varying(255), "last_name" character varying(255), "nick_name" character varying(255), "login_name" character varying(255), "notes" text, "created_at" timestamp, "updated_at" timestamp, "start_date" date, "end_date" date, "is_admin" boolean, "can_login" boolean, "user_by_email" boolean) 
  [1m[36m (4.6ms)[0m  [1mCREATE TABLE "schema_migrations" ("version" character varying(255) NOT NULL) [0m
  [1m[35m (55.5ms)[0m  CREATE UNIQUE INDEX "unique_schema_migrations" ON "schema_migrations" ("version")
  [1m[36m (0.7ms)[0m  [1mSELECT version FROM "schema_migrations"[0m
  [1m[35m (6.5ms)[0m  INSERT INTO "schema_migrations" (version) VALUES ('20130827150753')
  [1m[36m (7.9ms)[0m  [1mINSERT INTO "schema_migrations" (version) VALUES ('20130827135409')[0m
  [1m[35m (8.0ms)[0m  INSERT INTO "schema_migrations" (version) VALUES ('20130816142047')
  [1m[36m (8.0ms)[0m  [1mINSERT INTO "schema_migrations" (version) VALUES ('20130826182256')[0m
  [1m[35m (7.9ms)[0m  INSERT INTO "schema_migrations" (version) VALUES ('20130826183525')
  [1m[36m (8.1ms)[0m  [1mINSERT INTO "schema_migrations" (version) VALUES ('20130821233827')[0m
  [1m[35m (8.0ms)[0m  INSERT INTO "schema_migrations" (version) VALUES ('20130826154055')
  [1m[36m (8.0ms)[0m  [1mINSERT INTO "schema_migrations" (version) VALUES ('20130811212425')[0m
  [1m[35m (7.9ms)[0m  INSERT INTO "schema_migrations" (version) VALUES ('20130825220004')
  [1m[36m (8.0ms)[0m  [1mINSERT INTO "schema_migrations" (version) VALUES ('20130811195620')[0m
  [1m[35m (8.0ms)[0m  INSERT INTO "schema_migrations" (version) VALUES ('20130811193133')
  [1m[36m (8.0ms)[0m  [1mINSERT INTO "schema_migrations" (version) VALUES ('20130811195557')[0m
  [1m[35mActiveRecord::SchemaMigration Load (0.5ms)[0m  SELECT "schema_migrations".* FROM "schema_migrations"
  [1m[36mActiveRecord::SchemaMigration Load (0.4ms)[0m  [1mSELECT "schema_migrations".* FROM "schema_migrations"[0m
  [1m[35m (8.0ms)[0m  ALTER TABLE "locations" DISABLE TRIGGER ALL;ALTER TABLE "phones" DISABLE TRIGGER ALL;ALTER TABLE "ticket_queues" DISABLE TRIGGER ALL;ALTER TABLE "ticket_responses" DISABLE TRIGGER ALL;ALTER TABLE "tickets" DISABLE TRIGGER ALL;ALTER TABLE "users" DISABLE TRIGGER ALL;ALTER TABLE "schema_migrations" DISABLE TRIGGER ALL
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
  [1m[35mFixture Delete (0.6ms)[0m  DELETE FROM "tickets"
  [1m[36mFixture Insert (0.9ms)[0m  [1mINSERT INTO "tickets" ("id", "subject", "status", "priority", "start_date", "end_date", "due_date", "user_id", "ticket_queue_id", "created_at", "updated_at") VALUES (1, 'Jobs filling hard disks completely', 'New', 1, '2013-08-26 13:22:56.000000', NULL, '2013-08-26 13:22:56.000000', 1, 1, '2013-08-27 22:30:46', '2013-08-27 22:30:46')[0m
  [1m[35mFixture Insert (0.4ms)[0m  INSERT INTO "tickets" ("id", "subject", "status", "priority", "start_date", "end_date", "due_date", "user_id", "ticket_queue_id", "created_at", "updated_at") VALUES (2, 'Hard drive failing. Replacement requested.', 'Opened', 1, '2013-08-26 13:22:56.000000', NULL, '2013-09-26 13:22:56.000000', 1, 1, '2013-08-27 22:30:46', '2013-08-27 22:30:46')
  [1m[36mFixture Delete (0.5ms)[0m  [1mDELETE FROM "ticket_queues"[0m
  [1m[35mFixture Insert (0.6ms)[0m  INSERT INTO "ticket_queues" ("id", "name", "description", "url", "priority", "default_due_in", "start_date", "end_date", "created_at", "updated_at") VALUES (1, 'Queue1', 'Ticket queue 1', 'mydomain.com', 1, 1, '2013-08-26', NULL, '2013-08-27 22:30:46', '2013-08-27 22:30:46')
  [1m[36mFixture Insert (0.4ms)[0m  [1mINSERT INTO "ticket_queues" ("id", "name", "description", "url", "priority", "default_due_in", "start_date", "end_date", "created_at", "updated_at") VALUES (2, 'Queue2', 'Ticket queue 2', 'mydomain.com', 1, 1, '2013-08-26', NULL, '2013-08-27 22:30:46', '2013-08-27 22:30:46')[0m
  [1m[35mFixture Delete (0.5ms)[0m  DELETE FROM "phones"
  [1m[36mFixture Insert (0.6ms)[0m  [1mINSERT INTO "phones" ("id", "number", "tag", "user_id", "created_at", "updated_at") VALUES (1, '(211) 234-1111', 'Office', 1, '2013-08-27 22:30:46', '2013-08-27 22:30:46')[0m
  [1m[35mFixture Insert (0.4ms)[0m  INSERT INTO "phones" ("id", "number", "tag", "user_id", "created_at", "updated_at") VALUES (2, '(222) 345-2222', 'Home', 1, '2013-08-27 22:30:46', '2013-08-27 22:30:46')
  [1m[36mFixture Insert (0.4ms)[0m  [1mINSERT INTO "phones" ("id", "number", "tag", "user_id", "created_at", "updated_at") VALUES (3, '(333) 456-3333', 'Mobile', 1, '2013-08-27 22:30:46', '2013-08-27 22:30:46')[0m
  [1m[35mFixture Insert (0.4ms)[0m  INSERT INTO "phones" ("id", "number", "tag", "user_id", "created_at", "updated_at") VALUES (4, '(444) 567-4444', 'Pager', 1, '2013-08-27 22:30:46', '2013-08-27 22:30:46')
  [1m[36mFixture Insert (0.4ms)[0m  [1mINSERT INTO "phones" ("id", "number", "tag", "user_id", "created_at", "updated_at") VALUES (5, '(555) 678-5555', 'Mobile', 1, '2013-08-27 22:30:46', '2013-08-27 22:30:46')[0m
  [1m[35mFixture Insert (0.4ms)[0m  INSERT INTO "phones" ("id", "number", "tag", "user_id", "created_at", "updated_at") VALUES (6, '(666) 789-6666', 'Mobile', 1, '2013-08-27 22:30:46', '2013-08-27 22:30:46')
  [1m[36mFixture Delete (0.4ms)[0m  [1mDELETE FROM "locations"[0m
  [1m[35mFixture Insert (0.5ms)[0m  INSERT INTO "locations" ("id", "company", "organization", "address1", "address2", "city", "state", "zip", "country", "user_id", "created_at", "updated_at") VALUES (1, 'NPR', 'News Desk', '1444 First Street', 'Floor 15', 'Washington', 'DC', '10270', 'US', 1, '2013-08-27 22:30:46', '2013-08-27 22:30:46')
  [1m[36mFixture Insert (0.3ms)[0m  [1mINSERT INTO "locations" ("company", "organization", "address1", "address2", "city", "state", "zip", "country", "user_id", "created_at", "updated_at", "id") VALUES ('NPR', 'Scotland Desk', '63 Park Avenue', 'Suite 102', 'Chicago', 'IL', '69755', 'US', 1, '2013-08-27 22:30:46', '2013-08-27 22:30:46', 298486374)[0m
  [1m[35mFixture Delete (0.4ms)[0m  DELETE FROM "users"
  [1m[36mFixture Insert (0.5ms)[0m  [1mINSERT INTO "users" ("id", "first_name", "last_name", "nick_name", "login_name", "start_date", "end_date", "notes", "created_at", "updated_at") VALUES (1, 'Michael', 'Orsted', 'Mike', 'orstedma', '2012-02-04', NULL, 'This user lives in Chicago.', '2013-08-27 22:30:46', '2013-08-27 22:30:46')[0m
  [1m[35mFixture Insert (0.5ms)[0m  INSERT INTO "users" ("id", "first_name", "last_name", "nick_name", "login_name", "start_date", "end_date", "notes", "created_at", "updated_at") VALUES (2, 'Frederick', 'Free-Loader', 'Frederick', 'freelofw', '2012-03-04', NULL, 'This user is completely useless', '2013-08-27 22:30:46', '2013-08-27 22:30:46')
  [1m[36mFixture Insert (0.4ms)[0m  [1mINSERT INTO "users" ("id", "first_name", "last_name", "nick_name", "login_name", "start_date", "end_date", "notes", "created_at", "updated_at") VALUES (3, 'Michael', 'Winstead', 'Mike', 'winstem', '2012-02-04', '2013-08-12', 'This user lives in New York. This user is disabled in the system.', '2013-08-27 22:30:46', '2013-08-27 22:30:46')[0m
  [1m[35mFixture Insert (0.4ms)[0m  INSERT INTO "users" ("id", "first_name", "last_name", "nick_name", "login_name", "start_date", "end_date", "notes", "created_at", "updated_at") VALUES (4, 'Allison', 'Wilson', 'Alli', 'wilsona', '2012-03-04', NULL, 'Electrical engineer.', '2013-08-27 22:30:46', '2013-08-27 22:30:46')
  [1m[36mFixture Delete (0.5ms)[0m  [1mDELETE FROM "ticket_responses"[0m
  [1m[35mFixture Insert (0.6ms)[0m  INSERT INTO "ticket_responses" ("id", "body", "response_sent", "ticket_id", "created_at", "updated_at") VALUES (1, 'This is my first response to filling hard drives', '2013-08-26 13:35:25.000000', 1, '2013-08-27 22:30:46', '2013-08-27 22:30:46')
  [1m[36mFixture Insert (0.4ms)[0m  [1mINSERT INTO "ticket_responses" ("id", "body", "response_sent", "ticket_id", "created_at", "updated_at") VALUES (2, 'MyText', '2013-08-26 13:35:25.000000', 1, '2013-08-27 22:30:46', '2013-08-27 22:30:46')[0m
  [1m[35m (9.9ms)[0m  COMMIT
  [1m[36m (0.6ms)[0m  [1mALTER TABLE "locations" ENABLE TRIGGER ALL;ALTER TABLE "phones" ENABLE TRIGGER ALL;ALTER TABLE "ticket_queues" ENABLE TRIGGER ALL;ALTER TABLE "ticket_responses" ENABLE TRIGGER ALL;ALTER TABLE "tickets" ENABLE TRIGGER ALL;ALTER TABLE "users" ENABLE TRIGGER ALL;ALTER TABLE "schema_migrations" ENABLE TRIGGER ALL[0m
  [1m[35m (0.2ms)[0m  BEGIN
--------------------------------------------------------------------------------------------------------
LocationTest: test: A given Location should not be valid if adddress2 is specified and address1 is not. 
--------------------------------------------------------------------------------------------------------
  [1m[36mLocation Load (1.0ms)[0m  [1mSELECT "locations".* FROM "locations" ORDER BY "locations"."id" ASC LIMIT 1[0m
  [1m[35m (0.3ms)[0m  ROLLBACK
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
------------------------------------------------------------------------------------------------------
LocationTest: test: A given Location should not be valid if company is specified and address1 is not. 
------------------------------------------------------------------------------------------------------
  [1m[35mLocation Load (0.5ms)[0m  SELECT "locations".* FROM "locations" ORDER BY "locations"."id" ASC LIMIT 1
  [1m[36m (0.2ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.2ms)[0m  BEGIN
--------------------------------------------------------------------------------------------------
LocationTest: test: A given Location should not be valid if company is specified and city is not. 
--------------------------------------------------------------------------------------------------
  [1m[36mLocation Load (0.5ms)[0m  [1mSELECT "locations".* FROM "locations" ORDER BY "locations"."id" ASC LIMIT 1[0m
  [1m[35m (0.2ms)[0m  ROLLBACK
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
---------------------------------------------------------------------------------------------------
LocationTest: test: A given Location should not be valid if company is specified and state is not. 
---------------------------------------------------------------------------------------------------
  [1m[35mLocation Load (0.4ms)[0m  SELECT "locations".* FROM "locations" ORDER BY "locations"."id" ASC LIMIT 1
  [1m[36m (0.1ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.2ms)[0m  BEGIN
-------------------------------------------------------------------------------------------------
LocationTest: test: A given Location should not be valid if company is specified and zip is not. 
-------------------------------------------------------------------------------------------------
  [1m[36mLocation Load (0.4ms)[0m  [1mSELECT "locations".* FROM "locations" ORDER BY "locations"."id" ASC LIMIT 1[0m
  [1m[35m (0.1ms)[0m  ROLLBACK
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
--------------------------------------------------------------------------------------------
LocationTest: test: A given Location should require a valid comany if comapny is specified. 
--------------------------------------------------------------------------------------------
  [1m[35mLocation Load (0.6ms)[0m  SELECT "locations".* FROM "locations" ORDER BY "locations"."id" ASC LIMIT 1
  [1m[36m (0.2ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.2ms)[0m  BEGIN
------------------------------------------------------------------------------------------------------
LocationTest: test: A new Location should not be valid if adddress2 is specified and address1 is not. 
------------------------------------------------------------------------------------------------------
  [1m[36m (0.2ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.2ms)[0m  BEGIN
----------------------------------------------------------------------------------------------------
LocationTest: test: A new Location should not be valid if company is specified and address1 is not. 
----------------------------------------------------------------------------------------------------
  [1m[36m (0.2ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.1ms)[0m  BEGIN
------------------------------------------------------------------------------------------------
LocationTest: test: A new Location should not be valid if company is specified and city is not. 
------------------------------------------------------------------------------------------------
  [1m[36m (0.2ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.2ms)[0m  BEGIN
-------------------------------------------------------------------------------------------------
LocationTest: test: A new Location should not be valid if company is specified and state is not. 
-------------------------------------------------------------------------------------------------
  [1m[36m (0.2ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.2ms)[0m  BEGIN
-----------------------------------------------------------------------------------------------
LocationTest: test: A new Location should not be valid if company is specified and zip is not. 
-----------------------------------------------------------------------------------------------
  [1m[36m (0.2ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.2ms)[0m  BEGIN
------------------------------------------------------------------------------------------
LocationTest: test: A new Location should require a valid comany if comapny is specified. 
------------------------------------------------------------------------------------------
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.1ms)[0m  BEGIN
---------------------------------------------------------------------------------------------
LocationTest: test: Location should allow company to be set to "American Telegraph Company". 
---------------------------------------------------------------------------------------------
  [1m[36m (0.1ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.2ms)[0m  BEGIN
-------------------------------------------------------------------------------------
LocationTest: test: Location should allow company to be set to "American Telegraph". 
-------------------------------------------------------------------------------------
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.2ms)[0m  BEGIN
---------------------------------------------------------------------------
LocationTest: test: Location should allow company to be set to "American". 
---------------------------------------------------------------------------
  [1m[36m (0.1ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.2ms)[0m  BEGIN
----------------------------------------------------------------------
LocationTest: test: Location should allow company to be set to "IBM". 
----------------------------------------------------------------------
  [1m[36m (0.1ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.1ms)[0m  BEGIN
--------------------------------------------------------------------
LocationTest: test: Location should allow zip to be set to "37122". 
--------------------------------------------------------------------
  [1m[36m (0.2ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.1ms)[0m  BEGIN
-------------------------------------------------------------------------
LocationTest: test: Location should allow zip to be set to "37122-4444". 
-------------------------------------------------------------------------
  [1m[36m (0.2ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.1ms)[0m  BEGIN
----------------------------------------------------
LocationTest: test: Location should belong to user. 
----------------------------------------------------
  [1m[36m (0.1ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.0ms)[0m  BEGIN
-------------------------------------------------------------------------------------------------
LocationTest: test: Location should not allow company to be set to "American Telegraph company". 
-------------------------------------------------------------------------------------------------
  [1m[36m (0.2ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.1ms)[0m  BEGIN
----------------------------------------------------------------------------
LocationTest: test: Location should not allow company to be set to "INTEL". 
----------------------------------------------------------------------------
  [1m[36m (0.2ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.1ms)[0m  BEGIN
----------------------------------------------------------------------------
LocationTest: test: Location should not allow zip to be set to "3712-4444". 
----------------------------------------------------------------------------
  [1m[36m (0.2ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.1ms)[0m  BEGIN
----------------------------------------------------------------------------
LocationTest: test: Location should not allow zip to be set to "37122-444". 
----------------------------------------------------------------------------
  [1m[36m (0.2ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.1ms)[0m  BEGIN
---------------------------------------------------------------
LocationTest: test: Location should require user_id to be set. 
---------------------------------------------------------------
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.1ms)[0m  BEGIN
----------------------------------------------------------
PhoneTest: test: A given phone should be initially valid. 
----------------------------------------------------------
  [1m[36mPhone Load (0.7ms)[0m  [1mSELECT "phones".* FROM "phones" ORDER BY "phones"."id" ASC LIMIT 1[0m
  [1m[35m (0.3ms)[0m  ROLLBACK
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
-----------------------------------------------------------------------------------------------------------
PhoneTest: test: A given phone should not be valid with a poorly formatted 10 digit North American number. 
-----------------------------------------------------------------------------------------------------------
  [1m[35mPhone Load (0.5ms)[0m  SELECT "phones".* FROM "phones" ORDER BY "phones"."id" ASC LIMIT 1
  [1m[36m (0.2ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.2ms)[0m  BEGIN
----------------------------------------------------------------------------------------------------------
PhoneTest: test: A given phone should not be valid with a poorly formatted 7 digit North American number. 
----------------------------------------------------------------------------------------------------------
  [1m[36mPhone Load (0.5ms)[0m  [1mSELECT "phones".* FROM "phones" ORDER BY "phones"."id" ASC LIMIT 1[0m
  [1m[35m (0.2ms)[0m  ROLLBACK
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
---------------------------------------------------------------------------------------
PhoneTest: test: A given phone should optionally be a valid  EPP international number. 
---------------------------------------------------------------------------------------
  [1m[35mPhone Load (0.4ms)[0m  SELECT "phones".* FROM "phones" ORDER BY "phones"."id" ASC LIMIT 1
  [1m[36m (0.2ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.2ms)[0m  BEGIN
-----------------------------------------------------------------------------------------------
PhoneTest: test: A given phone should optionally be a valid  ITU-T E.123 international number. 
-----------------------------------------------------------------------------------------------
  [1m[36mPhone Load (0.3ms)[0m  [1mSELECT "phones".* FROM "phones" ORDER BY "phones"."id" ASC LIMIT 1[0m
  [1m[35m (0.2ms)[0m  ROLLBACK
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
-------------------------------------------------------------------------------------------------
PhoneTest: test: A given phone should optionally be a valid North American number with 7 digits. 
-------------------------------------------------------------------------------------------------
  [1m[35mPhone Load (0.3ms)[0m  SELECT "phones".* FROM "phones" ORDER BY "phones"."id" ASC LIMIT 1
  [1m[36m (0.2ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.1ms)[0m  BEGIN
----------------------------------------------------------------------------------------------------------------------
PhoneTest: test: A given phone should optionally be a valid number with 10 digits with a leading 1 for long distance. 
----------------------------------------------------------------------------------------------------------------------
  [1m[36mPhone Load (0.3ms)[0m  [1mSELECT "phones".* FROM "phones" ORDER BY "phones"."id" ASC LIMIT 1[0m
  [1m[35m (0.1ms)[0m  ROLLBACK
  [1m[36m (0.1ms)[0m  [1mBEGIN[0m
-------------------------------------------------------------------------------------------------
PhoneTest: test: A given phone should optionally require a valid 10-digit North American number. 
-------------------------------------------------------------------------------------------------
  [1m[35mPhone Load (0.3ms)[0m  SELECT "phones".* FROM "phones" ORDER BY "phones"."id" ASC LIMIT 1
  [1m[36m (0.2ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.1ms)[0m  BEGIN
---------------------------------------------------------
PhoneTest: test: A given phone should require a user_id. 
---------------------------------------------------------
  [1m[36mPhone Load (0.3ms)[0m  [1mSELECT "phones".* FROM "phones" ORDER BY "phones"."id" ASC LIMIT 1[0m
  [1m[35m (0.1ms)[0m  ROLLBACK
  [1m[36m (0.1ms)[0m  [1mBEGIN[0m
------------------------------------------------------------
PhoneTest: test: A new phone should not be initially valid. 
------------------------------------------------------------
  [1m[35m (0.1ms)[0m  ROLLBACK
  [1m[36m (0.1ms)[0m  [1mBEGIN[0m
------------------------------------------------------------------------------
PhoneTest: test: A new phone should not be savable without being fully valid. 
------------------------------------------------------------------------------
  [1m[35m (0.2ms)[0m  SAVEPOINT active_record_1
  [1m[36mSQL (1.7ms)[0m  [1mINSERT INTO "phones" ("created_at", "number", "tag", "updated_at", "user_id") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["created_at", Tue, 27 Aug 2013 22:30:46 UTC +00:00], ["number", "345-6789"], ["tag", "Home"], ["updated_at", Tue, 27 Aug 2013 22:30:46 UTC +00:00], ["user_id", 100]]
  [1m[35m (0.1ms)[0m  RELEASE SAVEPOINT active_record_1
  [1m[36m (0.1ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.0ms)[0m  BEGIN
---------------------------------------------------------------------------------------------------------
PhoneTest: test: A new phone should not be valid with a poorly formatted 10 digit North American number. 
---------------------------------------------------------------------------------------------------------
  [1m[36m (0.1ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.1ms)[0m  BEGIN
--------------------------------------------------------------------------------------------------------
PhoneTest: test: A new phone should not be valid with a poorly formatted 7 digit North American number. 
--------------------------------------------------------------------------------------------------------
  [1m[36m (0.1ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.1ms)[0m  BEGIN
-----------------------------------------------------------------------------------------------
PhoneTest: test: A new phone should optionally be a valid North American number with 7 digits. 
-----------------------------------------------------------------------------------------------
  [1m[36m (0.2ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.1ms)[0m  BEGIN
--------------------------------------------------------------------------------------------------------------------
PhoneTest: test: A new phone should optionally be a valid number with 10 digits with a leading 1 for long distance. 
--------------------------------------------------------------------------------------------------------------------
  [1m[36m (0.1ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.1ms)[0m  BEGIN
-----------------------------------------------------------------------------------------------
PhoneTest: test: A new phone should optionally require a valid 10-digit North American number. 
-----------------------------------------------------------------------------------------------
  [1m[36m (0.1ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.1ms)[0m  BEGIN
----------------------------------------------
PhoneTest: test: Phone should belong to user. 
----------------------------------------------
  [1m[36m (0.1ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.1ms)[0m  BEGIN
------------------------------------------------------------------------------------------------
PhoneTest: test: Phone should ensure inclusion of tag in ["Home", "Office", "Mobile", "Pager"]. 
------------------------------------------------------------------------------------------------
  [1m[36m (0.2ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.2ms)[0m  BEGIN
------------------------------------------------------------------------
PhoneTest: test: Phone should ensure number has a length of at least 7. 
------------------------------------------------------------------------
  [1m[36m (0.2ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.1ms)[0m  BEGIN
------------------------------------------------------------------------
PhoneTest: test: Phone should ensure number has a length of at most 24. 
------------------------------------------------------------------------
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.1ms)[0m  BEGIN
--------------------------------------------------------
PhoneTest: test: Phone should require number to be set. 
--------------------------------------------------------
  [1m[36m (0.2ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.1ms)[0m  BEGIN
-----------------------------------------------------
PhoneTest: test: Phone should require tag to be set. 
-----------------------------------------------------
  [1m[36m (0.2ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.1ms)[0m  BEGIN
---------------------------------------------------------
PhoneTest: test: Phone should require user_id to be set. 
---------------------------------------------------------
  [1m[36m (0.2ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.2ms)[0m  BEGIN
---------------------------------------------------------------------------------------------------
TicketQueueTest: test: A given ticket queue should require a start date if an end date is present. 
---------------------------------------------------------------------------------------------------
  [1m[36mTicketQueue Load (0.6ms)[0m  [1mSELECT "ticket_queues".* FROM "ticket_queues" ORDER BY "ticket_queues"."id" ASC LIMIT 1[0m
  [1m[35mTicketQueue Exists (1.1ms)[0m  SELECT 1 AS one FROM "ticket_queues" WHERE ("ticket_queues"."name" = 'Queue1' AND "ticket_queues"."id" != 1) LIMIT 1
  [1m[36m (0.2ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.1ms)[0m  BEGIN
-----------------------------------------------------------------------------------------------
TicketQueueTest: test: A given ticket queue should require an end date on or after start date. 
-----------------------------------------------------------------------------------------------
  [1m[36mTicketQueue Load (0.4ms)[0m  [1mSELECT "ticket_queues".* FROM "ticket_queues" ORDER BY "ticket_queues"."id" ASC LIMIT 1[0m
  [1m[35mTicketQueue Exists (0.4ms)[0m  SELECT 1 AS one FROM "ticket_queues" WHERE ("ticket_queues"."name" = 'Queue1' AND "ticket_queues"."id" != 1) LIMIT 1
  [1m[36m (0.1ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.1ms)[0m  BEGIN
-------------------------------------------------------------
TicketQueueTest: test: TicketQueue should have many tickets. 
-------------------------------------------------------------
  [1m[36m (0.1ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.1ms)[0m  BEGIN
----------------------------------------------------------------------------------------
TicketQueueTest: test: TicketQueue should require case sensitive unique value for name. 
----------------------------------------------------------------------------------------
  [1m[36mTicketQueue Load (0.4ms)[0m  [1mSELECT "ticket_queues".* FROM "ticket_queues" ORDER BY "ticket_queues"."id" ASC LIMIT 1[0m
  [1m[35mTicketQueue Exists (0.3ms)[0m  SELECT 1 AS one FROM "ticket_queues" WHERE "ticket_queues"."name" = 'Queue1' LIMIT 1
  [1m[36mTicketQueue Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "ticket_queues" WHERE "ticket_queues"."name" = 'Queue1' LIMIT 1[0m
  [1m[35m (0.2ms)[0m  ROLLBACK
  [1m[36m (0.1ms)[0m  [1mBEGIN[0m
----------------------------------------------------------------------------
TicketQueueTest: test: TicketQueue should require default_due_in to be set. 
----------------------------------------------------------------------------
  [1m[35mTicketQueue Exists (0.3ms)[0m  SELECT 1 AS one FROM "ticket_queues" WHERE "ticket_queues"."name" IS NULL LIMIT 1
  [1m[36mTicketQueue Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "ticket_queues" WHERE "ticket_queues"."name" IS NULL LIMIT 1[0m
  [1m[35m (0.2ms)[0m  ROLLBACK
  [1m[36m (0.1ms)[0m  [1mBEGIN[0m
-------------------------------------------------------------------------
TicketQueueTest: test: TicketQueue should require description to be set. 
-------------------------------------------------------------------------
  [1m[35mTicketQueue Exists (0.3ms)[0m  SELECT 1 AS one FROM "ticket_queues" WHERE "ticket_queues"."name" IS NULL LIMIT 1
  [1m[36mTicketQueue Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "ticket_queues" WHERE "ticket_queues"."name" IS NULL LIMIT 1[0m
  [1m[35m (0.2ms)[0m  ROLLBACK
  [1m[36m (0.1ms)[0m  [1mBEGIN[0m
------------------------------------------------------------------
TicketQueueTest: test: TicketQueue should require name to be set. 
------------------------------------------------------------------
  [1m[35mTicketQueue Exists (0.4ms)[0m  SELECT 1 AS one FROM "ticket_queues" WHERE "ticket_queues"."name" IS NULL LIMIT 1
  [1m[36mTicketQueue Exists (0.3ms)[0m  [1mSELECT 1 AS one FROM "ticket_queues" WHERE "ticket_queues"."name" IS NULL LIMIT 1[0m
  [1m[35m (0.2ms)[0m  ROLLBACK
  [1m[36m (0.1ms)[0m  [1mBEGIN[0m
----------------------------------------------------------------------
TicketQueueTest: test: TicketQueue should require priority to be set. 
----------------------------------------------------------------------
  [1m[35mTicketQueue Exists (2.6ms)[0m  SELECT 1 AS one FROM "ticket_queues" WHERE "ticket_queues"."name" IS NULL LIMIT 1
  [1m[36mTicketQueue Exists (0.5ms)[0m  [1mSELECT 1 AS one FROM "ticket_queues" WHERE "ticket_queues"."name" IS NULL LIMIT 1[0m
  [1m[35m (0.2ms)[0m  ROLLBACK
  [1m[36m (0.1ms)[0m  [1mBEGIN[0m
------------------------------------------------------------------------
TicketQueueTest: test: TicketQueue should require start_date to be set. 
------------------------------------------------------------------------
  [1m[35mTicketQueue Exists (0.4ms)[0m  SELECT 1 AS one FROM "ticket_queues" WHERE "ticket_queues"."name" IS NULL LIMIT 1
  [1m[36mTicketQueue Exists (0.3ms)[0m  [1mSELECT 1 AS one FROM "ticket_queues" WHERE "ticket_queues"."name" IS NULL LIMIT 1[0m
  [1m[35m (0.2ms)[0m  ROLLBACK
  [1m[36m (0.1ms)[0m  [1mBEGIN[0m
-----------------------------------------------------------------
TicketQueueTest: test: TicketQueue should require url to be set. 
-----------------------------------------------------------------
  [1m[35mTicketQueue Exists (0.4ms)[0m  SELECT 1 AS one FROM "ticket_queues" WHERE "ticket_queues"."name" IS NULL LIMIT 1
  [1m[36mTicketQueue Exists (0.3ms)[0m  [1mSELECT 1 AS one FROM "ticket_queues" WHERE "ticket_queues"."name" IS NULL LIMIT 1[0m
  [1m[35m (0.1ms)[0m  ROLLBACK
  [1m[36m (0.1ms)[0m  [1mBEGIN[0m
---------------------------------------------------------------
TicketTest: test: Ticket should allow priority to be set to 1. 
---------------------------------------------------------------
  [1m[35m (0.4ms)[0m  ROLLBACK
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
----------------------------------------------------------------
TicketTest: test: Ticket should allow priority to be set to 25. 
----------------------------------------------------------------
  [1m[35m (0.2ms)[0m  ROLLBACK
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
--------------------------------------------------------
TicketTest: test: Ticket should belong to ticket_queue. 
--------------------------------------------------------
  [1m[35m (0.2ms)[0m  ROLLBACK
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
------------------------------------------------
TicketTest: test: Ticket should belong to user. 
------------------------------------------------
  [1m[35m (0.2ms)[0m  ROLLBACK
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
-------------------------------------------------------------------
TicketTest: test: Ticket should not allow priority to be set to 0. 
-------------------------------------------------------------------
  [1m[35m (0.1ms)[0m  ROLLBACK
  [1m[36m (0.1ms)[0m  [1mBEGIN[0m
---------------------------------------------------------------------
TicketTest: test: Ticket should not allow priority to be set to 1.5. 
---------------------------------------------------------------------
  [1m[35m (0.3ms)[0m  ROLLBACK
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
--------------------------------------------------------------------
TicketTest: test: Ticket should not allow priority to be set to 26. 
--------------------------------------------------------------------
  [1m[35m (0.2ms)[0m  ROLLBACK
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
------------------------------------------------------------------------
TicketTest: test: Ticket should only allow numeric values for priority. 
------------------------------------------------------------------------
  [1m[35m (0.3ms)[0m  ROLLBACK
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
------------------------------------------------------------
TicketTest: test: Ticket should require priority to be set. 
------------------------------------------------------------
  [1m[35m (0.3ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
--------------------------------------------------------------
TicketTest: test: Ticket should require start_date to be set. 
--------------------------------------------------------------
  [1m[35m (0.2ms)[0m  ROLLBACK
  [1m[36m (0.1ms)[0m  [1mBEGIN[0m
-----------------------------------------------------------
TicketTest: test: Ticket should require subject to be set. 
-----------------------------------------------------------
  [1m[35m (0.2ms)[0m  ROLLBACK
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
----------------------------------------------------------
UserTest: test: A given user should allow adding a phone. 
----------------------------------------------------------
  [1m[35mUser Load (0.7ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36m (0.2ms)[0m  [1mSAVEPOINT active_record_1[0m
  [1m[35mSQL (0.6ms)[0m  INSERT INTO "phones" ("created_at", "number", "tag", "updated_at", "user_id") VALUES ($1, $2, $3, $4, $5) RETURNING "id"  [["created_at", Tue, 27 Aug 2013 22:30:46 UTC +00:00], ["number", "234-5678"], ["tag", "Home"], ["updated_at", Tue, 27 Aug 2013 22:30:46 UTC +00:00], ["user_id", 1]]
  [1m[36m (0.1ms)[0m  [1mRELEASE SAVEPOINT active_record_1[0m
  [1m[35m (0.1ms)[0m  SAVEPOINT active_record_1
  [1m[36mUser Exists (0.6ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.2ms)[0m  RELEASE SAVEPOINT active_record_1
  [1m[36m (0.8ms)[0m  [1mSELECT COUNT(*) FROM "phones" WHERE "phones"."user_id" = $1[0m  [["user_id", 1]]
  [1m[35m (0.2ms)[0m  ROLLBACK
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
---------------------------------------------------------------------------
UserTest: test: A given user should allow retrieval of user phone numbers. 
---------------------------------------------------------------------------
  [1m[35mUser Load (0.4ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36m (0.4ms)[0m  [1mSELECT COUNT(*) FROM "phones" WHERE "phones"."user_id" = $1[0m  [["user_id", 1]]
  [1m[35m (0.2ms)[0m  ROLLBACK
  [1m[36m (0.1ms)[0m  [1mBEGIN[0m
--------------------------------------------------------
UserTest: test: A given user should be valid initially. 
--------------------------------------------------------
  [1m[35mUser Load (0.4ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.2ms)[0m  ROLLBACK
  [1m[36m (0.1ms)[0m  [1mBEGIN[0m
-----------------------------------------------------------------------
UserTest: test: A given user should not be valid if first name is nil. 
-----------------------------------------------------------------------
  [1m[35mUser Load (0.4ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.2ms)[0m  ROLLBACK
  [1m[36m (0.1ms)[0m  [1mBEGIN[0m
----------------------------------------------------------------------------
UserTest: test: A given user should not be valid if first name is too long. 
----------------------------------------------------------------------------
  [1m[35mUser Load (0.4ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.2ms)[0m  ROLLBACK
  [1m[36m (0.1ms)[0m  [1mBEGIN[0m
-----------------------------------------------------------------------------
UserTest: test: A given user should not be valid if first name is too short. 
-----------------------------------------------------------------------------
  [1m[35mUser Load (0.4ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (0.3ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.2ms)[0m  ROLLBACK
  [1m[36m (0.1ms)[0m  [1mBEGIN[0m
------------------------------------------------------------------------------------------------
UserTest: test: A given user should not be valid if first name starts with a lower case letter. 
------------------------------------------------------------------------------------------------
  [1m[35mUser Load (0.4ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (0.3ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.2ms)[0m  ROLLBACK
  [1m[36m (0.1ms)[0m  [1mBEGIN[0m
----------------------------------------------------------------------
UserTest: test: A given user should not be valid if last name is nil. 
----------------------------------------------------------------------
  [1m[35mUser Load (0.4ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (0.3ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.1ms)[0m  ROLLBACK
  [1m[36m (0.1ms)[0m  [1mBEGIN[0m
---------------------------------------------------------------------------
UserTest: test: A given user should not be valid if last name is too long. 
---------------------------------------------------------------------------
  [1m[35mUser Load (0.4ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (0.3ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.1ms)[0m  ROLLBACK
  [1m[36m (0.1ms)[0m  [1mBEGIN[0m
----------------------------------------------------------------------------
UserTest: test: A given user should not be valid if last name is too short. 
----------------------------------------------------------------------------
  [1m[35mUser Load (0.4ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (0.3ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.1ms)[0m  ROLLBACK
  [1m[36m (0.1ms)[0m  [1mBEGIN[0m
---------------------------------------------------------------------------------------------
UserTest: test: A given user should not be valid if login name has non-alphanumeric letters. 
---------------------------------------------------------------------------------------------
  [1m[35mUser Load (0.4ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (0.3ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'johns-276' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.2ms)[0m  ROLLBACK
  [1m[36m (0.1ms)[0m  [1mBEGIN[0m
-------------------------------------------------------------------------------
UserTest: test: A given user should not be valid if login name is a duplicate. 
-------------------------------------------------------------------------------
  [1m[35mUser Load (0.4ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36m (0.2ms)[0m  [1mSAVEPOINT active_record_1[0m
  [1m[35mUser Exists (0.3ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'orstedma' LIMIT 1
  [1m[36m (0.2ms)[0m  [1mROLLBACK TO SAVEPOINT active_record_1[0m
  [1m[35mUser Exists (0.3ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'orstedma' LIMIT 1
  [1m[36m (0.2ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.1ms)[0m  BEGIN
-----------------------------------------------------------------------
UserTest: test: A given user should not be valid if login name is nil. 
-----------------------------------------------------------------------
  [1m[36mUser Load (0.4ms)[0m  [1mSELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35mUser Exists (0.3ms)[0m  SELECT 1 AS one FROM "users" WHERE ("users"."login_name" IS NULL AND "users"."id" != 1) LIMIT 1
  [1m[36m (0.2ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.1ms)[0m  BEGIN
----------------------------------------------------------------------------
UserTest: test: A given user should not be valid if login name is too long. 
----------------------------------------------------------------------------
  [1m[36mUser Load (0.4ms)[0m  [1mSELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35mUser Exists (0.3ms)[0m  SELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'abbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb' AND "users"."id" != 1) LIMIT 1
  [1m[36m (0.2ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.1ms)[0m  BEGIN
-----------------------------------------------------------------------------
UserTest: test: A given user should not be valid if login name is too short. 
-----------------------------------------------------------------------------
  [1m[36mUser Load (0.3ms)[0m  [1mSELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35mUser Exists (0.3ms)[0m  SELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'aaaaa' AND "users"."id" != 1) LIMIT 1
  [1m[36m (0.2ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.1ms)[0m  BEGIN
---------------------------------------------------------------------------------------------
UserTest: test: A given user should not be valid if login name starts with a capital letter. 
---------------------------------------------------------------------------------------------
  [1m[36mUser Load (0.4ms)[0m  [1mSELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'Johns276' AND "users"."id" != 1) LIMIT 1
  [1m[36m (0.2ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.1ms)[0m  BEGIN
------------------------------------------------------------------------------------
UserTest: test: A given user should require a start date if an end date is present. 
------------------------------------------------------------------------------------
  [1m[36mUser Load (0.4ms)[0m  [1mSELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35mUser Exists (0.3ms)[0m  SELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1
  [1m[36m (0.1ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.1ms)[0m  BEGIN
--------------------------------------------------------------------------------
UserTest: test: A given user should require an end date on or after start date. 
--------------------------------------------------------------------------------
  [1m[36mUser Load (0.4ms)[0m  [1mSELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35mUser Exists (0.3ms)[0m  SELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1
  [1m[36m (0.1ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.1ms)[0m  BEGIN
----------------------------------------------------------------
UserTest: test: A given user should retrieve only valid phones. 
----------------------------------------------------------------
  [1m[36mUser Load (0.4ms)[0m  [1mSELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35mPhone Load (0.6ms)[0m  SELECT "phones".* FROM "phones" WHERE "phones"."user_id" = $1  [["user_id", 1]]
  [1m[36m (0.2ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.1ms)[0m  BEGIN
--------------------------------------------------------
UserTest: test: A new user should allow adding a phone. 
--------------------------------------------------------
  [1m[36m (0.1ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.1ms)[0m  BEGIN
------------------------------------------------------
UserTest: test: A new user should be valid initially. 
------------------------------------------------------
  [1m[36mUser Exists (2.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35m (0.3ms)[0m  ROLLBACK
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
---------------------------------------------------------------------
UserTest: test: A new user should not be valid if first name is nil. 
---------------------------------------------------------------------
  [1m[35mUser Exists (0.6ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.2ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.2ms)[0m  BEGIN
--------------------------------------------------------------------------
UserTest: test: A new user should not be valid if first name is too long. 
--------------------------------------------------------------------------
  [1m[36mUser Exists (0.5ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35m (0.2ms)[0m  ROLLBACK
  [1m[36m (0.1ms)[0m  [1mBEGIN[0m
---------------------------------------------------------------------------
UserTest: test: A new user should not be valid if first name is too short. 
---------------------------------------------------------------------------
  [1m[35mUser Exists (0.5ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.2ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.2ms)[0m  BEGIN
----------------------------------------------------------------------------------------------
UserTest: test: A new user should not be valid if first name starts with a lower case letter. 
----------------------------------------------------------------------------------------------
  [1m[36mUser Exists (0.5ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35m (0.2ms)[0m  ROLLBACK
  [1m[36m (0.1ms)[0m  [1mBEGIN[0m
--------------------------------------------------------------------
UserTest: test: A new user should not be valid if last name is nil. 
--------------------------------------------------------------------
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.2ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.2ms)[0m  BEGIN
-------------------------------------------------------------------------
UserTest: test: A new user should not be valid if last name is too long. 
-------------------------------------------------------------------------
  [1m[36mUser Exists (0.5ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35m (0.2ms)[0m  ROLLBACK
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
--------------------------------------------------------------------------
UserTest: test: A new user should not be valid if last name is too short. 
--------------------------------------------------------------------------
  [1m[35mUser Exists (0.5ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.2ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.2ms)[0m  BEGIN
-------------------------------------------------------------------------------------------
UserTest: test: A new user should not be valid if login name has non-alphanumeric letters. 
-------------------------------------------------------------------------------------------
  [1m[36mUser Exists (0.5ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'johns-276' LIMIT 1[0m
  [1m[35m (0.2ms)[0m  ROLLBACK
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
-----------------------------------------------------------------------------
UserTest: test: A new user should not be valid if login name is a duplicate. 
-----------------------------------------------------------------------------
  [1m[35m (0.1ms)[0m  SAVEPOINT active_record_1
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'orstedma' LIMIT 1[0m
  [1m[35m (0.2ms)[0m  ROLLBACK TO SAVEPOINT active_record_1
  [1m[36mUser Exists (0.3ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'orstedma' LIMIT 1[0m
  [1m[35m (0.1ms)[0m  ROLLBACK
  [1m[36m (0.1ms)[0m  [1mBEGIN[0m
---------------------------------------------------------------------
UserTest: test: A new user should not be valid if login name is nil. 
---------------------------------------------------------------------
  [1m[35mUser Exists (0.2ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.2ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.2ms)[0m  BEGIN
--------------------------------------------------------------------------
UserTest: test: A new user should not be valid if login name is too long. 
--------------------------------------------------------------------------
  [1m[36mUser Exists (0.5ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'abbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb' LIMIT 1[0m
  [1m[35m (0.2ms)[0m  ROLLBACK
  [1m[36m (0.1ms)[0m  [1mBEGIN[0m
---------------------------------------------------------------------------
UserTest: test: A new user should not be valid if login name is too short. 
---------------------------------------------------------------------------
  [1m[35mUser Exists (0.3ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'aaaaa' LIMIT 1
  [1m[36m (0.1ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.1ms)[0m  BEGIN
-------------------------------------------------------------------------------------------
UserTest: test: A new user should not be valid if login name starts with a capital letter. 
-------------------------------------------------------------------------------------------
  [1m[36mUser Exists (0.2ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'Johns276' LIMIT 1[0m
  [1m[35m (0.1ms)[0m  ROLLBACK
  [1m[36m (0.1ms)[0m  [1mBEGIN[0m
----------------------------------------------------------------------------------
UserTest: test: A new user should require a start date if an end date is present. 
----------------------------------------------------------------------------------
  [1m[35mUser Exists (0.3ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.1ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.1ms)[0m  BEGIN
------------------------------------------------------------------------------
UserTest: test: A new user should require an end date on or after start date. 
------------------------------------------------------------------------------
  [1m[36mUser Exists (0.5ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35m (0.2ms)[0m  ROLLBACK
  [1m[36m (0.1ms)[0m  [1mBEGIN[0m
---------------------------------------------------------------------
UserTest: test: User should allow first_name to be set to "Charles". 
---------------------------------------------------------------------
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.3ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35m (0.1ms)[0m  ROLLBACK
  [1m[36m (0.1ms)[0m  [1mBEGIN[0m
--------------------------------------------------------------------------
UserTest: test: User should ensure first_name has a length of at least 2. 
--------------------------------------------------------------------------
  [1m[35mUser Exists (0.3ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (2.9ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.5ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.2ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.2ms)[0m  BEGIN
---------------------------------------------------------------------------
UserTest: test: User should ensure first_name has a length of at most 254. 
---------------------------------------------------------------------------
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35m (0.3ms)[0m  ROLLBACK
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
-------------------------------------------------------------------------
UserTest: test: User should ensure last_name has a length of at least 2. 
-------------------------------------------------------------------------
  [1m[35mUser Exists (0.6ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.2ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.2ms)[0m  BEGIN
--------------------------------------------------------------------------
UserTest: test: User should ensure last_name has a length of at most 254. 
--------------------------------------------------------------------------
  [1m[36mUser Exists (0.5ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35m (0.2ms)[0m  ROLLBACK
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
--------------------------------------------------------------------------
UserTest: test: User should ensure login_name has a length of at least 6. 
--------------------------------------------------------------------------
  [1m[35mUser Exists (0.5ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxx' LIMIT 1
  [1m[36mUser Exists (0.5ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxx' LIMIT 1[0m
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxx' LIMIT 1
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxx' LIMIT 1[0m
  [1m[35mUser Exists (3.3ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxx' LIMIT 1
  [1m[36m (0.2ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
---------------------------------------------------------------------------
UserTest: test: User should ensure login_name has a length of at most 254. 
---------------------------------------------------------------------------
  [1m[36mUser Exists (0.5ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' LIMIT 1[0m
  [1m[35mUser Exists (0.5ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' LIMIT 1
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' LIMIT 1[0m
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' LIMIT 1
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' LIMIT 1[0m
  [1m[35m (0.2ms)[0m  ROLLBACK
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
--------------------------------------------------------------------------
UserTest: test: User should ensure nick_name has a length of at most 254. 
--------------------------------------------------------------------------
  [1m[35mUser Exists (0.5ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.3ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.2ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.2ms)[0m  BEGIN
-------------------------------------------------
UserTest: test: User should have many locations. 
-------------------------------------------------
  [1m[36m (0.1ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.1ms)[0m  BEGIN
----------------------------------------------
UserTest: test: User should have many phones. 
----------------------------------------------
  [1m[36m (0.1ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.1ms)[0m  BEGIN
-------------------------------------------------------------------------
UserTest: test: User should not allow first_name to be set to "charles". 
-------------------------------------------------------------------------
  [1m[36mUser Exists (0.5ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.2ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.2ms)[0m  BEGIN
--------------------------------------------------------------------------------
UserTest: test: User should require case sensitive unique value for login_name. 
--------------------------------------------------------------------------------
  [1m[36mUser Load (0.5ms)[0m  [1mSELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'orstedma' LIMIT 1
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'orstedma' LIMIT 1[0m
  [1m[35m (0.2ms)[0m  ROLLBACK
  [1m[36m (0.1ms)[0m  [1mBEGIN[0m
----------------------------------------------------------
UserTest: test: User should require first_name to be set. 
----------------------------------------------------------
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35m (0.2ms)[0m  ROLLBACK
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
---------------------------------------------------------
UserTest: test: User should require last_name to be set. 
---------------------------------------------------------
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (3.2ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35m (0.3ms)[0m  ROLLBACK
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
----------------------------------------------------------
UserTest: test: User should require login_name to be set. 
----------------------------------------------------------
  [1m[35mUser Exists (0.5ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.5ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35m (0.2ms)[0m  ROLLBACK
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
----------------------------------------------------------
UserTest: test: User should require start_date to be set. 
----------------------------------------------------------
  [1m[35mUser Exists (0.5ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35m (0.2ms)[0m  ROLLBACK
  [1m[36m (225.8ms)[0m  [1mDROP DATABASE IF EXISTS "ritrack_test"[0m
  [1m[35m (682.6ms)[0m  CREATE DATABASE "ritrack_test" ENCODING = 'unicode'
  [1m[36mSQL (1.6ms)[0m  [1mCREATE EXTENSION IF NOT EXISTS "plpgsql"[0m
  [1m[35m (109.0ms)[0m  CREATE TABLE "locations" ("id" serial primary key, "company" character varying(255), "organization" character varying(255), "address1" character varying(255), "address2" character varying(255), "city" character varying(255), "state" character varying(255), "zip" character varying(255), "country" character varying(255), "user_id" integer, "created_at" timestamp, "updated_at" timestamp) 
  [1m[36m (41.5ms)[0m  [1mCREATE INDEX "index_locations_on_user_id" ON "locations" USING btree ("user_id")[0m
  [1m[35m (99.3ms)[0m  CREATE TABLE "phones" ("id" serial primary key, "number" character varying(255), "tag" character varying(255), "user_id" integer, "created_at" timestamp, "updated_at" timestamp) 
  [1m[36m (49.8ms)[0m  [1mCREATE INDEX "index_phones_on_number" ON "phones" USING btree ("number")[0m
  [1m[35m (45.3ms)[0m  CREATE INDEX "index_phones_on_user_id" ON "phones" USING btree ("user_id")
  [1m[36m (81.0ms)[0m  [1mCREATE TABLE "ticket_queues" ("id" serial primary key, "name" character varying(255), "description" character varying(255), "url" character varying(255), "priority" integer, "default_due_in" integer, "start_date" date, "end_date" date, "created_at" timestamp, "updated_at" timestamp) [0m
  [1m[35m (97.8ms)[0m  CREATE TABLE "ticket_responses" ("id" serial primary key, "body" text, "response_sent" timestamp, "ticket_id" integer, "created_at" timestamp, "updated_at" timestamp) 
  [1m[36m (63.8ms)[0m  [1mCREATE INDEX "index_ticket_responses_on_ticket_id" ON "ticket_responses" USING btree ("ticket_id")[0m
  [1m[35m (89.2ms)[0m  CREATE TABLE "tickets" ("id" serial primary key, "subject" character varying(255), "status" character varying(255), "priority" integer, "start_date" timestamp, "end_date" timestamp, "due_date" timestamp, "user_id" integer, "ticket_queue_id" integer, "created_at" timestamp, "updated_at" timestamp, "requestor_id" integer) 
  [1m[36m (55.4ms)[0m  [1mCREATE INDEX "index_tickets_on_requestor_id" ON "tickets" USING btree ("requestor_id")[0m
  [1m[35m (54.6ms)[0m  CREATE INDEX "index_tickets_on_ticket_queue_id" ON "tickets" USING btree ("ticket_queue_id")
  [1m[36m (54.7ms)[0m  [1mCREATE INDEX "index_tickets_on_user_id" ON "tickets" USING btree ("user_id")[0m
  [1m[35m (89.2ms)[0m  CREATE TABLE "users" ("id" serial primary key, "first_name" character varying(255), "last_name" character varying(255), "nick_name" character varying(255), "login_name" character varying(255), "notes" text, "created_at" timestamp, "updated_at" timestamp, "start_date" date, "end_date" date, "is_admin" boolean, "can_login" boolean, "user_by_email" boolean) 
  [1m[36m (4.5ms)[0m  [1mCREATE TABLE "schema_migrations" ("version" character varying(255) NOT NULL) [0m
  [1m[35m (55.5ms)[0m  CREATE UNIQUE INDEX "unique_schema_migrations" ON "schema_migrations" ("version")
  [1m[36m (0.8ms)[0m  [1mSELECT version FROM "schema_migrations"[0m
  [1m[35m (6.2ms)[0m  INSERT INTO "schema_migrations" (version) VALUES ('20130827150753')
  [1m[36m (7.9ms)[0m  [1mINSERT INTO "schema_migrations" (version) VALUES ('20130827135409')[0m
  [1m[35m (8.1ms)[0m  INSERT INTO "schema_migrations" (version) VALUES ('20130816142047')
  [1m[36m (8.0ms)[0m  [1mINSERT INTO "schema_migrations" (version) VALUES ('20130826182256')[0m
  [1m[35m (8.0ms)[0m  INSERT INTO "schema_migrations" (version) VALUES ('20130826183525')
  [1m[36m (7.9ms)[0m  [1mINSERT INTO "schema_migrations" (version) VALUES ('20130821233827')[0m
  [1m[35m (8.0ms)[0m  INSERT INTO "schema_migrations" (version) VALUES ('20130826154055')
  [1m[36m (8.0ms)[0m  [1mINSERT INTO "schema_migrations" (version) VALUES ('20130811212425')[0m
  [1m[35m (8.0ms)[0m  INSERT INTO "schema_migrations" (version) VALUES ('20130825220004')
  [1m[36m (7.9ms)[0m  [1mINSERT INTO "schema_migrations" (version) VALUES ('20130811195620')[0m
  [1m[35m (7.9ms)[0m  INSERT INTO "schema_migrations" (version) VALUES ('20130811193133')
  [1m[36m (8.0ms)[0m  [1mINSERT INTO "schema_migrations" (version) VALUES ('20130811195557')[0m
  [1m[35mActiveRecord::SchemaMigration Load (0.5ms)[0m  SELECT "schema_migrations".* FROM "schema_migrations"
  [1m[36mActiveRecord::SchemaMigration Load (0.4ms)[0m  [1mSELECT "schema_migrations".* FROM "schema_migrations"[0m
  [1m[35m (8.1ms)[0m  ALTER TABLE "locations" DISABLE TRIGGER ALL;ALTER TABLE "phones" DISABLE TRIGGER ALL;ALTER TABLE "ticket_queues" DISABLE TRIGGER ALL;ALTER TABLE "ticket_responses" DISABLE TRIGGER ALL;ALTER TABLE "tickets" DISABLE TRIGGER ALL;ALTER TABLE "users" DISABLE TRIGGER ALL;ALTER TABLE "schema_migrations" DISABLE TRIGGER ALL
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
  [1m[35mFixture Delete (0.6ms)[0m  DELETE FROM "tickets"
  [1m[36mFixture Insert (0.8ms)[0m  [1mINSERT INTO "tickets" ("id", "subject", "status", "priority", "start_date", "end_date", "due_date", "user_id", "ticket_queue_id", "created_at", "updated_at") VALUES (1, 'Jobs filling hard disks completely', 'New', 1, '2013-08-26 13:22:56.000000', NULL, '2013-08-26 13:22:56.000000', 1, 1, '2013-08-28 00:47:06', '2013-08-28 00:47:06')[0m
  [1m[35mFixture Insert (0.4ms)[0m  INSERT INTO "tickets" ("id", "subject", "status", "priority", "start_date", "end_date", "due_date", "user_id", "ticket_queue_id", "created_at", "updated_at") VALUES (2, 'Hard drive failing. Replacement requested.', 'Opened', 1, '2013-08-26 13:22:56.000000', NULL, '2013-09-26 13:22:56.000000', 1, 1, '2013-08-28 00:47:06', '2013-08-28 00:47:06')
  [1m[36mFixture Delete (0.4ms)[0m  [1mDELETE FROM "ticket_queues"[0m
  [1m[35mFixture Insert (0.6ms)[0m  INSERT INTO "ticket_queues" ("id", "name", "description", "url", "priority", "default_due_in", "start_date", "end_date", "created_at", "updated_at") VALUES (1, 'Queue1', 'Ticket queue 1', 'mydomain.com', 1, 1, '2013-08-26', NULL, '2013-08-28 00:47:06', '2013-08-28 00:47:06')
  [1m[36mFixture Insert (0.3ms)[0m  [1mINSERT INTO "ticket_queues" ("id", "name", "description", "url", "priority", "default_due_in", "start_date", "end_date", "created_at", "updated_at") VALUES (2, 'Queue2', 'Ticket queue 2', 'mydomain.com', 1, 1, '2013-08-26', NULL, '2013-08-28 00:47:06', '2013-08-28 00:47:06')[0m
  [1m[35mFixture Delete (0.5ms)[0m  DELETE FROM "phones"
  [1m[36mFixture Insert (0.6ms)[0m  [1mINSERT INTO "phones" ("id", "number", "tag", "user_id", "created_at", "updated_at") VALUES (1, '(211) 234-1111', 'Office', 1, '2013-08-28 00:47:06', '2013-08-28 00:47:06')[0m
  [1m[35mFixture Insert (0.4ms)[0m  INSERT INTO "phones" ("id", "number", "tag", "user_id", "created_at", "updated_at") VALUES (2, '(222) 345-2222', 'Home', 1, '2013-08-28 00:47:06', '2013-08-28 00:47:06')
  [1m[36mFixture Insert (0.3ms)[0m  [1mINSERT INTO "phones" ("id", "number", "tag", "user_id", "created_at", "updated_at") VALUES (3, '(333) 456-3333', 'Mobile', 1, '2013-08-28 00:47:06', '2013-08-28 00:47:06')[0m
  [1m[35mFixture Insert (0.3ms)[0m  INSERT INTO "phones" ("id", "number", "tag", "user_id", "created_at", "updated_at") VALUES (4, '(444) 567-4444', 'Pager', 1, '2013-08-28 00:47:06', '2013-08-28 00:47:06')
  [1m[36mFixture Insert (0.4ms)[0m  [1mINSERT INTO "phones" ("id", "number", "tag", "user_id", "created_at", "updated_at") VALUES (5, '(555) 678-5555', 'Mobile', 1, '2013-08-28 00:47:06', '2013-08-28 00:47:06')[0m
  [1m[35mFixture Insert (0.4ms)[0m  INSERT INTO "phones" ("id", "number", "tag", "user_id", "created_at", "updated_at") VALUES (6, '(666) 789-6666', 'Mobile', 1, '2013-08-28 00:47:06', '2013-08-28 00:47:06')
  [1m[36mFixture Delete (0.5ms)[0m  [1mDELETE FROM "locations"[0m
  [1m[35mFixture Insert (0.5ms)[0m  INSERT INTO "locations" ("id", "company", "organization", "address1", "address2", "city", "state", "zip", "country", "user_id", "created_at", "updated_at") VALUES (1, 'NPR', 'News Desk', '1444 First Street', 'Floor 15', 'Washington', 'DC', '10270', 'US', 1, '2013-08-28 00:47:06', '2013-08-28 00:47:06')
  [1m[36mFixture Insert (0.4ms)[0m  [1mINSERT INTO "locations" ("company", "organization", "address1", "address2", "city", "state", "zip", "country", "user_id", "created_at", "updated_at", "id") VALUES ('NPR', 'Scotland Desk', '63 Park Avenue', 'Suite 102', 'Chicago', 'IL', '69755', 'US', 1, '2013-08-28 00:47:06', '2013-08-28 00:47:06', 298486374)[0m
  [1m[35mFixture Delete (0.4ms)[0m  DELETE FROM "users"
  [1m[36mFixture Insert (0.5ms)[0m  [1mINSERT INTO "users" ("id", "first_name", "last_name", "nick_name", "login_name", "start_date", "end_date", "notes", "created_at", "updated_at") VALUES (1, 'Michael', 'Orsted', 'Mike', 'orstedma', '2012-02-04', NULL, 'This user lives in Chicago.', '2013-08-28 00:47:06', '2013-08-28 00:47:06')[0m
  [1m[35mFixture Insert (0.4ms)[0m  INSERT INTO "users" ("id", "first_name", "last_name", "nick_name", "login_name", "start_date", "end_date", "notes", "created_at", "updated_at") VALUES (2, 'Frederick', 'Free-Loader', 'Frederick', 'freelofw', '2012-03-04', NULL, 'This user is completely useless', '2013-08-28 00:47:06', '2013-08-28 00:47:06')
  [1m[36mFixture Insert (0.4ms)[0m  [1mINSERT INTO "users" ("id", "first_name", "last_name", "nick_name", "login_name", "start_date", "end_date", "notes", "created_at", "updated_at") VALUES (3, 'Michael', 'Winstead', 'Mike', 'winstem', '2012-02-04', '2013-08-12', 'This user lives in New York. This user is disabled in the system.', '2013-08-28 00:47:06', '2013-08-28 00:47:06')[0m
  [1m[35mFixture Insert (0.4ms)[0m  INSERT INTO "users" ("id", "first_name", "last_name", "nick_name", "login_name", "start_date", "end_date", "notes", "created_at", "updated_at") VALUES (4, 'Allison', 'Wilson', 'Alli', 'wilsona', '2012-03-04', NULL, 'Electrical engineer.', '2013-08-28 00:47:06', '2013-08-28 00:47:06')
  [1m[36mFixture Delete (0.5ms)[0m  [1mDELETE FROM "ticket_responses"[0m
  [1m[35mFixture Insert (0.5ms)[0m  INSERT INTO "ticket_responses" ("id", "body", "response_sent", "ticket_id", "created_at", "updated_at") VALUES (1, 'This is my first response to filling hard drives', '2013-08-26 13:35:25.000000', 1, '2013-08-28 00:47:06', '2013-08-28 00:47:06')
  [1m[36mFixture Insert (0.3ms)[0m  [1mINSERT INTO "ticket_responses" ("id", "body", "response_sent", "ticket_id", "created_at", "updated_at") VALUES (2, 'MyText', '2013-08-26 13:35:25.000000', 1, '2013-08-28 00:47:06', '2013-08-28 00:47:06')[0m
  [1m[35m (4.2ms)[0m  COMMIT
  [1m[36m (0.5ms)[0m  [1mALTER TABLE "locations" ENABLE TRIGGER ALL;ALTER TABLE "phones" ENABLE TRIGGER ALL;ALTER TABLE "ticket_queues" ENABLE TRIGGER ALL;ALTER TABLE "ticket_responses" ENABLE TRIGGER ALL;ALTER TABLE "tickets" ENABLE TRIGGER ALL;ALTER TABLE "users" ENABLE TRIGGER ALL;ALTER TABLE "schema_migrations" ENABLE TRIGGER ALL[0m
  [1m[35m (0.2ms)[0m  BEGIN
--------------------------------------------------------------------------------------------------------
LocationTest: test: A given Location should not be valid if adddress2 is specified and address1 is not. 
--------------------------------------------------------------------------------------------------------
  [1m[36mLocation Load (1.0ms)[0m  [1mSELECT "locations".* FROM "locations" ORDER BY "locations"."id" ASC LIMIT 1[0m
  [1m[35m (0.2ms)[0m  ROLLBACK
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
------------------------------------------------------------------------------------------------------
LocationTest: test: A given Location should not be valid if company is specified and address1 is not. 
------------------------------------------------------------------------------------------------------
  [1m[35mLocation Load (0.5ms)[0m  SELECT "locations".* FROM "locations" ORDER BY "locations"."id" ASC LIMIT 1
  [1m[36m (0.2ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.2ms)[0m  BEGIN
--------------------------------------------------------------------------------------------------
LocationTest: test: A given Location should not be valid if company is specified and city is not. 
--------------------------------------------------------------------------------------------------
  [1m[36mLocation Load (0.4ms)[0m  [1mSELECT "locations".* FROM "locations" ORDER BY "locations"."id" ASC LIMIT 1[0m
  [1m[35m (0.1ms)[0m  ROLLBACK
  [1m[36m (0.0ms)[0m  [1mBEGIN[0m
---------------------------------------------------------------------------------------------------
LocationTest: test: A given Location should not be valid if company is specified and state is not. 
---------------------------------------------------------------------------------------------------
  [1m[35mLocation Load (0.3ms)[0m  SELECT "locations".* FROM "locations" ORDER BY "locations"."id" ASC LIMIT 1
  [1m[36m (0.1ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.0ms)[0m  BEGIN
-------------------------------------------------------------------------------------------------
LocationTest: test: A given Location should not be valid if company is specified and zip is not. 
-------------------------------------------------------------------------------------------------
  [1m[36mLocation Load (0.3ms)[0m  [1mSELECT "locations".* FROM "locations" ORDER BY "locations"."id" ASC LIMIT 1[0m
  [1m[35m (0.1ms)[0m  ROLLBACK
  [1m[36m (0.1ms)[0m  [1mBEGIN[0m
--------------------------------------------------------------------------------------------
LocationTest: test: A given Location should require a valid comany if comapny is specified. 
--------------------------------------------------------------------------------------------
  [1m[35mLocation Load (0.5ms)[0m  SELECT "locations".* FROM "locations" ORDER BY "locations"."id" ASC LIMIT 1
  [1m[36m (0.2ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.2ms)[0m  BEGIN
------------------------------------------------------------------------------------------------------
LocationTest: test: A new Location should not be valid if adddress2 is specified and address1 is not. 
------------------------------------------------------------------------------------------------------
  [1m[36m (0.2ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.2ms)[0m  BEGIN
----------------------------------------------------------------------------------------------------
LocationTest: test: A new Location should not be valid if company is specified and address1 is not. 
----------------------------------------------------------------------------------------------------
  [1m[36m (0.2ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.2ms)[0m  BEGIN
------------------------------------------------------------------------------------------------
LocationTest: test: A new Location should not be valid if company is specified and city is not. 
------------------------------------------------------------------------------------------------
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.2ms)[0m  BEGIN
-------------------------------------------------------------------------------------------------
LocationTest: test: A new Location should not be valid if company is specified and state is not. 
-------------------------------------------------------------------------------------------------
  [1m[36m (0.1ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.2ms)[0m  BEGIN
-----------------------------------------------------------------------------------------------
LocationTest: test: A new Location should not be valid if company is specified and zip is not. 
-----------------------------------------------------------------------------------------------
  [1m[36m (0.2ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.2ms)[0m  BEGIN
------------------------------------------------------------------------------------------
LocationTest: test: A new Location should require a valid comany if comapny is specified. 
------------------------------------------------------------------------------------------
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.2ms)[0m  BEGIN
---------------------------------------------------------------------------------------------
LocationTest: test: Location should allow company to be set to "American Telegraph Company". 
---------------------------------------------------------------------------------------------
  [1m[36m (0.2ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.2ms)[0m  BEGIN
-------------------------------------------------------------------------------------
LocationTest: test: Location should allow company to be set to "American Telegraph". 
-------------------------------------------------------------------------------------
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.1ms)[0m  BEGIN
---------------------------------------------------------------------------
LocationTest: test: Location should allow company to be set to "American". 
---------------------------------------------------------------------------
  [1m[36m (0.2ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.1ms)[0m  BEGIN
----------------------------------------------------------------------
LocationTest: test: Location should allow company to be set to "IBM". 
----------------------------------------------------------------------
  [1m[36m (0.2ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.2ms)[0m  BEGIN
--------------------------------------------------------------------
LocationTest: test: Location should allow zip to be set to "37122". 
--------------------------------------------------------------------
  [1m[36m (0.2ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.2ms)[0m  BEGIN
-------------------------------------------------------------------------
LocationTest: test: Location should allow zip to be set to "37122-4444". 
-------------------------------------------------------------------------
  [1m[36m (0.2ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.2ms)[0m  BEGIN
----------------------------------------------------
LocationTest: test: Location should belong to user. 
----------------------------------------------------
  [1m[36m (0.2ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.2ms)[0m  BEGIN
-------------------------------------------------------------------------------------------------
LocationTest: test: Location should not allow company to be set to "American Telegraph company". 
-------------------------------------------------------------------------------------------------
  [1m[36m (0.2ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.2ms)[0m  BEGIN
----------------------------------------------------------------------------
LocationTest: test: Location should not allow company to be set to "INTEL". 
----------------------------------------------------------------------------
  [1m[36m (0.2ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.2ms)[0m  BEGIN
----------------------------------------------------------------------------
LocationTest: test: Location should not allow zip to be set to "3712-4444". 
----------------------------------------------------------------------------
  [1m[36m (0.2ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.2ms)[0m  BEGIN
----------------------------------------------------------------------------
LocationTest: test: Location should not allow zip to be set to "37122-444". 
----------------------------------------------------------------------------
  [1m[36m (0.2ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.2ms)[0m  BEGIN
---------------------------------------------------------------
LocationTest: test: Location should require user_id to be set. 
---------------------------------------------------------------
  [1m[36m (0.2ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.2ms)[0m  BEGIN
----------------------------------------------------------
PhoneTest: test: A given phone should be initially valid. 
----------------------------------------------------------
  [1m[36mPhone Load (0.7ms)[0m  [1mSELECT "phones".* FROM "phones" ORDER BY "phones"."id" ASC LIMIT 1[0m
  [1m[35m (0.2ms)[0m  ROLLBACK
  [1m[36m (0.1ms)[0m  [1mBEGIN[0m
-----------------------------------------------------------------------------------------------------------
PhoneTest: test: A given phone should not be valid with a poorly formatted 10 digit North American number. 
-----------------------------------------------------------------------------------------------------------
  [1m[35mPhone Load (0.5ms)[0m  SELECT "phones".* FROM "phones" ORDER BY "phones"."id" ASC LIMIT 1
  [1m[36m (0.1ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.1ms)[0m  BEGIN
----------------------------------------------------------------------------------------------------------
PhoneTest: test: A given phone should not be valid with a poorly formatted 7 digit North American number. 
----------------------------------------------------------------------------------------------------------
  [1m[36mPhone Load (0.4ms)[0m  [1mSELECT "phones".* FROM "phones" ORDER BY "phones"."id" ASC LIMIT 1[0m
  [1m[35m (0.1ms)[0m  ROLLBACK
  [1m[36m (0.1ms)[0m  [1mBEGIN[0m
---------------------------------------------------------------------------------------
PhoneTest: test: A given phone should optionally be a valid  EPP international number. 
---------------------------------------------------------------------------------------
  [1m[35mPhone Load (0.4ms)[0m  SELECT "phones".* FROM "phones" ORDER BY "phones"."id" ASC LIMIT 1
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.2ms)[0m  BEGIN
-----------------------------------------------------------------------------------------------
PhoneTest: test: A given phone should optionally be a valid  ITU-T E.123 international number. 
-----------------------------------------------------------------------------------------------
  [1m[36mPhone Load (0.5ms)[0m  [1mSELECT "phones".* FROM "phones" ORDER BY "phones"."id" ASC LIMIT 1[0m
  [1m[35m (0.2ms)[0m  ROLLBACK
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
-------------------------------------------------------------------------------------------------
PhoneTest: test: A given phone should optionally be a valid North American number with 7 digits. 
-------------------------------------------------------------------------------------------------
  [1m[35mPhone Load (0.4ms)[0m  SELECT "phones".* FROM "phones" ORDER BY "phones"."id" ASC LIMIT 1
  [1m[36m (0.2ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.2ms)[0m  BEGIN
----------------------------------------------------------------------------------------------------------------------
PhoneTest: test: A given phone should optionally be a valid number with 10 digits with a leading 1 for long distance. 
----------------------------------------------------------------------------------------------------------------------
  [1m[36mPhone Load (0.5ms)[0m  [1mSELECT "phones".* FROM "phones" ORDER BY "phones"."id" ASC LIMIT 1[0m
  [1m[35m (0.2ms)[0m  ROLLBACK
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
-------------------------------------------------------------------------------------------------
PhoneTest: test: A given phone should optionally require a valid 10-digit North American number. 
-------------------------------------------------------------------------------------------------
  [1m[35mPhone Load (0.2ms)[0m  SELECT "phones".* FROM "phones" ORDER BY "phones"."id" ASC LIMIT 1
  [1m[36m (0.2ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.1ms)[0m  BEGIN
---------------------------------------------------------
PhoneTest: test: A given phone should require a user_id. 
---------------------------------------------------------
  [1m[36mPhone Load (0.4ms)[0m  [1mSELECT "phones".* FROM "phones" ORDER BY "phones"."id" ASC LIMIT 1[0m
  [1m[35m (0.2ms)[0m  ROLLBACK
  [1m[36m (0.1ms)[0m  [1mBEGIN[0m
------------------------------------------------------------
PhoneTest: test: A new phone should not be initially valid. 
------------------------------------------------------------
  [1m[35m (0.1ms)[0m  ROLLBACK
  [1m[36m (0.1ms)[0m  [1mBEGIN[0m
------------------------------------------------------------------------------
PhoneTest: test: A new phone should not be savable without being fully valid. 
------------------------------------------------------------------------------
  [1m[35m (0.1ms)[0m  SAVEPOINT active_record_1
  [1m[36mSQL (1.8ms)[0m  [1mINSERT INTO "phones" ("created_at", "number", "tag", "updated_at", "user_id") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["created_at", Wed, 28 Aug 2013 00:47:07 UTC +00:00], ["number", "345-6789"], ["tag", "Home"], ["updated_at", Wed, 28 Aug 2013 00:47:07 UTC +00:00], ["user_id", 100]]
  [1m[35m (0.1ms)[0m  RELEASE SAVEPOINT active_record_1
  [1m[36m (0.2ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.2ms)[0m  BEGIN
---------------------------------------------------------------------------------------------------------
PhoneTest: test: A new phone should not be valid with a poorly formatted 10 digit North American number. 
---------------------------------------------------------------------------------------------------------
  [1m[36m (0.2ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.2ms)[0m  BEGIN
--------------------------------------------------------------------------------------------------------
PhoneTest: test: A new phone should not be valid with a poorly formatted 7 digit North American number. 
--------------------------------------------------------------------------------------------------------
  [1m[36m (0.2ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.2ms)[0m  BEGIN
-----------------------------------------------------------------------------------------------
PhoneTest: test: A new phone should optionally be a valid North American number with 7 digits. 
-----------------------------------------------------------------------------------------------
  [1m[36m (0.2ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.2ms)[0m  BEGIN
--------------------------------------------------------------------------------------------------------------------
PhoneTest: test: A new phone should optionally be a valid number with 10 digits with a leading 1 for long distance. 
--------------------------------------------------------------------------------------------------------------------
  [1m[36m (0.2ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.1ms)[0m  BEGIN
-----------------------------------------------------------------------------------------------
PhoneTest: test: A new phone should optionally require a valid 10-digit North American number. 
-----------------------------------------------------------------------------------------------
  [1m[36m (0.2ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.1ms)[0m  BEGIN
----------------------------------------------
PhoneTest: test: Phone should belong to user. 
----------------------------------------------
  [1m[36m (0.2ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.1ms)[0m  BEGIN
------------------------------------------------------------------------------------------------
PhoneTest: test: Phone should ensure inclusion of tag in ["Home", "Office", "Mobile", "Pager"]. 
------------------------------------------------------------------------------------------------
  [1m[36m (0.2ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.2ms)[0m  BEGIN
------------------------------------------------------------------------
PhoneTest: test: Phone should ensure number has a length of at least 7. 
------------------------------------------------------------------------
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.1ms)[0m  BEGIN
------------------------------------------------------------------------
PhoneTest: test: Phone should ensure number has a length of at most 24. 
------------------------------------------------------------------------
  [1m[36m (0.2ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.1ms)[0m  BEGIN
--------------------------------------------------------
PhoneTest: test: Phone should require number to be set. 
--------------------------------------------------------
  [1m[36m (0.2ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.1ms)[0m  BEGIN
-----------------------------------------------------
PhoneTest: test: Phone should require tag to be set. 
-----------------------------------------------------
  [1m[36m (0.2ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.1ms)[0m  BEGIN
---------------------------------------------------------
PhoneTest: test: Phone should require user_id to be set. 
---------------------------------------------------------
  [1m[36m (0.2ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.2ms)[0m  BEGIN
---------------------------------------------------------------------------------------------------
TicketQueueTest: test: A given ticket queue should require a start date if an end date is present. 
---------------------------------------------------------------------------------------------------
  [1m[36mTicketQueue Load (0.6ms)[0m  [1mSELECT "ticket_queues".* FROM "ticket_queues" ORDER BY "ticket_queues"."id" ASC LIMIT 1[0m
  [1m[35mTicketQueue Exists (1.2ms)[0m  SELECT 1 AS one FROM "ticket_queues" WHERE ("ticket_queues"."name" = 'Queue1' AND "ticket_queues"."id" != 1) LIMIT 1
  [1m[36m (0.2ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.2ms)[0m  BEGIN
-----------------------------------------------------------------------------------------------
TicketQueueTest: test: A given ticket queue should require an end date on or after start date. 
-----------------------------------------------------------------------------------------------
  [1m[36mTicketQueue Load (0.5ms)[0m  [1mSELECT "ticket_queues".* FROM "ticket_queues" ORDER BY "ticket_queues"."id" ASC LIMIT 1[0m
  [1m[35mTicketQueue Exists (0.4ms)[0m  SELECT 1 AS one FROM "ticket_queues" WHERE ("ticket_queues"."name" = 'Queue1' AND "ticket_queues"."id" != 1) LIMIT 1
  [1m[36m (0.2ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.2ms)[0m  BEGIN
-------------------------------------------------------------
TicketQueueTest: test: TicketQueue should have many tickets. 
-------------------------------------------------------------
  [1m[36m (0.1ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.1ms)[0m  BEGIN
----------------------------------------------------------------------------------------
TicketQueueTest: test: TicketQueue should require case sensitive unique value for name. 
----------------------------------------------------------------------------------------
  [1m[36mTicketQueue Load (0.4ms)[0m  [1mSELECT "ticket_queues".* FROM "ticket_queues" ORDER BY "ticket_queues"."id" ASC LIMIT 1[0m
  [1m[35mTicketQueue Exists (0.4ms)[0m  SELECT 1 AS one FROM "ticket_queues" WHERE "ticket_queues"."name" = 'Queue1' LIMIT 1
  [1m[36mTicketQueue Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "ticket_queues" WHERE "ticket_queues"."name" = 'Queue1' LIMIT 1[0m
  [1m[35m (0.2ms)[0m  ROLLBACK
  [1m[36m (0.1ms)[0m  [1mBEGIN[0m
----------------------------------------------------------------------------
TicketQueueTest: test: TicketQueue should require default_due_in to be set. 
----------------------------------------------------------------------------
  [1m[35mTicketQueue Exists (0.4ms)[0m  SELECT 1 AS one FROM "ticket_queues" WHERE "ticket_queues"."name" IS NULL LIMIT 1
  [1m[36mTicketQueue Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "ticket_queues" WHERE "ticket_queues"."name" IS NULL LIMIT 1[0m
  [1m[35m (0.2ms)[0m  ROLLBACK
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
-------------------------------------------------------------------------
TicketQueueTest: test: TicketQueue should require description to be set. 
-------------------------------------------------------------------------
  [1m[35mTicketQueue Exists (0.5ms)[0m  SELECT 1 AS one FROM "ticket_queues" WHERE "ticket_queues"."name" IS NULL LIMIT 1
  [1m[36mTicketQueue Exists (0.5ms)[0m  [1mSELECT 1 AS one FROM "ticket_queues" WHERE "ticket_queues"."name" IS NULL LIMIT 1[0m
  [1m[35m (0.2ms)[0m  ROLLBACK
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
------------------------------------------------------------------
TicketQueueTest: test: TicketQueue should require name to be set. 
------------------------------------------------------------------
  [1m[35mTicketQueue Exists (0.4ms)[0m  SELECT 1 AS one FROM "ticket_queues" WHERE "ticket_queues"."name" IS NULL LIMIT 1
  [1m[36mTicketQueue Exists (0.3ms)[0m  [1mSELECT 1 AS one FROM "ticket_queues" WHERE "ticket_queues"."name" IS NULL LIMIT 1[0m
  [1m[35m (0.2ms)[0m  ROLLBACK
  [1m[36m (0.1ms)[0m  [1mBEGIN[0m
----------------------------------------------------------------------
TicketQueueTest: test: TicketQueue should require priority to be set. 
----------------------------------------------------------------------
  [1m[35mTicketQueue Exists (2.5ms)[0m  SELECT 1 AS one FROM "ticket_queues" WHERE "ticket_queues"."name" IS NULL LIMIT 1
  [1m[36mTicketQueue Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "ticket_queues" WHERE "ticket_queues"."name" IS NULL LIMIT 1[0m
  [1m[35m (0.2ms)[0m  ROLLBACK
  [1m[36m (0.1ms)[0m  [1mBEGIN[0m
------------------------------------------------------------------------
TicketQueueTest: test: TicketQueue should require start_date to be set. 
------------------------------------------------------------------------
  [1m[35mTicketQueue Exists (0.4ms)[0m  SELECT 1 AS one FROM "ticket_queues" WHERE "ticket_queues"."name" IS NULL LIMIT 1
  [1m[36mTicketQueue Exists (0.3ms)[0m  [1mSELECT 1 AS one FROM "ticket_queues" WHERE "ticket_queues"."name" IS NULL LIMIT 1[0m
  [1m[35m (0.2ms)[0m  ROLLBACK
  [1m[36m (0.1ms)[0m  [1mBEGIN[0m
-----------------------------------------------------------------
TicketQueueTest: test: TicketQueue should require url to be set. 
-----------------------------------------------------------------
  [1m[35mTicketQueue Exists (0.5ms)[0m  SELECT 1 AS one FROM "ticket_queues" WHERE "ticket_queues"."name" IS NULL LIMIT 1
  [1m[36mTicketQueue Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "ticket_queues" WHERE "ticket_queues"."name" IS NULL LIMIT 1[0m
  [1m[35m (0.3ms)[0m  ROLLBACK
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
---------------------------------------------------------------
TicketTest: test: Ticket should allow priority to be set to 1. 
---------------------------------------------------------------
  [1m[35m (0.3ms)[0m  ROLLBACK
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
----------------------------------------------------------------
TicketTest: test: Ticket should allow priority to be set to 25. 
----------------------------------------------------------------
  [1m[35m (0.3ms)[0m  ROLLBACK
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
--------------------------------------------------------
TicketTest: test: Ticket should belong to ticket_queue. 
--------------------------------------------------------
  [1m[35m (0.1ms)[0m  ROLLBACK
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
------------------------------------------------
TicketTest: test: Ticket should belong to user. 
------------------------------------------------
  [1m[35m (0.2ms)[0m  ROLLBACK
  [1m[36m (0.1ms)[0m  [1mBEGIN[0m
-------------------------------------------------------------------
TicketTest: test: Ticket should not allow priority to be set to 0. 
-------------------------------------------------------------------
  [1m[35m (0.2ms)[0m  ROLLBACK
  [1m[36m (0.1ms)[0m  [1mBEGIN[0m
---------------------------------------------------------------------
TicketTest: test: Ticket should not allow priority to be set to 1.5. 
---------------------------------------------------------------------
  [1m[35m (0.1ms)[0m  ROLLBACK
  [1m[36m (0.1ms)[0m  [1mBEGIN[0m
--------------------------------------------------------------------
TicketTest: test: Ticket should not allow priority to be set to 26. 
--------------------------------------------------------------------
  [1m[35m (0.1ms)[0m  ROLLBACK
  [1m[36m (0.0ms)[0m  [1mBEGIN[0m
------------------------------------------------------------------------
TicketTest: test: Ticket should only allow numeric values for priority. 
------------------------------------------------------------------------
  [1m[35m (0.2ms)[0m  ROLLBACK
  [1m[36m (0.1ms)[0m  [1mBEGIN[0m
------------------------------------------------------------
TicketTest: test: Ticket should require priority to be set. 
------------------------------------------------------------
  [1m[35m (0.2ms)[0m  ROLLBACK
  [1m[36m (0.1ms)[0m  [1mBEGIN[0m
--------------------------------------------------------------
TicketTest: test: Ticket should require start_date to be set. 
--------------------------------------------------------------
  [1m[35m (0.2ms)[0m  ROLLBACK
  [1m[36m (0.1ms)[0m  [1mBEGIN[0m
-----------------------------------------------------------
TicketTest: test: Ticket should require subject to be set. 
-----------------------------------------------------------
  [1m[35m (0.2ms)[0m  ROLLBACK
  [1m[36m (0.1ms)[0m  [1mBEGIN[0m
----------------------------------------------------------
UserTest: test: A given user should allow adding a phone. 
----------------------------------------------------------
  [1m[35mUser Load (0.6ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36m (0.2ms)[0m  [1mSAVEPOINT active_record_1[0m
  [1m[35mSQL (0.6ms)[0m  INSERT INTO "phones" ("created_at", "number", "tag", "updated_at", "user_id") VALUES ($1, $2, $3, $4, $5) RETURNING "id"  [["created_at", Wed, 28 Aug 2013 00:47:07 UTC +00:00], ["number", "234-5678"], ["tag", "Home"], ["updated_at", Wed, 28 Aug 2013 00:47:07 UTC +00:00], ["user_id", 1]]
  [1m[36m (0.1ms)[0m  [1mRELEASE SAVEPOINT active_record_1[0m
  [1m[35m (0.2ms)[0m  SAVEPOINT active_record_1
  [1m[36mUser Exists (0.6ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.2ms)[0m  RELEASE SAVEPOINT active_record_1
  [1m[36m (0.8ms)[0m  [1mSELECT COUNT(*) FROM "phones" WHERE "phones"."user_id" = $1[0m  [["user_id", 1]]
  [1m[35m (0.2ms)[0m  ROLLBACK
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
---------------------------------------------------------------------------
UserTest: test: A given user should allow retrieval of user phone numbers. 
---------------------------------------------------------------------------
  [1m[35mUser Load (0.5ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36m (0.4ms)[0m  [1mSELECT COUNT(*) FROM "phones" WHERE "phones"."user_id" = $1[0m  [["user_id", 1]]
  [1m[35m (0.1ms)[0m  ROLLBACK
  [1m[36m (0.0ms)[0m  [1mBEGIN[0m
--------------------------------------------------------
UserTest: test: A given user should be valid initially. 
--------------------------------------------------------
  [1m[35mUser Load (0.4ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.2ms)[0m  ROLLBACK
  [1m[36m (0.1ms)[0m  [1mBEGIN[0m
-----------------------------------------------------------------------
UserTest: test: A given user should not be valid if first name is nil. 
-----------------------------------------------------------------------
  [1m[35mUser Load (0.4ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.2ms)[0m  ROLLBACK
  [1m[36m (0.1ms)[0m  [1mBEGIN[0m
----------------------------------------------------------------------------
UserTest: test: A given user should not be valid if first name is too long. 
----------------------------------------------------------------------------
  [1m[35mUser Load (0.4ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.2ms)[0m  ROLLBACK
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
-----------------------------------------------------------------------------
UserTest: test: A given user should not be valid if first name is too short. 
-----------------------------------------------------------------------------
  [1m[35mUser Load (0.4ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.1ms)[0m  ROLLBACK
  [1m[36m (0.1ms)[0m  [1mBEGIN[0m
------------------------------------------------------------------------------------------------
UserTest: test: A given user should not be valid if first name starts with a lower case letter. 
------------------------------------------------------------------------------------------------
  [1m[35mUser Load (0.4ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (0.3ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.1ms)[0m  ROLLBACK
  [1m[36m (0.1ms)[0m  [1mBEGIN[0m
----------------------------------------------------------------------
UserTest: test: A given user should not be valid if last name is nil. 
----------------------------------------------------------------------
  [1m[35mUser Load (0.4ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.1ms)[0m  ROLLBACK
  [1m[36m (0.1ms)[0m  [1mBEGIN[0m
---------------------------------------------------------------------------
UserTest: test: A given user should not be valid if last name is too long. 
---------------------------------------------------------------------------
  [1m[35mUser Load (0.4ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (0.5ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.2ms)[0m  ROLLBACK
  [1m[36m (0.1ms)[0m  [1mBEGIN[0m
----------------------------------------------------------------------------
UserTest: test: A given user should not be valid if last name is too short. 
----------------------------------------------------------------------------
  [1m[35mUser Load (0.5ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.1ms)[0m  ROLLBACK
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
---------------------------------------------------------------------------------------------
UserTest: test: A given user should not be valid if login name has non-alphanumeric letters. 
---------------------------------------------------------------------------------------------
  [1m[35mUser Load (0.4ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'johns-276' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.2ms)[0m  ROLLBACK
  [1m[36m (0.1ms)[0m  [1mBEGIN[0m
-------------------------------------------------------------------------------
UserTest: test: A given user should not be valid if login name is a duplicate. 
-------------------------------------------------------------------------------
  [1m[35mUser Load (0.4ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36m (0.1ms)[0m  [1mSAVEPOINT active_record_1[0m
  [1m[35mUser Exists (0.3ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'orstedma' LIMIT 1
  [1m[36m (0.2ms)[0m  [1mROLLBACK TO SAVEPOINT active_record_1[0m
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'orstedma' LIMIT 1
  [1m[36m (0.1ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.1ms)[0m  BEGIN
-----------------------------------------------------------------------
UserTest: test: A given user should not be valid if login name is nil. 
-----------------------------------------------------------------------
  [1m[36mUser Load (0.4ms)[0m  [1mSELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35mUser Exists (0.3ms)[0m  SELECT 1 AS one FROM "users" WHERE ("users"."login_name" IS NULL AND "users"."id" != 1) LIMIT 1
  [1m[36m (0.1ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.1ms)[0m  BEGIN
----------------------------------------------------------------------------
UserTest: test: A given user should not be valid if login name is too long. 
----------------------------------------------------------------------------
  [1m[36mUser Load (0.4ms)[0m  [1mSELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35mUser Exists (0.3ms)[0m  SELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'abbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb' AND "users"."id" != 1) LIMIT 1
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.2ms)[0m  BEGIN
-----------------------------------------------------------------------------
UserTest: test: A given user should not be valid if login name is too short. 
-----------------------------------------------------------------------------
  [1m[36mUser Load (3.2ms)[0m  [1mSELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'aaaaa' AND "users"."id" != 1) LIMIT 1
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.2ms)[0m  BEGIN
---------------------------------------------------------------------------------------------
UserTest: test: A given user should not be valid if login name starts with a capital letter. 
---------------------------------------------------------------------------------------------
  [1m[36mUser Load (0.6ms)[0m  [1mSELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'Johns276' AND "users"."id" != 1) LIMIT 1
  [1m[36m (0.2ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.2ms)[0m  BEGIN
------------------------------------------------------------------------------------
UserTest: test: A given user should require a start date if an end date is present. 
------------------------------------------------------------------------------------
  [1m[36mUser Load (0.6ms)[0m  [1mSELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1
  [1m[36m (0.1ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.1ms)[0m  BEGIN
--------------------------------------------------------------------------------
UserTest: test: A given user should require an end date on or after start date. 
--------------------------------------------------------------------------------
  [1m[36mUser Load (0.6ms)[0m  [1mSELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35mUser Exists (0.5ms)[0m  SELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1
  [1m[36m (0.2ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.2ms)[0m  BEGIN
----------------------------------------------------------------
UserTest: test: A given user should retrieve only valid phones. 
----------------------------------------------------------------
  [1m[36mUser Load (0.6ms)[0m  [1mSELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35mPhone Load (0.9ms)[0m  SELECT "phones".* FROM "phones" WHERE "phones"."user_id" = $1  [["user_id", 1]]
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.2ms)[0m  BEGIN
--------------------------------------------------------
UserTest: test: A new user should allow adding a phone. 
--------------------------------------------------------
  [1m[36m (0.2ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.2ms)[0m  BEGIN
------------------------------------------------------
UserTest: test: A new user should be valid initially. 
------------------------------------------------------
  [1m[36mUser Exists (0.5ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35m (0.2ms)[0m  ROLLBACK
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
---------------------------------------------------------------------
UserTest: test: A new user should not be valid if first name is nil. 
---------------------------------------------------------------------
  [1m[35mUser Exists (0.5ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.2ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.1ms)[0m  BEGIN
--------------------------------------------------------------------------
UserTest: test: A new user should not be valid if first name is too long. 
--------------------------------------------------------------------------
  [1m[36mUser Exists (0.5ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35m (0.2ms)[0m  ROLLBACK
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
---------------------------------------------------------------------------
UserTest: test: A new user should not be valid if first name is too short. 
---------------------------------------------------------------------------
  [1m[35mUser Exists (0.5ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.2ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.2ms)[0m  BEGIN
----------------------------------------------------------------------------------------------
UserTest: test: A new user should not be valid if first name starts with a lower case letter. 
----------------------------------------------------------------------------------------------
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35m (0.2ms)[0m  ROLLBACK
  [1m[36m (0.1ms)[0m  [1mBEGIN[0m
--------------------------------------------------------------------
UserTest: test: A new user should not be valid if last name is nil. 
--------------------------------------------------------------------
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.2ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.2ms)[0m  BEGIN
-------------------------------------------------------------------------
UserTest: test: A new user should not be valid if last name is too long. 
-------------------------------------------------------------------------
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35m (0.2ms)[0m  ROLLBACK
  [1m[36m (0.1ms)[0m  [1mBEGIN[0m
--------------------------------------------------------------------------
UserTest: test: A new user should not be valid if last name is too short. 
--------------------------------------------------------------------------
  [1m[35mUser Exists (0.3ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.2ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.1ms)[0m  BEGIN
-------------------------------------------------------------------------------------------
UserTest: test: A new user should not be valid if login name has non-alphanumeric letters. 
-------------------------------------------------------------------------------------------
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'johns-276' LIMIT 1[0m
  [1m[35m (0.1ms)[0m  ROLLBACK
  [1m[36m (0.1ms)[0m  [1mBEGIN[0m
-----------------------------------------------------------------------------
UserTest: test: A new user should not be valid if login name is a duplicate. 
-----------------------------------------------------------------------------
  [1m[35m (0.1ms)[0m  SAVEPOINT active_record_1
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'orstedma' LIMIT 1[0m
  [1m[35m (0.2ms)[0m  ROLLBACK TO SAVEPOINT active_record_1
  [1m[36mUser Exists (0.3ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'orstedma' LIMIT 1[0m
  [1m[35m (0.1ms)[0m  ROLLBACK
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
---------------------------------------------------------------------
UserTest: test: A new user should not be valid if login name is nil. 
---------------------------------------------------------------------
  [1m[35mUser Exists (0.3ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.2ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.1ms)[0m  BEGIN
--------------------------------------------------------------------------
UserTest: test: A new user should not be valid if login name is too long. 
--------------------------------------------------------------------------
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'abbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb' LIMIT 1[0m
  [1m[35m (0.1ms)[0m  ROLLBACK
  [1m[36m (0.1ms)[0m  [1mBEGIN[0m
---------------------------------------------------------------------------
UserTest: test: A new user should not be valid if login name is too short. 
---------------------------------------------------------------------------
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'aaaaa' LIMIT 1
  [1m[36m (0.1ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.0ms)[0m  BEGIN
-------------------------------------------------------------------------------------------
UserTest: test: A new user should not be valid if login name starts with a capital letter. 
-------------------------------------------------------------------------------------------
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'Johns276' LIMIT 1[0m
  [1m[35m (0.1ms)[0m  ROLLBACK
  [1m[36m (0.1ms)[0m  [1mBEGIN[0m
----------------------------------------------------------------------------------
UserTest: test: A new user should require a start date if an end date is present. 
----------------------------------------------------------------------------------
  [1m[35mUser Exists (0.3ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.1ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.1ms)[0m  BEGIN
------------------------------------------------------------------------------
UserTest: test: A new user should require an end date on or after start date. 
------------------------------------------------------------------------------
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35m (0.1ms)[0m  ROLLBACK
  [1m[36m (0.1ms)[0m  [1mBEGIN[0m
---------------------------------------------------------------------
UserTest: test: User should allow first_name to be set to "Charles". 
---------------------------------------------------------------------
  [1m[35mUser Exists (0.3ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.3ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35m (0.1ms)[0m  ROLLBACK
  [1m[36m (0.1ms)[0m  [1mBEGIN[0m
--------------------------------------------------------------------------
UserTest: test: User should ensure first_name has a length of at least 2. 
--------------------------------------------------------------------------
  [1m[35mUser Exists (0.5ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (3.1ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.5ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.2ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.2ms)[0m  BEGIN
---------------------------------------------------------------------------
UserTest: test: User should ensure first_name has a length of at most 254. 
---------------------------------------------------------------------------
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.3ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.3ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35m (0.2ms)[0m  ROLLBACK
  [1m[36m (0.1ms)[0m  [1mBEGIN[0m
-------------------------------------------------------------------------
UserTest: test: User should ensure last_name has a length of at least 2. 
-------------------------------------------------------------------------
  [1m[35mUser Exists (0.5ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.3ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.3ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.3ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.2ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.1ms)[0m  BEGIN
--------------------------------------------------------------------------
UserTest: test: User should ensure last_name has a length of at most 254. 
--------------------------------------------------------------------------
  [1m[36mUser Exists (0.5ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.3ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.3ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35m (0.2ms)[0m  ROLLBACK
  [1m[36m (0.1ms)[0m  [1mBEGIN[0m
--------------------------------------------------------------------------
UserTest: test: User should ensure login_name has a length of at least 6. 
--------------------------------------------------------------------------
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxx' LIMIT 1
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxx' LIMIT 1[0m
  [1m[35mUser Exists (3.2ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxx' LIMIT 1
  [1m[36mUser Exists (0.6ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxx' LIMIT 1[0m
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxx' LIMIT 1
  [1m[36m (0.2ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.2ms)[0m  BEGIN
---------------------------------------------------------------------------
UserTest: test: User should ensure login_name has a length of at most 254. 
---------------------------------------------------------------------------
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' LIMIT 1[0m
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' LIMIT 1
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' LIMIT 1[0m
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' LIMIT 1
  [1m[36mUser Exists (0.3ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' LIMIT 1[0m
  [1m[35m (0.1ms)[0m  ROLLBACK
  [1m[36m (0.1ms)[0m  [1mBEGIN[0m
--------------------------------------------------------------------------
UserTest: test: User should ensure nick_name has a length of at most 254. 
--------------------------------------------------------------------------
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.3ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.3ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.2ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.1ms)[0m  BEGIN
-------------------------------------------------
UserTest: test: User should have many locations. 
-------------------------------------------------
  [1m[36m (0.1ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.1ms)[0m  BEGIN
----------------------------------------------
UserTest: test: User should have many phones. 
----------------------------------------------
  [1m[36m (0.1ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.1ms)[0m  BEGIN
-------------------------------------------------------------------------
UserTest: test: User should not allow first_name to be set to "charles". 
-------------------------------------------------------------------------
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.3ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.2ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.1ms)[0m  BEGIN
--------------------------------------------------------------------------------
UserTest: test: User should require case sensitive unique value for login_name. 
--------------------------------------------------------------------------------
  [1m[36mUser Load (0.5ms)[0m  [1mSELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35mUser Exists (0.3ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'orstedma' LIMIT 1
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'orstedma' LIMIT 1[0m
  [1m[35m (0.2ms)[0m  ROLLBACK
  [1m[36m (0.1ms)[0m  [1mBEGIN[0m
----------------------------------------------------------
UserTest: test: User should require first_name to be set. 
----------------------------------------------------------
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35m (0.2ms)[0m  ROLLBACK
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
---------------------------------------------------------
UserTest: test: User should require last_name to be set. 
---------------------------------------------------------
  [1m[35mUser Exists (2.8ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.5ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35m (0.2ms)[0m  ROLLBACK
  [1m[36m (0.1ms)[0m  [1mBEGIN[0m
----------------------------------------------------------
UserTest: test: User should require login_name to be set. 
----------------------------------------------------------
  [1m[35mUser Exists (0.5ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35m (0.2ms)[0m  ROLLBACK
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
----------------------------------------------------------
UserTest: test: User should require start_date to be set. 
----------------------------------------------------------
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.5ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35m (0.2ms)[0m  ROLLBACK
  [1m[36m (226.8ms)[0m  [1mDROP DATABASE IF EXISTS "ritrack_test"[0m
  [1m[35m (716.7ms)[0m  CREATE DATABASE "ritrack_test" ENCODING = 'unicode'
  [1m[36mSQL (3.0ms)[0m  [1mCREATE EXTENSION IF NOT EXISTS "plpgsql"[0m
  [1m[35m (110.9ms)[0m  CREATE TABLE "locations" ("id" serial primary key, "company" character varying(255), "organization" character varying(255), "address1" character varying(255), "address2" character varying(255), "city" character varying(255), "state" character varying(255), "zip" character varying(255), "country" character varying(255), "user_id" integer, "created_at" timestamp, "updated_at" timestamp) 
  [1m[36m (58.1ms)[0m  [1mCREATE INDEX "index_locations_on_user_id" ON "locations" USING btree ("user_id")[0m
  [1m[35m (97.3ms)[0m  CREATE TABLE "phones" ("id" serial primary key, "number" character varying(255), "tag" character varying(255), "user_id" integer, "created_at" timestamp, "updated_at" timestamp) 
  [1m[36m (49.8ms)[0m  [1mCREATE INDEX "index_phones_on_number" ON "phones" USING btree ("number")[0m
  [1m[35m (51.2ms)[0m  CREATE INDEX "index_phones_on_user_id" ON "phones" USING btree ("user_id")
  [1m[36m (97.1ms)[0m  [1mCREATE TABLE "ticket_queues" ("id" serial primary key, "name" character varying(255), "description" character varying(255), "url" character varying(255), "priority" integer, "default_due_in" integer, "start_date" date, "end_date" date, "created_at" timestamp, "updated_at" timestamp) [0m
  [1m[35m (96.6ms)[0m  CREATE TABLE "ticket_responses" ("id" serial primary key, "body" text, "response_sent" timestamp, "ticket_id" integer, "created_at" timestamp, "updated_at" timestamp) 
  [1m[36m (46.1ms)[0m  [1mCREATE INDEX "index_ticket_responses_on_ticket_id" ON "ticket_responses" USING btree ("ticket_id")[0m
  [1m[35m (96.7ms)[0m  CREATE TABLE "tickets" ("id" serial primary key, "subject" character varying(255), "status" character varying(255), "priority" integer, "start_date" timestamp, "end_date" timestamp, "due_date" timestamp, "user_id" integer, "ticket_queue_id" integer, "created_at" timestamp, "updated_at" timestamp, "requestor_id" integer) 
  [1m[36m (54.4ms)[0m  [1mCREATE INDEX "index_tickets_on_requestor_id" ON "tickets" USING btree ("requestor_id")[0m
  [1m[35m (77.9ms)[0m  CREATE INDEX "index_tickets_on_ticket_queue_id" ON "tickets" USING btree ("ticket_queue_id")
  [1m[36m (43.0ms)[0m  [1mCREATE INDEX "index_tickets_on_user_id" ON "tickets" USING btree ("user_id")[0m
  [1m[35m (88.5ms)[0m  CREATE TABLE "users" ("id" serial primary key, "first_name" character varying(255), "last_name" character varying(255), "nick_name" character varying(255), "login_name" character varying(255), "notes" text, "created_at" timestamp, "updated_at" timestamp, "start_date" date, "end_date" date, "is_admin" boolean, "can_login" boolean, "user_by_email" boolean) 
  [1m[36m (2.5ms)[0m  [1mCREATE TABLE "schema_migrations" ("version" character varying(255) NOT NULL) [0m
  [1m[35m (46.2ms)[0m  CREATE UNIQUE INDEX "unique_schema_migrations" ON "schema_migrations" ("version")
  [1m[36m (1.0ms)[0m  [1mSELECT version FROM "schema_migrations"[0m
  [1m[35m (5.8ms)[0m  INSERT INTO "schema_migrations" (version) VALUES ('20130827150753')
  [1m[36m (7.9ms)[0m  [1mINSERT INTO "schema_migrations" (version) VALUES ('20130826182256')[0m
  [1m[35m (8.0ms)[0m  INSERT INTO "schema_migrations" (version) VALUES ('20130821233827')
  [1m[36m (7.9ms)[0m  [1mINSERT INTO "schema_migrations" (version) VALUES ('20130826154055')[0m
  [1m[35m (7.9ms)[0m  INSERT INTO "schema_migrations" (version) VALUES ('20130811212425')
  [1m[36m (8.1ms)[0m  [1mINSERT INTO "schema_migrations" (version) VALUES ('20130816142047')[0m
  [1m[35m (8.0ms)[0m  INSERT INTO "schema_migrations" (version) VALUES ('20130811195620')
  [1m[36m (7.9ms)[0m  [1mINSERT INTO "schema_migrations" (version) VALUES ('20130826183525')[0m
  [1m[35m (8.0ms)[0m  INSERT INTO "schema_migrations" (version) VALUES ('20130811193133')
  [1m[36m (8.0ms)[0m  [1mINSERT INTO "schema_migrations" (version) VALUES ('20130827135409')[0m
  [1m[35m (7.9ms)[0m  INSERT INTO "schema_migrations" (version) VALUES ('20130825220004')
  [1m[36m (8.0ms)[0m  [1mINSERT INTO "schema_migrations" (version) VALUES ('20130811195557')[0m
  [1m[35mActiveRecord::SchemaMigration Load (1.2ms)[0m  SELECT "schema_migrations".* FROM "schema_migrations"
  [1m[36mActiveRecord::SchemaMigration Load (0.8ms)[0m  [1mSELECT "schema_migrations".* FROM "schema_migrations"[0m
  [1m[35m (7.8ms)[0m  ALTER TABLE "locations" DISABLE TRIGGER ALL;ALTER TABLE "phones" DISABLE TRIGGER ALL;ALTER TABLE "ticket_queues" DISABLE TRIGGER ALL;ALTER TABLE "ticket_responses" DISABLE TRIGGER ALL;ALTER TABLE "tickets" DISABLE TRIGGER ALL;ALTER TABLE "users" DISABLE TRIGGER ALL;ALTER TABLE "schema_migrations" DISABLE TRIGGER ALL
  [1m[36m (0.5ms)[0m  [1mBEGIN[0m
  [1m[35mFixture Delete (0.6ms)[0m  DELETE FROM "locations"
  [1m[36mFixture Insert (1.4ms)[0m  [1mINSERT INTO "locations" ("id", "company", "organization", "address1", "address2", "city", "state", "zip", "country", "user_id", "created_at", "updated_at") VALUES (1, 'NPR', 'News Desk', '1444 First Street', 'Floor 15', 'Washington', 'DC', '10270', 'US', 1, '2013-08-28 12:31:55', '2013-08-28 12:31:55')[0m
  [1m[35mFixture Insert (0.7ms)[0m  INSERT INTO "locations" ("company", "organization", "address1", "address2", "city", "state", "zip", "country", "user_id", "created_at", "updated_at", "id") VALUES ('NPR', 'Scotland Desk', '63 Park Avenue', 'Suite 102', 'Chicago', 'IL', '69755', 'US', 1, '2013-08-28 12:31:55', '2013-08-28 12:31:55', 298486374)
  [1m[36mFixture Delete (0.7ms)[0m  [1mDELETE FROM "users"[0m
  [1m[35mFixture Insert (1.1ms)[0m  INSERT INTO "users" ("id", "first_name", "last_name", "nick_name", "login_name", "start_date", "end_date", "notes", "created_at", "updated_at") VALUES (1, 'Michael', 'Orsted', 'Mike', 'orstedma', '2012-02-04', NULL, 'This user lives in Chicago.', '2013-08-28 12:31:55', '2013-08-28 12:31:55')
  [1m[36mFixture Insert (1.0ms)[0m  [1mINSERT INTO "users" ("id", "first_name", "last_name", "nick_name", "login_name", "start_date", "end_date", "notes", "created_at", "updated_at") VALUES (2, 'Frederick', 'Free-Loader', 'Frederick', 'freelofw', '2012-03-04', NULL, 'This user is completely useless', '2013-08-28 12:31:55', '2013-08-28 12:31:55')[0m
  [1m[35mFixture Insert (0.6ms)[0m  INSERT INTO "users" ("id", "first_name", "last_name", "nick_name", "login_name", "start_date", "end_date", "notes", "created_at", "updated_at") VALUES (3, 'Michael', 'Winstead', 'Mike', 'winstem', '2012-02-04', '2013-08-12', 'This user lives in New York. This user is disabled in the system.', '2013-08-28 12:31:55', '2013-08-28 12:31:55')
  [1m[36mFixture Insert (0.8ms)[0m  [1mINSERT INTO "users" ("id", "first_name", "last_name", "nick_name", "login_name", "start_date", "end_date", "notes", "created_at", "updated_at") VALUES (4, 'Allison', 'Wilson', 'Alli', 'wilsona', '2012-03-04', NULL, 'Electrical engineer.', '2013-08-28 12:31:55', '2013-08-28 12:31:55')[0m
  [1m[35mFixture Delete (1.0ms)[0m  DELETE FROM "ticket_responses"
  [1m[36mFixture Insert (0.6ms)[0m  [1mINSERT INTO "ticket_responses" ("id", "body", "response_sent", "ticket_id", "created_at", "updated_at") VALUES (1, 'This is my first response to filling hard drives', '2013-08-26 13:35:25.000000', 1, '2013-08-28 12:31:55', '2013-08-28 12:31:55')[0m
  [1m[35mFixture Insert (0.9ms)[0m  INSERT INTO "ticket_responses" ("id", "body", "response_sent", "ticket_id", "created_at", "updated_at") VALUES (2, 'MyText', '2013-08-26 13:35:25.000000', 1, '2013-08-28 12:31:55', '2013-08-28 12:31:55')
  [1m[36mFixture Delete (1.0ms)[0m  [1mDELETE FROM "ticket_queues"[0m
  [1m[35mFixture Insert (1.1ms)[0m  INSERT INTO "ticket_queues" ("id", "name", "description", "url", "priority", "default_due_in", "start_date", "end_date", "created_at", "updated_at") VALUES (1, 'Queue1', 'Ticket queue 1', 'mydomain.com', 1, 1, '2013-08-26', NULL, '2013-08-28 12:31:55', '2013-08-28 12:31:55')
  [1m[36mFixture Insert (0.9ms)[0m  [1mINSERT INTO "ticket_queues" ("id", "name", "description", "url", "priority", "default_due_in", "start_date", "end_date", "created_at", "updated_at") VALUES (2, 'Queue2', 'Ticket queue 2', 'mydomain.com', 1, 1, '2013-08-26', NULL, '2013-08-28 12:31:55', '2013-08-28 12:31:55')[0m
  [1m[35mFixture Delete (1.1ms)[0m  DELETE FROM "phones"
  [1m[36mFixture Insert (1.2ms)[0m  [1mINSERT INTO "phones" ("id", "number", "tag", "user_id", "created_at", "updated_at") VALUES (1, '(211) 234-1111', 'Office', 1, '2013-08-28 12:31:55', '2013-08-28 12:31:55')[0m
  [1m[35mFixture Insert (0.9ms)[0m  INSERT INTO "phones" ("id", "number", "tag", "user_id", "created_at", "updated_at") VALUES (2, '(222) 345-2222', 'Home', 1, '2013-08-28 12:31:55', '2013-08-28 12:31:55')
  [1m[36mFixture Insert (0.7ms)[0m  [1mINSERT INTO "phones" ("id", "number", "tag", "user_id", "created_at", "updated_at") VALUES (3, '(333) 456-3333', 'Mobile', 1, '2013-08-28 12:31:55', '2013-08-28 12:31:55')[0m
  [1m[35mFixture Insert (0.7ms)[0m  INSERT INTO "phones" ("id", "number", "tag", "user_id", "created_at", "updated_at") VALUES (4, '(444) 567-4444', 'Pager', 1, '2013-08-28 12:31:55', '2013-08-28 12:31:55')
  [1m[36mFixture Insert (0.8ms)[0m  [1mINSERT INTO "phones" ("id", "number", "tag", "user_id", "created_at", "updated_at") VALUES (5, '(555) 678-5555', 'Mobile', 1, '2013-08-28 12:31:55', '2013-08-28 12:31:55')[0m
  [1m[35mFixture Insert (0.7ms)[0m  INSERT INTO "phones" ("id", "number", "tag", "user_id", "created_at", "updated_at") VALUES (6, '(666) 789-6666', 'Mobile', 1, '2013-08-28 12:31:55', '2013-08-28 12:31:55')
  [1m[36mFixture Delete (1.3ms)[0m  [1mDELETE FROM "tickets"[0m
  [1m[35mFixture Insert (1.4ms)[0m  INSERT INTO "tickets" ("id", "subject", "status", "priority", "start_date", "end_date", "due_date", "user_id", "ticket_queue_id", "created_at", "updated_at") VALUES (1, 'Jobs filling hard disks completely', 'New', 1, '2013-08-26 13:22:56.000000', NULL, '2013-08-26 13:22:56.000000', 1, 1, '2013-08-28 12:31:55', '2013-08-28 12:31:55')
  [1m[36mFixture Insert (1.0ms)[0m  [1mINSERT INTO "tickets" ("id", "subject", "status", "priority", "start_date", "end_date", "due_date", "user_id", "ticket_queue_id", "created_at", "updated_at") VALUES (2, 'Hard drive failing. Replacement requested.', 'Opened', 1, '2013-08-26 13:22:56.000000', NULL, '2013-09-26 13:22:56.000000', 1, 1, '2013-08-28 12:31:55', '2013-08-28 12:31:55')[0m
  [1m[35m (7.3ms)[0m  COMMIT
  [1m[36m (1.0ms)[0m  [1mALTER TABLE "locations" ENABLE TRIGGER ALL;ALTER TABLE "phones" ENABLE TRIGGER ALL;ALTER TABLE "ticket_queues" ENABLE TRIGGER ALL;ALTER TABLE "ticket_responses" ENABLE TRIGGER ALL;ALTER TABLE "tickets" ENABLE TRIGGER ALL;ALTER TABLE "users" ENABLE TRIGGER ALL;ALTER TABLE "schema_migrations" ENABLE TRIGGER ALL[0m
  [1m[35m (0.4ms)[0m  BEGIN
--------------------------------------------------------------------------------------------------------
LocationTest: test: A given Location should not be valid if adddress2 is specified and address1 is not. 
--------------------------------------------------------------------------------------------------------
  [1m[36mLocation Load (1.9ms)[0m  [1mSELECT "locations".* FROM "locations" ORDER BY "locations"."id" ASC LIMIT 1[0m
  [1m[35m (0.4ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
------------------------------------------------------------------------------------------------------
LocationTest: test: A given Location should not be valid if company is specified and address1 is not. 
------------------------------------------------------------------------------------------------------
  [1m[35mLocation Load (0.9ms)[0m  SELECT "locations".* FROM "locations" ORDER BY "locations"."id" ASC LIMIT 1
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
--------------------------------------------------------------------------------------------------
LocationTest: test: A given Location should not be valid if company is specified and city is not. 
--------------------------------------------------------------------------------------------------
  [1m[36mLocation Load (0.9ms)[0m  [1mSELECT "locations".* FROM "locations" ORDER BY "locations"."id" ASC LIMIT 1[0m
  [1m[35m (0.4ms)[0m  ROLLBACK
  [1m[36m (0.4ms)[0m  [1mBEGIN[0m
---------------------------------------------------------------------------------------------------
LocationTest: test: A given Location should not be valid if company is specified and state is not. 
---------------------------------------------------------------------------------------------------
  [1m[35mLocation Load (0.9ms)[0m  SELECT "locations".* FROM "locations" ORDER BY "locations"."id" ASC LIMIT 1
  [1m[36m (0.4ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.4ms)[0m  BEGIN
-------------------------------------------------------------------------------------------------
LocationTest: test: A given Location should not be valid if company is specified and zip is not. 
-------------------------------------------------------------------------------------------------
  [1m[36mLocation Load (0.9ms)[0m  [1mSELECT "locations".* FROM "locations" ORDER BY "locations"."id" ASC LIMIT 1[0m
  [1m[35m (0.4ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
--------------------------------------------------------------------------------------------
LocationTest: test: A given Location should require a valid comany if comapny is specified. 
--------------------------------------------------------------------------------------------
  [1m[35mLocation Load (0.9ms)[0m  SELECT "locations".* FROM "locations" ORDER BY "locations"."id" ASC LIMIT 1
  [1m[36m (0.4ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
------------------------------------------------------------------------------------------------------
LocationTest: test: A new Location should not be valid if adddress2 is specified and address1 is not. 
------------------------------------------------------------------------------------------------------
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
----------------------------------------------------------------------------------------------------
LocationTest: test: A new Location should not be valid if company is specified and address1 is not. 
----------------------------------------------------------------------------------------------------
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
------------------------------------------------------------------------------------------------
LocationTest: test: A new Location should not be valid if company is specified and city is not. 
------------------------------------------------------------------------------------------------
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
-------------------------------------------------------------------------------------------------
LocationTest: test: A new Location should not be valid if company is specified and state is not. 
-------------------------------------------------------------------------------------------------
  [1m[36m (0.4ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.2ms)[0m  BEGIN
-----------------------------------------------------------------------------------------------
LocationTest: test: A new Location should not be valid if company is specified and zip is not. 
-----------------------------------------------------------------------------------------------
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
------------------------------------------------------------------------------------------
LocationTest: test: A new Location should require a valid comany if comapny is specified. 
------------------------------------------------------------------------------------------
  [1m[36m (0.5ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
---------------------------------------------------------------------------------------------
LocationTest: test: Location should allow company to be set to "American Telegraph Company". 
---------------------------------------------------------------------------------------------
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
-------------------------------------------------------------------------------------
LocationTest: test: Location should allow company to be set to "American Telegraph". 
-------------------------------------------------------------------------------------
  [1m[36m (0.4ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
---------------------------------------------------------------------------
LocationTest: test: Location should allow company to be set to "American". 
---------------------------------------------------------------------------
  [1m[36m (0.4ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
----------------------------------------------------------------------
LocationTest: test: Location should allow company to be set to "IBM". 
----------------------------------------------------------------------
  [1m[36m (0.2ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.2ms)[0m  BEGIN
--------------------------------------------------------------------
LocationTest: test: Location should allow zip to be set to "37122". 
--------------------------------------------------------------------
  [1m[36m (0.4ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.4ms)[0m  BEGIN
-------------------------------------------------------------------------
LocationTest: test: Location should allow zip to be set to "37122-4444". 
-------------------------------------------------------------------------
  [1m[36m (0.4ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
----------------------------------------------------
LocationTest: test: Location should belong to user. 
----------------------------------------------------
  [1m[36m (0.4ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.4ms)[0m  BEGIN
-------------------------------------------------------------------------------------------------
LocationTest: test: Location should not allow company to be set to "American Telegraph company". 
-------------------------------------------------------------------------------------------------
  [1m[36m (0.4ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
----------------------------------------------------------------------------
LocationTest: test: Location should not allow company to be set to "INTEL". 
----------------------------------------------------------------------------
  [1m[36m (0.4ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.4ms)[0m  BEGIN
----------------------------------------------------------------------------
LocationTest: test: Location should not allow zip to be set to "3712-4444". 
----------------------------------------------------------------------------
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.4ms)[0m  BEGIN
----------------------------------------------------------------------------
LocationTest: test: Location should not allow zip to be set to "37122-444". 
----------------------------------------------------------------------------
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
---------------------------------------------------------------
LocationTest: test: Location should require user_id to be set. 
---------------------------------------------------------------
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.4ms)[0m  BEGIN
----------------------------------------------------------
PhoneTest: test: A given phone should be initially valid. 
----------------------------------------------------------
  [1m[36mPhone Load (1.2ms)[0m  [1mSELECT "phones".* FROM "phones" ORDER BY "phones"."id" ASC LIMIT 1[0m
  [1m[35m (0.4ms)[0m  ROLLBACK
  [1m[36m (0.4ms)[0m  [1mBEGIN[0m
-----------------------------------------------------------------------------------------------------------
PhoneTest: test: A given phone should not be valid with a poorly formatted 10 digit North American number. 
-----------------------------------------------------------------------------------------------------------
  [1m[35mPhone Load (1.0ms)[0m  SELECT "phones".* FROM "phones" ORDER BY "phones"."id" ASC LIMIT 1
  [1m[36m (0.4ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.5ms)[0m  BEGIN
----------------------------------------------------------------------------------------------------------
PhoneTest: test: A given phone should not be valid with a poorly formatted 7 digit North American number. 
----------------------------------------------------------------------------------------------------------
  [1m[36mPhone Load (0.8ms)[0m  [1mSELECT "phones".* FROM "phones" ORDER BY "phones"."id" ASC LIMIT 1[0m
  [1m[35m (0.5ms)[0m  ROLLBACK
  [1m[36m (0.5ms)[0m  [1mBEGIN[0m
---------------------------------------------------------------------------------------
PhoneTest: test: A given phone should optionally be a valid  EPP international number. 
---------------------------------------------------------------------------------------
  [1m[35mPhone Load (1.0ms)[0m  SELECT "phones".* FROM "phones" ORDER BY "phones"."id" ASC LIMIT 1
  [1m[36m (0.6ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.5ms)[0m  BEGIN
-----------------------------------------------------------------------------------------------
PhoneTest: test: A given phone should optionally be a valid  ITU-T E.123 international number. 
-----------------------------------------------------------------------------------------------
  [1m[36mPhone Load (1.0ms)[0m  [1mSELECT "phones".* FROM "phones" ORDER BY "phones"."id" ASC LIMIT 1[0m
  [1m[35m (0.5ms)[0m  ROLLBACK
  [1m[36m (0.4ms)[0m  [1mBEGIN[0m
-------------------------------------------------------------------------------------------------
PhoneTest: test: A given phone should optionally be a valid North American number with 7 digits. 
-------------------------------------------------------------------------------------------------
  [1m[35mPhone Load (1.0ms)[0m  SELECT "phones".* FROM "phones" ORDER BY "phones"."id" ASC LIMIT 1
  [1m[36m (0.5ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.4ms)[0m  BEGIN
----------------------------------------------------------------------------------------------------------------------
PhoneTest: test: A given phone should optionally be a valid number with 10 digits with a leading 1 for long distance. 
----------------------------------------------------------------------------------------------------------------------
  [1m[36mPhone Load (1.0ms)[0m  [1mSELECT "phones".* FROM "phones" ORDER BY "phones"."id" ASC LIMIT 1[0m
  [1m[35m (0.6ms)[0m  ROLLBACK
  [1m[36m (0.5ms)[0m  [1mBEGIN[0m
-------------------------------------------------------------------------------------------------
PhoneTest: test: A given phone should optionally require a valid 10-digit North American number. 
-------------------------------------------------------------------------------------------------
  [1m[35mPhone Load (1.1ms)[0m  SELECT "phones".* FROM "phones" ORDER BY "phones"."id" ASC LIMIT 1
  [1m[36m (0.6ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.5ms)[0m  BEGIN
---------------------------------------------------------
PhoneTest: test: A given phone should require a user_id. 
---------------------------------------------------------
  [1m[36mPhone Load (1.0ms)[0m  [1mSELECT "phones".* FROM "phones" ORDER BY "phones"."id" ASC LIMIT 1[0m
  [1m[35m (0.5ms)[0m  ROLLBACK
  [1m[36m (0.4ms)[0m  [1mBEGIN[0m
------------------------------------------------------------
PhoneTest: test: A new phone should not be initially valid. 
------------------------------------------------------------
  [1m[35m (0.4ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
------------------------------------------------------------------------------
PhoneTest: test: A new phone should not be savable without being fully valid. 
------------------------------------------------------------------------------
  [1m[35m (0.4ms)[0m  SAVEPOINT active_record_1
  [1m[36mSQL (4.6ms)[0m  [1mINSERT INTO "phones" ("created_at", "number", "tag", "updated_at", "user_id") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["created_at", Wed, 28 Aug 2013 12:31:55 UTC +00:00], ["number", "345-6789"], ["tag", "Home"], ["updated_at", Wed, 28 Aug 2013 12:31:55 UTC +00:00], ["user_id", 100]]
  [1m[35m (0.3ms)[0m  RELEASE SAVEPOINT active_record_1
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.4ms)[0m  BEGIN
---------------------------------------------------------------------------------------------------------
PhoneTest: test: A new phone should not be valid with a poorly formatted 10 digit North American number. 
---------------------------------------------------------------------------------------------------------
  [1m[36m (0.4ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.4ms)[0m  BEGIN
--------------------------------------------------------------------------------------------------------
PhoneTest: test: A new phone should not be valid with a poorly formatted 7 digit North American number. 
--------------------------------------------------------------------------------------------------------
  [1m[36m (0.5ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.4ms)[0m  BEGIN
-----------------------------------------------------------------------------------------------
PhoneTest: test: A new phone should optionally be a valid North American number with 7 digits. 
-----------------------------------------------------------------------------------------------
  [1m[36m (0.5ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.4ms)[0m  BEGIN
--------------------------------------------------------------------------------------------------------------------
PhoneTest: test: A new phone should optionally be a valid number with 10 digits with a leading 1 for long distance. 
--------------------------------------------------------------------------------------------------------------------
  [1m[36m (0.4ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
-----------------------------------------------------------------------------------------------
PhoneTest: test: A new phone should optionally require a valid 10-digit North American number. 
-----------------------------------------------------------------------------------------------
  [1m[36m (0.4ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.4ms)[0m  BEGIN
----------------------------------------------
PhoneTest: test: Phone should belong to user. 
----------------------------------------------
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
------------------------------------------------------------------------------------------------
PhoneTest: test: Phone should ensure inclusion of tag in ["Home", "Office", "Mobile", "Pager"]. 
------------------------------------------------------------------------------------------------
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
------------------------------------------------------------------------
PhoneTest: test: Phone should ensure number has a length of at least 7. 
------------------------------------------------------------------------
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
------------------------------------------------------------------------
PhoneTest: test: Phone should ensure number has a length of at most 24. 
------------------------------------------------------------------------
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
--------------------------------------------------------
PhoneTest: test: Phone should require number to be set. 
--------------------------------------------------------
  [1m[36m (0.2ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.2ms)[0m  BEGIN
-----------------------------------------------------
PhoneTest: test: Phone should require tag to be set. 
-----------------------------------------------------
  [1m[36m (0.2ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.2ms)[0m  BEGIN
---------------------------------------------------------
PhoneTest: test: Phone should require user_id to be set. 
---------------------------------------------------------
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.2ms)[0m  BEGIN
---------------------------------------------------------------------------------------------------
TicketQueueTest: test: A given ticket queue should require a start date if an end date is present. 
---------------------------------------------------------------------------------------------------
  [1m[36mTicketQueue Load (0.5ms)[0m  [1mSELECT "ticket_queues".* FROM "ticket_queues" ORDER BY "ticket_queues"."id" ASC LIMIT 1[0m
  [1m[35mTicketQueue Exists (0.9ms)[0m  SELECT 1 AS one FROM "ticket_queues" WHERE ("ticket_queues"."name" = 'Queue1' AND "ticket_queues"."id" != 1) LIMIT 1
  [1m[36m (0.6ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.2ms)[0m  BEGIN
-----------------------------------------------------------------------------------------------
TicketQueueTest: test: A given ticket queue should require an end date on or after start date. 
-----------------------------------------------------------------------------------------------
  [1m[36mTicketQueue Load (0.8ms)[0m  [1mSELECT "ticket_queues".* FROM "ticket_queues" ORDER BY "ticket_queues"."id" ASC LIMIT 1[0m
  [1m[35mTicketQueue Exists (0.7ms)[0m  SELECT 1 AS one FROM "ticket_queues" WHERE ("ticket_queues"."name" = 'Queue1' AND "ticket_queues"."id" != 1) LIMIT 1
  [1m[36m (0.4ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.4ms)[0m  BEGIN
-------------------------------------------------------------
TicketQueueTest: test: TicketQueue should have many tickets. 
-------------------------------------------------------------
  [1m[36m (0.5ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.4ms)[0m  BEGIN
----------------------------------------------------------------------------------------
TicketQueueTest: test: TicketQueue should require case sensitive unique value for name. 
----------------------------------------------------------------------------------------
  [1m[36mTicketQueue Load (1.0ms)[0m  [1mSELECT "ticket_queues".* FROM "ticket_queues" ORDER BY "ticket_queues"."id" ASC LIMIT 1[0m
  [1m[35mTicketQueue Exists (0.8ms)[0m  SELECT 1 AS one FROM "ticket_queues" WHERE "ticket_queues"."name" = 'Queue1' LIMIT 1
  [1m[36mTicketQueue Exists (6.1ms)[0m  [1mSELECT 1 AS one FROM "ticket_queues" WHERE "ticket_queues"."name" = 'Queue1' LIMIT 1[0m
  [1m[35m (0.3ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
----------------------------------------------------------------------------
TicketQueueTest: test: TicketQueue should require default_due_in to be set. 
----------------------------------------------------------------------------
  [1m[35mTicketQueue Exists (0.7ms)[0m  SELECT 1 AS one FROM "ticket_queues" WHERE "ticket_queues"."name" IS NULL LIMIT 1
  [1m[36mTicketQueue Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "ticket_queues" WHERE "ticket_queues"."name" IS NULL LIMIT 1[0m
  [1m[35m (0.3ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
-------------------------------------------------------------------------
TicketQueueTest: test: TicketQueue should require description to be set. 
-------------------------------------------------------------------------
  [1m[35mTicketQueue Exists (0.7ms)[0m  SELECT 1 AS one FROM "ticket_queues" WHERE "ticket_queues"."name" IS NULL LIMIT 1
  [1m[36mTicketQueue Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "ticket_queues" WHERE "ticket_queues"."name" IS NULL LIMIT 1[0m
  [1m[35m (0.3ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
------------------------------------------------------------------
TicketQueueTest: test: TicketQueue should require name to be set. 
------------------------------------------------------------------
  [1m[35mTicketQueue Exists (0.6ms)[0m  SELECT 1 AS one FROM "ticket_queues" WHERE "ticket_queues"."name" IS NULL LIMIT 1
  [1m[36mTicketQueue Exists (0.6ms)[0m  [1mSELECT 1 AS one FROM "ticket_queues" WHERE "ticket_queues"."name" IS NULL LIMIT 1[0m
  [1m[35m (0.3ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
----------------------------------------------------------------------
TicketQueueTest: test: TicketQueue should require priority to be set. 
----------------------------------------------------------------------
  [1m[35mTicketQueue Exists (0.6ms)[0m  SELECT 1 AS one FROM "ticket_queues" WHERE "ticket_queues"."name" IS NULL LIMIT 1
  [1m[36mTicketQueue Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "ticket_queues" WHERE "ticket_queues"."name" IS NULL LIMIT 1[0m
  [1m[35m (0.3ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
------------------------------------------------------------------------
TicketQueueTest: test: TicketQueue should require start_date to be set. 
------------------------------------------------------------------------
  [1m[35mTicketQueue Exists (0.6ms)[0m  SELECT 1 AS one FROM "ticket_queues" WHERE "ticket_queues"."name" IS NULL LIMIT 1
  [1m[36mTicketQueue Exists (0.8ms)[0m  [1mSELECT 1 AS one FROM "ticket_queues" WHERE "ticket_queues"."name" IS NULL LIMIT 1[0m
  [1m[35m (0.3ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
-----------------------------------------------------------------
TicketQueueTest: test: TicketQueue should require url to be set. 
-----------------------------------------------------------------
  [1m[35mTicketQueue Exists (0.6ms)[0m  SELECT 1 AS one FROM "ticket_queues" WHERE "ticket_queues"."name" IS NULL LIMIT 1
  [1m[36mTicketQueue Exists (0.6ms)[0m  [1mSELECT 1 AS one FROM "ticket_queues" WHERE "ticket_queues"."name" IS NULL LIMIT 1[0m
  [1m[35m (0.3ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
---------------------------------------------------------------
TicketTest: test: Ticket should allow priority to be set to 1. 
---------------------------------------------------------------
  [1m[35m (0.4ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
----------------------------------------------------------------
TicketTest: test: Ticket should allow priority to be set to 25. 
----------------------------------------------------------------
  [1m[35m (0.3ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
--------------------------------------------------------
TicketTest: test: Ticket should belong to ticket_queue. 
--------------------------------------------------------
  [1m[35m (0.3ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
------------------------------------------------
TicketTest: test: Ticket should belong to user. 
------------------------------------------------
  [1m[35m (0.3ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
-------------------------------------------------------------------
TicketTest: test: Ticket should not allow priority to be set to 0. 
-------------------------------------------------------------------
  [1m[35m (0.3ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
---------------------------------------------------------------------
TicketTest: test: Ticket should not allow priority to be set to 1.5. 
---------------------------------------------------------------------
  [1m[35m (0.3ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
--------------------------------------------------------------------
TicketTest: test: Ticket should not allow priority to be set to 26. 
--------------------------------------------------------------------
  [1m[35m (0.3ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
------------------------------------------------------------------------
TicketTest: test: Ticket should only allow numeric values for priority. 
------------------------------------------------------------------------
  [1m[35m (0.3ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
------------------------------------------------------------
TicketTest: test: Ticket should require priority to be set. 
------------------------------------------------------------
  [1m[35m (0.2ms)[0m  ROLLBACK
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
--------------------------------------------------------------
TicketTest: test: Ticket should require start_date to be set. 
--------------------------------------------------------------
  [1m[35m (0.3ms)[0m  ROLLBACK
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
-----------------------------------------------------------
TicketTest: test: Ticket should require subject to be set. 
-----------------------------------------------------------
  [1m[35m (0.3ms)[0m  ROLLBACK
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
----------------------------------------------------------
UserTest: test: A given user should allow adding a phone. 
----------------------------------------------------------
  [1m[35mUser Load (0.5ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36m (0.3ms)[0m  [1mSAVEPOINT active_record_1[0m
  [1m[35mSQL (1.0ms)[0m  INSERT INTO "phones" ("created_at", "number", "tag", "updated_at", "user_id") VALUES ($1, $2, $3, $4, $5) RETURNING "id"  [["created_at", Wed, 28 Aug 2013 12:31:56 UTC +00:00], ["number", "234-5678"], ["tag", "Home"], ["updated_at", Wed, 28 Aug 2013 12:31:56 UTC +00:00], ["user_id", 1]]
  [1m[36m (0.3ms)[0m  [1mRELEASE SAVEPOINT active_record_1[0m
  [1m[35m (0.3ms)[0m  SAVEPOINT active_record_1
  [1m[36mUser Exists (0.9ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.4ms)[0m  RELEASE SAVEPOINT active_record_1
  [1m[36m (1.5ms)[0m  [1mSELECT COUNT(*) FROM "phones" WHERE "phones"."user_id" = $1[0m  [["user_id", 1]]
  [1m[35m (0.5ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
---------------------------------------------------------------------------
UserTest: test: A given user should allow retrieval of user phone numbers. 
---------------------------------------------------------------------------
  [1m[35mUser Load (0.8ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36m (1.0ms)[0m  [1mSELECT COUNT(*) FROM "phones" WHERE "phones"."user_id" = $1[0m  [["user_id", 1]]
  [1m[35m (0.5ms)[0m  ROLLBACK
  [1m[36m (0.4ms)[0m  [1mBEGIN[0m
--------------------------------------------------------
UserTest: test: A given user should be valid initially. 
--------------------------------------------------------
  [1m[35mUser Load (1.1ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (1.0ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.5ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
-----------------------------------------------------------------------
UserTest: test: A given user should not be valid if first name is nil. 
-----------------------------------------------------------------------
  [1m[35mUser Load (1.2ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (1.0ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.4ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
----------------------------------------------------------------------------
UserTest: test: A given user should not be valid if first name is too long. 
----------------------------------------------------------------------------
  [1m[35mUser Load (0.9ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (0.9ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.4ms)[0m  ROLLBACK
  [1m[36m (0.4ms)[0m  [1mBEGIN[0m
-----------------------------------------------------------------------------
UserTest: test: A given user should not be valid if first name is too short. 
-----------------------------------------------------------------------------
  [1m[35mUser Load (1.0ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (0.9ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.5ms)[0m  ROLLBACK
  [1m[36m (0.4ms)[0m  [1mBEGIN[0m
------------------------------------------------------------------------------------------------
UserTest: test: A given user should not be valid if first name starts with a lower case letter. 
------------------------------------------------------------------------------------------------
  [1m[35mUser Load (1.1ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (1.0ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.5ms)[0m  ROLLBACK
  [1m[36m (0.4ms)[0m  [1mBEGIN[0m
----------------------------------------------------------------------
UserTest: test: A given user should not be valid if last name is nil. 
----------------------------------------------------------------------
  [1m[35mUser Load (0.8ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (0.9ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.4ms)[0m  ROLLBACK
  [1m[36m (0.5ms)[0m  [1mBEGIN[0m
---------------------------------------------------------------------------
UserTest: test: A given user should not be valid if last name is too long. 
---------------------------------------------------------------------------
  [1m[35mUser Load (0.8ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (1.0ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.5ms)[0m  ROLLBACK
  [1m[36m (0.4ms)[0m  [1mBEGIN[0m
----------------------------------------------------------------------------
UserTest: test: A given user should not be valid if last name is too short. 
----------------------------------------------------------------------------
  [1m[35mUser Load (1.1ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (1.1ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.5ms)[0m  ROLLBACK
  [1m[36m (0.4ms)[0m  [1mBEGIN[0m
---------------------------------------------------------------------------------------------
UserTest: test: A given user should not be valid if login name has non-alphanumeric letters. 
---------------------------------------------------------------------------------------------
  [1m[35mUser Load (1.1ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (1.0ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'johns-276' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.4ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
-------------------------------------------------------------------------------
UserTest: test: A given user should not be valid if login name is a duplicate. 
-------------------------------------------------------------------------------
  [1m[35mUser Load (1.1ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36m (0.4ms)[0m  [1mSAVEPOINT active_record_1[0m
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'orstedma' LIMIT 1
  [1m[36m (0.4ms)[0m  [1mROLLBACK TO SAVEPOINT active_record_1[0m
  [1m[35mUser Exists (0.9ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'orstedma' LIMIT 1
  [1m[36m (0.4ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.4ms)[0m  BEGIN
-----------------------------------------------------------------------
UserTest: test: A given user should not be valid if login name is nil. 
-----------------------------------------------------------------------
  [1m[36mUser Load (1.1ms)[0m  [1mSELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35mUser Exists (0.9ms)[0m  SELECT 1 AS one FROM "users" WHERE ("users"."login_name" IS NULL AND "users"."id" != 1) LIMIT 1
  [1m[36m (0.4ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
----------------------------------------------------------------------------
UserTest: test: A given user should not be valid if login name is too long. 
----------------------------------------------------------------------------
  [1m[36mUser Load (1.1ms)[0m  [1mSELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35mUser Exists (0.9ms)[0m  SELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'abbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb' AND "users"."id" != 1) LIMIT 1
  [1m[36m (0.4ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.4ms)[0m  BEGIN
-----------------------------------------------------------------------------
UserTest: test: A given user should not be valid if login name is too short. 
-----------------------------------------------------------------------------
  [1m[36mUser Load (1.0ms)[0m  [1mSELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35mUser Exists (0.8ms)[0m  SELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'aaaaa' AND "users"."id" != 1) LIMIT 1
  [1m[36m (0.4ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.4ms)[0m  BEGIN
---------------------------------------------------------------------------------------------
UserTest: test: A given user should not be valid if login name starts with a capital letter. 
---------------------------------------------------------------------------------------------
  [1m[36mUser Load (1.1ms)[0m  [1mSELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35mUser Exists (0.9ms)[0m  SELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'Johns276' AND "users"."id" != 1) LIMIT 1
  [1m[36m (0.5ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.4ms)[0m  BEGIN
------------------------------------------------------------------------------------
UserTest: test: A given user should require a start date if an end date is present. 
------------------------------------------------------------------------------------
  [1m[36mUser Load (1.1ms)[0m  [1mSELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35mUser Exists (0.9ms)[0m  SELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1
  [1m[36m (0.4ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.4ms)[0m  BEGIN
--------------------------------------------------------------------------------
UserTest: test: A given user should require an end date on or after start date. 
--------------------------------------------------------------------------------
  [1m[36mUser Load (0.9ms)[0m  [1mSELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35mUser Exists (1.0ms)[0m  SELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
----------------------------------------------------------------
UserTest: test: A given user should retrieve only valid phones. 
----------------------------------------------------------------
  [1m[36mUser Load (0.7ms)[0m  [1mSELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35mPhone Load (1.6ms)[0m  SELECT "phones".* FROM "phones" WHERE "phones"."user_id" = $1  [["user_id", 1]]
  [1m[36m (0.4ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.4ms)[0m  BEGIN
--------------------------------------------------------
UserTest: test: A new user should allow adding a phone. 
--------------------------------------------------------
  [1m[36m (0.5ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.5ms)[0m  BEGIN
------------------------------------------------------
UserTest: test: A new user should be valid initially. 
------------------------------------------------------
  [1m[36mUser Exists (0.9ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35m (0.3ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
---------------------------------------------------------------------
UserTest: test: A new user should not be valid if first name is nil. 
---------------------------------------------------------------------
  [1m[35mUser Exists (0.9ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.4ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
--------------------------------------------------------------------------
UserTest: test: A new user should not be valid if first name is too long. 
--------------------------------------------------------------------------
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35m (0.3ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
---------------------------------------------------------------------------
UserTest: test: A new user should not be valid if first name is too short. 
---------------------------------------------------------------------------
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.4ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
----------------------------------------------------------------------------------------------
UserTest: test: A new user should not be valid if first name starts with a lower case letter. 
----------------------------------------------------------------------------------------------
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35m (0.4ms)[0m  ROLLBACK
  [1m[36m (0.4ms)[0m  [1mBEGIN[0m
--------------------------------------------------------------------
UserTest: test: A new user should not be valid if last name is nil. 
--------------------------------------------------------------------
  [1m[35mUser Exists (0.8ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.4ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.4ms)[0m  BEGIN
-------------------------------------------------------------------------
UserTest: test: A new user should not be valid if last name is too long. 
-------------------------------------------------------------------------
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35m (0.4ms)[0m  ROLLBACK
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
--------------------------------------------------------------------------
UserTest: test: A new user should not be valid if last name is too short. 
--------------------------------------------------------------------------
  [1m[35mUser Exists (0.6ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
-------------------------------------------------------------------------------------------
UserTest: test: A new user should not be valid if login name has non-alphanumeric letters. 
-------------------------------------------------------------------------------------------
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'johns-276' LIMIT 1[0m
  [1m[35m (0.3ms)[0m  ROLLBACK
  [1m[36m (0.4ms)[0m  [1mBEGIN[0m
-----------------------------------------------------------------------------
UserTest: test: A new user should not be valid if login name is a duplicate. 
-----------------------------------------------------------------------------
  [1m[35m (0.3ms)[0m  SAVEPOINT active_record_1
  [1m[36mUser Exists (0.8ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'orstedma' LIMIT 1[0m
  [1m[35m (0.4ms)[0m  ROLLBACK TO SAVEPOINT active_record_1
  [1m[36mUser Exists (0.8ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'orstedma' LIMIT 1[0m
  [1m[35m (0.5ms)[0m  ROLLBACK
  [1m[36m (0.4ms)[0m  [1mBEGIN[0m
---------------------------------------------------------------------
UserTest: test: A new user should not be valid if login name is nil. 
---------------------------------------------------------------------
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.4ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
--------------------------------------------------------------------------
UserTest: test: A new user should not be valid if login name is too long. 
--------------------------------------------------------------------------
  [1m[36mUser Exists (5.6ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'abbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb' LIMIT 1[0m
  [1m[35m (0.4ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
---------------------------------------------------------------------------
UserTest: test: A new user should not be valid if login name is too short. 
---------------------------------------------------------------------------
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'aaaaa' LIMIT 1
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
-------------------------------------------------------------------------------------------
UserTest: test: A new user should not be valid if login name starts with a capital letter. 
-------------------------------------------------------------------------------------------
  [1m[36mUser Exists (0.8ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'Johns276' LIMIT 1[0m
  [1m[35m (0.3ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
----------------------------------------------------------------------------------
UserTest: test: A new user should require a start date if an end date is present. 
----------------------------------------------------------------------------------
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
------------------------------------------------------------------------------
UserTest: test: A new user should require an end date on or after start date. 
------------------------------------------------------------------------------
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35m (0.3ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
---------------------------------------------------------------------
UserTest: test: User should allow first_name to be set to "Charles". 
---------------------------------------------------------------------
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35m (0.3ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
--------------------------------------------------------------------------
UserTest: test: User should ensure first_name has a length of at least 2. 
--------------------------------------------------------------------------
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.6ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.6ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.6ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.2ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.2ms)[0m  BEGIN
---------------------------------------------------------------------------
UserTest: test: User should ensure first_name has a length of at most 254. 
---------------------------------------------------------------------------
  [1m[36mUser Exists (0.6ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.5ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.6ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.6ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.6ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35m (0.3ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
-------------------------------------------------------------------------
UserTest: test: User should ensure last_name has a length of at least 2. 
-------------------------------------------------------------------------
  [1m[35mUser Exists (0.8ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.6ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.8ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (6.6ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
--------------------------------------------------------------------------
UserTest: test: User should ensure last_name has a length of at most 254. 
--------------------------------------------------------------------------
  [1m[36mUser Exists (0.5ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35m (0.2ms)[0m  ROLLBACK
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
--------------------------------------------------------------------------
UserTest: test: User should ensure login_name has a length of at least 6. 
--------------------------------------------------------------------------
  [1m[35mUser Exists (0.8ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxx' LIMIT 1
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxx' LIMIT 1[0m
  [1m[35mUser Exists (0.6ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxx' LIMIT 1
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxx' LIMIT 1[0m
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxx' LIMIT 1
  [1m[36m (0.2ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
---------------------------------------------------------------------------
UserTest: test: User should ensure login_name has a length of at most 254. 
---------------------------------------------------------------------------
  [1m[36mUser Exists (0.5ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' LIMIT 1[0m
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' LIMIT 1
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' LIMIT 1[0m
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' LIMIT 1
  [1m[36mUser Exists (0.8ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' LIMIT 1[0m
  [1m[35m (0.4ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
--------------------------------------------------------------------------
UserTest: test: User should ensure nick_name has a length of at most 254. 
--------------------------------------------------------------------------
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.8ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.4ms)[0m  BEGIN
-------------------------------------------------
UserTest: test: User should have many locations. 
-------------------------------------------------
  [1m[36m (0.4ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.4ms)[0m  BEGIN
----------------------------------------------
UserTest: test: User should have many phones. 
----------------------------------------------
  [1m[36m (0.4ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.4ms)[0m  BEGIN
-------------------------------------------------------------------------
UserTest: test: User should not allow first_name to be set to "charles". 
-------------------------------------------------------------------------
  [1m[36mUser Exists (10.0ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.4ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
--------------------------------------------------------------------------------
UserTest: test: User should require case sensitive unique value for login_name. 
--------------------------------------------------------------------------------
  [1m[36mUser Load (0.9ms)[0m  [1mSELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35mUser Exists (0.8ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'orstedma' LIMIT 1
  [1m[36mUser Exists (0.9ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'orstedma' LIMIT 1[0m
  [1m[35m (0.4ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
----------------------------------------------------------
UserTest: test: User should require first_name to be set. 
----------------------------------------------------------
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.8ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35m (0.3ms)[0m  ROLLBACK
  [1m[36m (0.4ms)[0m  [1mBEGIN[0m
---------------------------------------------------------
UserTest: test: User should require last_name to be set. 
---------------------------------------------------------
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35m (0.3ms)[0m  ROLLBACK
  [1m[36m (0.4ms)[0m  [1mBEGIN[0m
----------------------------------------------------------
UserTest: test: User should require login_name to be set. 
----------------------------------------------------------
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35m (0.4ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
----------------------------------------------------------
UserTest: test: User should require start_date to be set. 
----------------------------------------------------------
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.5ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35m (0.2ms)[0m  ROLLBACK
  [1m[36m (129.2ms)[0m  [1mDROP DATABASE IF EXISTS "ritrack_test"[0m
  [1m[35m (690.9ms)[0m  CREATE DATABASE "ritrack_test" ENCODING = 'unicode'
  [1m[36mSQL (3.0ms)[0m  [1mCREATE EXTENSION IF NOT EXISTS "plpgsql"[0m
  [1m[35m (93.3ms)[0m  CREATE TABLE "locations" ("id" serial primary key, "company" character varying(255), "organization" character varying(255), "address1" character varying(255), "address2" character varying(255), "city" character varying(255), "state" character varying(255), "zip" character varying(255), "country" character varying(255), "user_id" integer, "created_at" timestamp, "updated_at" timestamp) 
  [1m[36m (49.7ms)[0m  [1mCREATE INDEX "index_locations_on_user_id" ON "locations" USING btree ("user_id")[0m
  [1m[35m (80.5ms)[0m  CREATE TABLE "phones" ("id" serial primary key, "number" character varying(255), "tag" character varying(255), "user_id" integer, "created_at" timestamp, "updated_at" timestamp) 
  [1m[36m (41.5ms)[0m  [1mCREATE INDEX "index_phones_on_number" ON "phones" USING btree ("number")[0m
  [1m[35m (44.7ms)[0m  CREATE INDEX "index_phones_on_user_id" ON "phones" USING btree ("user_id")
  [1m[36m (46.8ms)[0m  [1mCREATE TABLE "ticket_observers" ("id" serial primary key, "user_id" integer, "ticket_id" integer, "start_date" date, "end_date" date, "created_at" timestamp, "updated_at" timestamp) [0m
  [1m[35m (46.5ms)[0m  CREATE INDEX "index_ticket_observers_on_ticket_id" ON "ticket_observers" USING btree ("ticket_id")
  [1m[36m (45.6ms)[0m  [1mCREATE INDEX "index_ticket_observers_on_user_id" ON "ticket_observers" USING btree ("user_id")[0m
  [1m[35m (88.2ms)[0m  CREATE TABLE "ticket_queues" ("id" serial primary key, "name" character varying(255), "description" character varying(255), "url" character varying(255), "priority" integer, "default_due_in" integer, "start_date" date, "end_date" date, "created_at" timestamp, "updated_at" timestamp) 
  [1m[36m (80.0ms)[0m  [1mCREATE TABLE "ticket_responses" ("id" serial primary key, "body" text, "response_sent" timestamp, "ticket_id" integer, "created_at" timestamp, "updated_at" timestamp) [0m
  [1m[35m (46.0ms)[0m  CREATE INDEX "index_ticket_responses_on_ticket_id" ON "ticket_responses" USING btree ("ticket_id")
  [1m[36m (89.7ms)[0m  [1mCREATE TABLE "tickets" ("id" serial primary key, "subject" character varying(255), "status" character varying(255), "priority" integer, "start_date" timestamp, "end_date" timestamp, "due_date" timestamp, "user_id" integer, "ticket_queue_id" integer, "created_at" timestamp, "updated_at" timestamp, "requestor_id" integer) [0m
  [1m[35m (46.0ms)[0m  CREATE INDEX "index_tickets_on_requestor_id" ON "tickets" USING btree ("requestor_id")
  [1m[36m (44.7ms)[0m  [1mCREATE INDEX "index_tickets_on_ticket_queue_id" ON "tickets" USING btree ("ticket_queue_id")[0m
  [1m[35m (43.4ms)[0m  CREATE INDEX "index_tickets_on_user_id" ON "tickets" USING btree ("user_id")
  [1m[36m (80.1ms)[0m  [1mCREATE TABLE "users" ("id" serial primary key, "first_name" character varying(255), "last_name" character varying(255), "nick_name" character varying(255), "login_name" character varying(255), "notes" text, "created_at" timestamp, "updated_at" timestamp, "start_date" date, "end_date" date, "is_admin" boolean, "can_login" boolean, "user_by_email" boolean) [0m
  [1m[35m (10.7ms)[0m  CREATE TABLE "schema_migrations" ("version" character varying(255) NOT NULL) 
  [1m[36m (45.9ms)[0m  [1mCREATE UNIQUE INDEX "unique_schema_migrations" ON "schema_migrations" ("version")[0m
  [1m[35m (1.0ms)[0m  SELECT version FROM "schema_migrations"
  [1m[36m (5.7ms)[0m  [1mINSERT INTO "schema_migrations" (version) VALUES ('20130828184853')[0m
  [1m[35m (8.1ms)[0m  INSERT INTO "schema_migrations" (version) VALUES ('20130826182256')
  [1m[36m (7.9ms)[0m  [1mINSERT INTO "schema_migrations" (version) VALUES ('20130827150753')[0m
  [1m[35m (8.0ms)[0m  INSERT INTO "schema_migrations" (version) VALUES ('20130821233827')
  [1m[36m (8.0ms)[0m  [1mINSERT INTO "schema_migrations" (version) VALUES ('20130826154055')[0m
  [1m[35m (8.0ms)[0m  INSERT INTO "schema_migrations" (version) VALUES ('20130811212425')
  [1m[36m (7.9ms)[0m  [1mINSERT INTO "schema_migrations" (version) VALUES ('20130816142047')[0m
  [1m[35m (7.9ms)[0m  INSERT INTO "schema_migrations" (version) VALUES ('20130811195620')
  [1m[36m (7.9ms)[0m  [1mINSERT INTO "schema_migrations" (version) VALUES ('20130826183525')[0m
  [1m[35m (8.0ms)[0m  INSERT INTO "schema_migrations" (version) VALUES ('20130811193133')
  [1m[36m (7.9ms)[0m  [1mINSERT INTO "schema_migrations" (version) VALUES ('20130827135409')[0m
  [1m[35m (7.9ms)[0m  INSERT INTO "schema_migrations" (version) VALUES ('20130825220004')
  [1m[36m (8.0ms)[0m  [1mINSERT INTO "schema_migrations" (version) VALUES ('20130811195557')[0m
  [1m[35mActiveRecord::SchemaMigration Load (1.1ms)[0m  SELECT "schema_migrations".* FROM "schema_migrations"
  [1m[36mActiveRecord::SchemaMigration Load (0.6ms)[0m  [1mSELECT "schema_migrations".* FROM "schema_migrations"[0m
  [1m[35m (9.9ms)[0m  ALTER TABLE "locations" DISABLE TRIGGER ALL;ALTER TABLE "phones" DISABLE TRIGGER ALL;ALTER TABLE "ticket_observers" DISABLE TRIGGER ALL;ALTER TABLE "ticket_queues" DISABLE TRIGGER ALL;ALTER TABLE "ticket_responses" DISABLE TRIGGER ALL;ALTER TABLE "tickets" DISABLE TRIGGER ALL;ALTER TABLE "users" DISABLE TRIGGER ALL;ALTER TABLE "schema_migrations" DISABLE TRIGGER ALL
  [1m[36m (0.5ms)[0m  [1mBEGIN[0m
  [1m[35mFixture Delete (0.7ms)[0m  DELETE FROM "locations"
  [1m[36mFixture Insert (1.3ms)[0m  [1mINSERT INTO "locations" ("id", "company", "organization", "address1", "address2", "city", "state", "zip", "country", "user_id", "created_at", "updated_at") VALUES (1, 'NPR', 'News Desk', '1444 First Street', 'Floor 15', 'Washington', 'DC', '10270', 'US', 1, '2013-08-28 18:52:15', '2013-08-28 18:52:15')[0m
  [1m[35mFixture Insert (0.9ms)[0m  INSERT INTO "locations" ("company", "organization", "address1", "address2", "city", "state", "zip", "country", "user_id", "created_at", "updated_at", "id") VALUES ('NPR', 'Scotland Desk', '63 Park Avenue', 'Suite 102', 'Chicago', 'IL', '69755', 'US', 1, '2013-08-28 18:52:15', '2013-08-28 18:52:15', 298486374)
  [1m[36mFixture Delete (1.0ms)[0m  [1mDELETE FROM "users"[0m
  [1m[35mFixture Insert (1.1ms)[0m  INSERT INTO "users" ("id", "first_name", "last_name", "nick_name", "login_name", "start_date", "end_date", "notes", "created_at", "updated_at") VALUES (1, 'Michael', 'Orsted', 'Mike', 'orstedma', '2012-02-04', NULL, 'This user lives in Chicago.', '2013-08-28 18:52:15', '2013-08-28 18:52:15')
  [1m[36mFixture Insert (0.6ms)[0m  [1mINSERT INTO "users" ("id", "first_name", "last_name", "nick_name", "login_name", "start_date", "end_date", "notes", "created_at", "updated_at") VALUES (2, 'Frederick', 'Free-Loader', 'Frederick', 'freelofw', '2012-03-04', NULL, 'This user is completely useless', '2013-08-28 18:52:15', '2013-08-28 18:52:15')[0m
  [1m[35mFixture Insert (0.8ms)[0m  INSERT INTO "users" ("id", "first_name", "last_name", "nick_name", "login_name", "start_date", "end_date", "notes", "created_at", "updated_at") VALUES (3, 'Michael', 'Winstead', 'Mike', 'winstem', '2012-02-04', '2013-08-12', 'This user lives in New York. This user is disabled in the system.', '2013-08-28 18:52:15', '2013-08-28 18:52:15')
  [1m[36mFixture Insert (0.8ms)[0m  [1mINSERT INTO "users" ("id", "first_name", "last_name", "nick_name", "login_name", "start_date", "end_date", "notes", "created_at", "updated_at") VALUES (4, 'Allison', 'Wilson', 'Alli', 'wilsona', '2012-03-04', NULL, 'Electrical engineer.', '2013-08-28 18:52:15', '2013-08-28 18:52:15')[0m
  [1m[35mFixture Delete (0.7ms)[0m  DELETE FROM "ticket_observers"
  [1m[36mFixture Insert (1.4ms)[0m  [1mINSERT INTO "ticket_observers" ("user_id", "ticket_id", "start_date", "end_date", "created_at", "updated_at", "id") VALUES (NULL, NULL, '2013-08-28', '2013-08-28', '2013-08-28 18:52:15', '2013-08-28 18:52:15', 980190962)[0m
  [1m[35mFixture Insert (0.6ms)[0m  INSERT INTO "ticket_observers" ("user_id", "ticket_id", "start_date", "end_date", "created_at", "updated_at", "id") VALUES (NULL, NULL, '2013-08-28', '2013-08-28', '2013-08-28 18:52:15', '2013-08-28 18:52:15', 298486374)
  [1m[36mFixture Delete (1.0ms)[0m  [1mDELETE FROM "ticket_responses"[0m
  [1m[35mFixture Insert (1.2ms)[0m  INSERT INTO "ticket_responses" ("id", "body", "response_sent", "ticket_id", "created_at", "updated_at") VALUES (1, 'This is my first response to filling hard drives', '2013-08-26 13:35:25.000000', 1, '2013-08-28 18:52:15', '2013-08-28 18:52:15')
  [1m[36mFixture Insert (0.8ms)[0m  [1mINSERT INTO "ticket_responses" ("id", "body", "response_sent", "ticket_id", "created_at", "updated_at") VALUES (2, 'MyText', '2013-08-26 13:35:25.000000', 1, '2013-08-28 18:52:15', '2013-08-28 18:52:15')[0m
  [1m[35mFixture Delete (1.0ms)[0m  DELETE FROM "ticket_queues"
  [1m[36mFixture Insert (1.1ms)[0m  [1mINSERT INTO "ticket_queues" ("id", "name", "description", "url", "priority", "default_due_in", "start_date", "end_date", "created_at", "updated_at") VALUES (1, 'Queue1', 'Ticket queue 1', 'mydomain.com', 1, 1, '2013-08-26', NULL, '2013-08-28 18:52:15', '2013-08-28 18:52:15')[0m
  [1m[35mFixture Insert (0.9ms)[0m  INSERT INTO "ticket_queues" ("id", "name", "description", "url", "priority", "default_due_in", "start_date", "end_date", "created_at", "updated_at") VALUES (2, 'Queue2', 'Ticket queue 2', 'mydomain.com', 1, 1, '2013-08-26', NULL, '2013-08-28 18:52:15', '2013-08-28 18:52:15')
  [1m[36mFixture Delete (1.1ms)[0m  [1mDELETE FROM "phones"[0m
  [1m[35mFixture Insert (1.2ms)[0m  INSERT INTO "phones" ("id", "number", "tag", "user_id", "created_at", "updated_at") VALUES (1, '(211) 234-1111', 'Office', 1, '2013-08-28 18:52:15', '2013-08-28 18:52:15')
  [1m[36mFixture Insert (0.9ms)[0m  [1mINSERT INTO "phones" ("id", "number", "tag", "user_id", "created_at", "updated_at") VALUES (2, '(222) 345-2222', 'Home', 1, '2013-08-28 18:52:15', '2013-08-28 18:52:15')[0m
  [1m[35mFixture Insert (0.7ms)[0m  INSERT INTO "phones" ("id", "number", "tag", "user_id", "created_at", "updated_at") VALUES (3, '(333) 456-3333', 'Mobile', 1, '2013-08-28 18:52:15', '2013-08-28 18:52:15')
  [1m[36mFixture Insert (0.8ms)[0m  [1mINSERT INTO "phones" ("id", "number", "tag", "user_id", "created_at", "updated_at") VALUES (4, '(444) 567-4444', 'Pager', 1, '2013-08-28 18:52:15', '2013-08-28 18:52:15')[0m
  [1m[35mFixture Insert (0.7ms)[0m  INSERT INTO "phones" ("id", "number", "tag", "user_id", "created_at", "updated_at") VALUES (5, '(555) 678-5555', 'Mobile', 1, '2013-08-28 18:52:15', '2013-08-28 18:52:15')
  [1m[36mFixture Insert (0.7ms)[0m  [1mINSERT INTO "phones" ("id", "number", "tag", "user_id", "created_at", "updated_at") VALUES (6, '(666) 789-6666', 'Mobile', 1, '2013-08-28 18:52:15', '2013-08-28 18:52:15')[0m
  [1m[35mFixture Delete (1.3ms)[0m  DELETE FROM "tickets"
  [1m[36mFixture Insert (1.5ms)[0m  [1mINSERT INTO "tickets" ("id", "subject", "status", "priority", "start_date", "end_date", "due_date", "user_id", "ticket_queue_id", "created_at", "updated_at") VALUES (1, 'Jobs filling hard disks completely', 'New', 1, '2013-08-26 13:22:56.000000', NULL, '2013-08-26 13:22:56.000000', 1, 1, '2013-08-28 18:52:15', '2013-08-28 18:52:15')[0m
  [1m[35mFixture Insert (1.0ms)[0m  INSERT INTO "tickets" ("id", "subject", "status", "priority", "start_date", "end_date", "due_date", "user_id", "ticket_queue_id", "created_at", "updated_at") VALUES (2, 'Hard drive failing. Replacement requested.', 'Opened', 1, '2013-08-26 13:22:56.000000', NULL, '2013-09-26 13:22:56.000000', 1, 1, '2013-08-28 18:52:15', '2013-08-28 18:52:15')
  [1m[36m (13.2ms)[0m  [1mCOMMIT[0m
  [1m[35m (1.0ms)[0m  ALTER TABLE "locations" ENABLE TRIGGER ALL;ALTER TABLE "phones" ENABLE TRIGGER ALL;ALTER TABLE "ticket_observers" ENABLE TRIGGER ALL;ALTER TABLE "ticket_queues" ENABLE TRIGGER ALL;ALTER TABLE "ticket_responses" ENABLE TRIGGER ALL;ALTER TABLE "tickets" ENABLE TRIGGER ALL;ALTER TABLE "users" ENABLE TRIGGER ALL;ALTER TABLE "schema_migrations" ENABLE TRIGGER ALL
  [1m[36m (0.4ms)[0m  [1mBEGIN[0m
--------------------------------------------------------------------------------------------------------
LocationTest: test: A given Location should not be valid if adddress2 is specified and address1 is not. 
--------------------------------------------------------------------------------------------------------
  [1m[35mLocation Load (1.8ms)[0m  SELECT "locations".* FROM "locations" ORDER BY "locations"."id" ASC LIMIT 1
  [1m[36m (0.5ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
------------------------------------------------------------------------------------------------------
LocationTest: test: A given Location should not be valid if company is specified and address1 is not. 
------------------------------------------------------------------------------------------------------
  [1m[36mLocation Load (0.9ms)[0m  [1mSELECT "locations".* FROM "locations" ORDER BY "locations"."id" ASC LIMIT 1[0m
  [1m[35m (0.5ms)[0m  ROLLBACK
  [1m[36m (0.4ms)[0m  [1mBEGIN[0m
--------------------------------------------------------------------------------------------------
LocationTest: test: A given Location should not be valid if company is specified and city is not. 
--------------------------------------------------------------------------------------------------
  [1m[35mLocation Load (1.1ms)[0m  SELECT "locations".* FROM "locations" ORDER BY "locations"."id" ASC LIMIT 1
  [1m[36m (0.5ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.4ms)[0m  BEGIN
---------------------------------------------------------------------------------------------------
LocationTest: test: A given Location should not be valid if company is specified and state is not. 
---------------------------------------------------------------------------------------------------
  [1m[36mLocation Load (1.1ms)[0m  [1mSELECT "locations".* FROM "locations" ORDER BY "locations"."id" ASC LIMIT 1[0m
  [1m[35m (0.4ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
-------------------------------------------------------------------------------------------------
LocationTest: test: A given Location should not be valid if company is specified and zip is not. 
-------------------------------------------------------------------------------------------------
  [1m[35mLocation Load (1.1ms)[0m  SELECT "locations".* FROM "locations" ORDER BY "locations"."id" ASC LIMIT 1
  [1m[36m (0.4ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
--------------------------------------------------------------------------------------------
LocationTest: test: A given Location should require a valid comany if comapny is specified. 
--------------------------------------------------------------------------------------------
  [1m[36mLocation Load (0.7ms)[0m  [1mSELECT "locations".* FROM "locations" ORDER BY "locations"."id" ASC LIMIT 1[0m
  [1m[35m (0.3ms)[0m  ROLLBACK
  [1m[36m (0.4ms)[0m  [1mBEGIN[0m
------------------------------------------------------------------------------------------------------
LocationTest: test: A new Location should not be valid if adddress2 is specified and address1 is not. 
------------------------------------------------------------------------------------------------------
  [1m[35m (0.4ms)[0m  ROLLBACK
  [1m[36m (0.4ms)[0m  [1mBEGIN[0m
----------------------------------------------------------------------------------------------------
LocationTest: test: A new Location should not be valid if company is specified and address1 is not. 
----------------------------------------------------------------------------------------------------
  [1m[35m (0.5ms)[0m  ROLLBACK
  [1m[36m (0.4ms)[0m  [1mBEGIN[0m
------------------------------------------------------------------------------------------------
LocationTest: test: A new Location should not be valid if company is specified and city is not. 
------------------------------------------------------------------------------------------------
  [1m[35m (0.5ms)[0m  ROLLBACK
  [1m[36m (0.4ms)[0m  [1mBEGIN[0m
-------------------------------------------------------------------------------------------------
LocationTest: test: A new Location should not be valid if company is specified and state is not. 
-------------------------------------------------------------------------------------------------
  [1m[35m (0.4ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
-----------------------------------------------------------------------------------------------
LocationTest: test: A new Location should not be valid if company is specified and zip is not. 
-----------------------------------------------------------------------------------------------
  [1m[35m (0.3ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
------------------------------------------------------------------------------------------
LocationTest: test: A new Location should require a valid comany if comapny is specified. 
------------------------------------------------------------------------------------------
  [1m[35m (0.3ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
---------------------------------------------------------------------------------------------
LocationTest: test: Location should allow company to be set to "American Telegraph Company". 
---------------------------------------------------------------------------------------------
  [1m[35m (0.5ms)[0m  ROLLBACK
  [1m[36m (0.4ms)[0m  [1mBEGIN[0m
-------------------------------------------------------------------------------------
LocationTest: test: Location should allow company to be set to "American Telegraph". 
-------------------------------------------------------------------------------------
  [1m[35m (0.4ms)[0m  ROLLBACK
  [1m[36m (0.5ms)[0m  [1mBEGIN[0m
---------------------------------------------------------------------------
LocationTest: test: Location should allow company to be set to "American". 
---------------------------------------------------------------------------
  [1m[35m (0.4ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
----------------------------------------------------------------------
LocationTest: test: Location should allow company to be set to "IBM". 
----------------------------------------------------------------------
  [1m[35m (0.4ms)[0m  ROLLBACK
  [1m[36m (0.4ms)[0m  [1mBEGIN[0m
--------------------------------------------------------------------
LocationTest: test: Location should allow zip to be set to "37122". 
--------------------------------------------------------------------
  [1m[35m (0.4ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
-------------------------------------------------------------------------
LocationTest: test: Location should allow zip to be set to "37122-4444". 
-------------------------------------------------------------------------
  [1m[35m (0.4ms)[0m  ROLLBACK
  [1m[36m (0.5ms)[0m  [1mBEGIN[0m
----------------------------------------------------
LocationTest: test: Location should belong to user. 
----------------------------------------------------
  [1m[35m (0.4ms)[0m  ROLLBACK
  [1m[36m (0.4ms)[0m  [1mBEGIN[0m
-------------------------------------------------------------------------------------------------
LocationTest: test: Location should not allow company to be set to "American Telegraph company". 
-------------------------------------------------------------------------------------------------
  [1m[35m (0.4ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
----------------------------------------------------------------------------
LocationTest: test: Location should not allow company to be set to "INTEL". 
----------------------------------------------------------------------------
  [1m[35m (0.4ms)[0m  ROLLBACK
  [1m[36m (0.4ms)[0m  [1mBEGIN[0m
----------------------------------------------------------------------------
LocationTest: test: Location should not allow zip to be set to "3712-4444". 
----------------------------------------------------------------------------
  [1m[35m (0.4ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
----------------------------------------------------------------------------
LocationTest: test: Location should not allow zip to be set to "37122-444". 
----------------------------------------------------------------------------
  [1m[35m (0.3ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
---------------------------------------------------------------
LocationTest: test: Location should require user_id to be set. 
---------------------------------------------------------------
  [1m[35m (0.3ms)[0m  ROLLBACK
  [1m[36m (0.4ms)[0m  [1mBEGIN[0m
----------------------------------------------------------
PhoneTest: test: A given phone should be initially valid. 
----------------------------------------------------------
  [1m[35mPhone Load (0.9ms)[0m  SELECT "phones".* FROM "phones" ORDER BY "phones"."id" ASC LIMIT 1
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.4ms)[0m  BEGIN
-----------------------------------------------------------------------------------------------------------
PhoneTest: test: A given phone should not be valid with a poorly formatted 10 digit North American number. 
-----------------------------------------------------------------------------------------------------------
  [1m[36mPhone Load (1.0ms)[0m  [1mSELECT "phones".* FROM "phones" ORDER BY "phones"."id" ASC LIMIT 1[0m
  [1m[35m (0.4ms)[0m  ROLLBACK
  [1m[36m (0.5ms)[0m  [1mBEGIN[0m
----------------------------------------------------------------------------------------------------------
PhoneTest: test: A given phone should not be valid with a poorly formatted 7 digit North American number. 
----------------------------------------------------------------------------------------------------------
  [1m[35mPhone Load (1.0ms)[0m  SELECT "phones".* FROM "phones" ORDER BY "phones"."id" ASC LIMIT 1
  [1m[36m (0.5ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.5ms)[0m  BEGIN
---------------------------------------------------------------------------------------
PhoneTest: test: A given phone should optionally be a valid  EPP international number. 
---------------------------------------------------------------------------------------
  [1m[36mPhone Load (1.1ms)[0m  [1mSELECT "phones".* FROM "phones" ORDER BY "phones"."id" ASC LIMIT 1[0m
  [1m[35m (0.6ms)[0m  ROLLBACK
  [1m[36m (0.5ms)[0m  [1mBEGIN[0m
-----------------------------------------------------------------------------------------------
PhoneTest: test: A given phone should optionally be a valid  ITU-T E.123 international number. 
-----------------------------------------------------------------------------------------------
  [1m[35mPhone Load (1.1ms)[0m  SELECT "phones".* FROM "phones" ORDER BY "phones"."id" ASC LIMIT 1
  [1m[36m (0.6ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.5ms)[0m  BEGIN
-------------------------------------------------------------------------------------------------
PhoneTest: test: A given phone should optionally be a valid North American number with 7 digits. 
-------------------------------------------------------------------------------------------------
  [1m[36mPhone Load (1.1ms)[0m  [1mSELECT "phones".* FROM "phones" ORDER BY "phones"."id" ASC LIMIT 1[0m
  [1m[35m (0.5ms)[0m  ROLLBACK
  [1m[36m (0.4ms)[0m  [1mBEGIN[0m
----------------------------------------------------------------------------------------------------------------------
PhoneTest: test: A given phone should optionally be a valid number with 10 digits with a leading 1 for long distance. 
----------------------------------------------------------------------------------------------------------------------
  [1m[35mPhone Load (1.0ms)[0m  SELECT "phones".* FROM "phones" ORDER BY "phones"."id" ASC LIMIT 1
  [1m[36m (0.5ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.5ms)[0m  BEGIN
-------------------------------------------------------------------------------------------------
PhoneTest: test: A given phone should optionally require a valid 10-digit North American number. 
-------------------------------------------------------------------------------------------------
  [1m[36mPhone Load (1.1ms)[0m  [1mSELECT "phones".* FROM "phones" ORDER BY "phones"."id" ASC LIMIT 1[0m
  [1m[35m (0.4ms)[0m  ROLLBACK
  [1m[36m (0.5ms)[0m  [1mBEGIN[0m
---------------------------------------------------------
PhoneTest: test: A given phone should require a user_id. 
---------------------------------------------------------
  [1m[35mPhone Load (1.1ms)[0m  SELECT "phones".* FROM "phones" ORDER BY "phones"."id" ASC LIMIT 1
  [1m[36m (0.5ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.5ms)[0m  BEGIN
------------------------------------------------------------
PhoneTest: test: A new phone should not be initially valid. 
------------------------------------------------------------
  [1m[36m (0.5ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.4ms)[0m  BEGIN
------------------------------------------------------------------------------
PhoneTest: test: A new phone should not be savable without being fully valid. 
------------------------------------------------------------------------------
  [1m[36m (0.4ms)[0m  [1mSAVEPOINT active_record_1[0m
  [1m[35mSQL (3.2ms)[0m  INSERT INTO "phones" ("created_at", "number", "tag", "updated_at", "user_id") VALUES ($1, $2, $3, $4, $5) RETURNING "id"  [["created_at", Wed, 28 Aug 2013 18:52:16 UTC +00:00], ["number", "345-6789"], ["tag", "Home"], ["updated_at", Wed, 28 Aug 2013 18:52:16 UTC +00:00], ["user_id", 100]]
  [1m[36m (0.2ms)[0m  [1mRELEASE SAVEPOINT active_record_1[0m
  [1m[35m (0.3ms)[0m  ROLLBACK
  [1m[36m (0.4ms)[0m  [1mBEGIN[0m
---------------------------------------------------------------------------------------------------------
PhoneTest: test: A new phone should not be valid with a poorly formatted 10 digit North American number. 
---------------------------------------------------------------------------------------------------------
  [1m[35m (0.4ms)[0m  ROLLBACK
  [1m[36m (0.4ms)[0m  [1mBEGIN[0m
--------------------------------------------------------------------------------------------------------
PhoneTest: test: A new phone should not be valid with a poorly formatted 7 digit North American number. 
--------------------------------------------------------------------------------------------------------
  [1m[35m (0.4ms)[0m  ROLLBACK
  [1m[36m (0.4ms)[0m  [1mBEGIN[0m
-----------------------------------------------------------------------------------------------
PhoneTest: test: A new phone should optionally be a valid North American number with 7 digits. 
-----------------------------------------------------------------------------------------------
  [1m[35m (0.3ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
--------------------------------------------------------------------------------------------------------------------
PhoneTest: test: A new phone should optionally be a valid number with 10 digits with a leading 1 for long distance. 
--------------------------------------------------------------------------------------------------------------------
  [1m[35m (0.3ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
-----------------------------------------------------------------------------------------------
PhoneTest: test: A new phone should optionally require a valid 10-digit North American number. 
-----------------------------------------------------------------------------------------------
  [1m[35m (0.4ms)[0m  ROLLBACK
  [1m[36m (0.5ms)[0m  [1mBEGIN[0m
----------------------------------------------
PhoneTest: test: Phone should belong to user. 
----------------------------------------------
  [1m[35m (0.4ms)[0m  ROLLBACK
  [1m[36m (0.4ms)[0m  [1mBEGIN[0m
------------------------------------------------------------------------------------------------
PhoneTest: test: Phone should ensure inclusion of tag in ["Home", "Office", "Mobile", "Pager"]. 
------------------------------------------------------------------------------------------------
  [1m[35m (0.4ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
------------------------------------------------------------------------
PhoneTest: test: Phone should ensure number has a length of at least 7. 
------------------------------------------------------------------------
  [1m[35m (0.4ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
------------------------------------------------------------------------
PhoneTest: test: Phone should ensure number has a length of at most 24. 
------------------------------------------------------------------------
  [1m[35m (0.2ms)[0m  ROLLBACK
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
--------------------------------------------------------
PhoneTest: test: Phone should require number to be set. 
--------------------------------------------------------
  [1m[35m (0.3ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
-----------------------------------------------------
PhoneTest: test: Phone should require tag to be set. 
-----------------------------------------------------
  [1m[35m (0.3ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
---------------------------------------------------------
PhoneTest: test: Phone should require user_id to be set. 
---------------------------------------------------------
  [1m[35m (0.3ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
---------------------------------------------------------------------------------------------------
TicketQueueTest: test: A given ticket queue should require a start date if an end date is present. 
---------------------------------------------------------------------------------------------------
  [1m[35mTicketQueue Load (0.9ms)[0m  SELECT "ticket_queues".* FROM "ticket_queues" ORDER BY "ticket_queues"."id" ASC LIMIT 1
  [1m[36mTicketQueue Exists (1.9ms)[0m  [1mSELECT 1 AS one FROM "ticket_queues" WHERE ("ticket_queues"."name" = 'Queue1' AND "ticket_queues"."id" != 1) LIMIT 1[0m
  [1m[35m (0.3ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
-----------------------------------------------------------------------------------------------
TicketQueueTest: test: A given ticket queue should require an end date on or after start date. 
-----------------------------------------------------------------------------------------------
  [1m[35mTicketQueue Load (0.8ms)[0m  SELECT "ticket_queues".* FROM "ticket_queues" ORDER BY "ticket_queues"."id" ASC LIMIT 1
  [1m[36mTicketQueue Exists (1.0ms)[0m  [1mSELECT 1 AS one FROM "ticket_queues" WHERE ("ticket_queues"."name" = 'Queue1' AND "ticket_queues"."id" != 1) LIMIT 1[0m
  [1m[35m (0.5ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
-------------------------------------------------------------
TicketQueueTest: test: TicketQueue should have many tickets. 
-------------------------------------------------------------
  [1m[35m (0.4ms)[0m  ROLLBACK
  [1m[36m (0.4ms)[0m  [1mBEGIN[0m
----------------------------------------------------------------------------------------
TicketQueueTest: test: TicketQueue should require case sensitive unique value for name. 
----------------------------------------------------------------------------------------
  [1m[35mTicketQueue Load (1.1ms)[0m  SELECT "ticket_queues".* FROM "ticket_queues" ORDER BY "ticket_queues"."id" ASC LIMIT 1
  [1m[36mTicketQueue Exists (0.9ms)[0m  [1mSELECT 1 AS one FROM "ticket_queues" WHERE "ticket_queues"."name" = 'Queue1' LIMIT 1[0m
  [1m[35mTicketQueue Exists (0.4ms)[0m  SELECT 1 AS one FROM "ticket_queues" WHERE "ticket_queues"."name" = 'Queue1' LIMIT 1
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
----------------------------------------------------------------------------
TicketQueueTest: test: TicketQueue should require default_due_in to be set. 
----------------------------------------------------------------------------
  [1m[36mTicketQueue Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "ticket_queues" WHERE "ticket_queues"."name" IS NULL LIMIT 1[0m
  [1m[35mTicketQueue Exists (0.6ms)[0m  SELECT 1 AS one FROM "ticket_queues" WHERE "ticket_queues"."name" IS NULL LIMIT 1
  [1m[36m (0.4ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.4ms)[0m  BEGIN
-------------------------------------------------------------------------
TicketQueueTest: test: TicketQueue should require description to be set. 
-------------------------------------------------------------------------
  [1m[36mTicketQueue Exists (0.9ms)[0m  [1mSELECT 1 AS one FROM "ticket_queues" WHERE "ticket_queues"."name" IS NULL LIMIT 1[0m
  [1m[35mTicketQueue Exists (0.4ms)[0m  SELECT 1 AS one FROM "ticket_queues" WHERE "ticket_queues"."name" IS NULL LIMIT 1
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
------------------------------------------------------------------
TicketQueueTest: test: TicketQueue should require name to be set. 
------------------------------------------------------------------
  [1m[36mTicketQueue Exists (0.5ms)[0m  [1mSELECT 1 AS one FROM "ticket_queues" WHERE "ticket_queues"."name" IS NULL LIMIT 1[0m
  [1m[35mTicketQueue Exists (0.8ms)[0m  SELECT 1 AS one FROM "ticket_queues" WHERE "ticket_queues"."name" IS NULL LIMIT 1
  [1m[36m (0.4ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
----------------------------------------------------------------------
TicketQueueTest: test: TicketQueue should require priority to be set. 
----------------------------------------------------------------------
  [1m[36mTicketQueue Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "ticket_queues" WHERE "ticket_queues"."name" IS NULL LIMIT 1[0m
  [1m[35mTicketQueue Exists (0.6ms)[0m  SELECT 1 AS one FROM "ticket_queues" WHERE "ticket_queues"."name" IS NULL LIMIT 1
  [1m[36m (0.4ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
------------------------------------------------------------------------
TicketQueueTest: test: TicketQueue should require start_date to be set. 
------------------------------------------------------------------------
  [1m[36mTicketQueue Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "ticket_queues" WHERE "ticket_queues"."name" IS NULL LIMIT 1[0m
  [1m[35mTicketQueue Exists (0.7ms)[0m  SELECT 1 AS one FROM "ticket_queues" WHERE "ticket_queues"."name" IS NULL LIMIT 1
  [1m[36m (0.4ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.4ms)[0m  BEGIN
-----------------------------------------------------------------
TicketQueueTest: test: TicketQueue should require url to be set. 
-----------------------------------------------------------------
  [1m[36mTicketQueue Exists (0.9ms)[0m  [1mSELECT 1 AS one FROM "ticket_queues" WHERE "ticket_queues"."name" IS NULL LIMIT 1[0m
  [1m[35mTicketQueue Exists (0.7ms)[0m  SELECT 1 AS one FROM "ticket_queues" WHERE "ticket_queues"."name" IS NULL LIMIT 1
  [1m[36m (0.5ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.4ms)[0m  BEGIN
---------------------------------------------------------------
TicketTest: test: Ticket should allow priority to be set to 1. 
---------------------------------------------------------------
  [1m[36m (0.5ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.4ms)[0m  BEGIN
----------------------------------------------------------------
TicketTest: test: Ticket should allow priority to be set to 25. 
----------------------------------------------------------------
  [1m[36m (0.2ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
--------------------------------------------------------
TicketTest: test: Ticket should belong to ticket_queue. 
--------------------------------------------------------
  [1m[36m (0.5ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.4ms)[0m  BEGIN
------------------------------------------------
TicketTest: test: Ticket should belong to user. 
------------------------------------------------
  [1m[36m (0.4ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.4ms)[0m  BEGIN
-------------------------------------------------------------------
TicketTest: test: Ticket should not allow priority to be set to 0. 
-------------------------------------------------------------------
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
---------------------------------------------------------------------
TicketTest: test: Ticket should not allow priority to be set to 1.5. 
---------------------------------------------------------------------
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
--------------------------------------------------------------------
TicketTest: test: Ticket should not allow priority to be set to 26. 
--------------------------------------------------------------------
  [1m[36m (0.4ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
------------------------------------------------------------------------
TicketTest: test: Ticket should only allow numeric values for priority. 
------------------------------------------------------------------------
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
------------------------------------------------------------
TicketTest: test: Ticket should require priority to be set. 
------------------------------------------------------------
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.2ms)[0m  BEGIN
--------------------------------------------------------------
TicketTest: test: Ticket should require start_date to be set. 
--------------------------------------------------------------
  [1m[36m (0.5ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.4ms)[0m  BEGIN
-----------------------------------------------------------
TicketTest: test: Ticket should require subject to be set. 
-----------------------------------------------------------
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
----------------------------------------------------------
UserTest: test: A given user should allow adding a phone. 
----------------------------------------------------------
  [1m[36mUser Load (1.0ms)[0m  [1mSELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35m (0.3ms)[0m  SAVEPOINT active_record_1
  [1m[36mSQL (0.9ms)[0m  [1mINSERT INTO "phones" ("created_at", "number", "tag", "updated_at", "user_id") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["created_at", Wed, 28 Aug 2013 18:52:16 UTC +00:00], ["number", "234-5678"], ["tag", "Home"], ["updated_at", Wed, 28 Aug 2013 18:52:16 UTC +00:00], ["user_id", 1]]
  [1m[35m (0.2ms)[0m  RELEASE SAVEPOINT active_record_1
  [1m[36m (0.2ms)[0m  [1mSAVEPOINT active_record_1[0m
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1
  [1m[36m (0.4ms)[0m  [1mRELEASE SAVEPOINT active_record_1[0m
  [1m[35m (1.3ms)[0m  SELECT COUNT(*) FROM "phones" WHERE "phones"."user_id" = $1  [["user_id", 1]]
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
---------------------------------------------------------------------------
UserTest: test: A given user should allow retrieval of user phone numbers. 
---------------------------------------------------------------------------
  [1m[36mUser Load (0.8ms)[0m  [1mSELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35m (0.8ms)[0m  SELECT COUNT(*) FROM "phones" WHERE "phones"."user_id" = $1  [["user_id", 1]]
  [1m[36m (0.5ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.4ms)[0m  BEGIN
--------------------------------------------------------
UserTest: test: A given user should be valid initially. 
--------------------------------------------------------
  [1m[36mUser Load (1.1ms)[0m  [1mSELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35mUser Exists (0.9ms)[0m  SELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1
  [1m[36m (0.5ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.5ms)[0m  BEGIN
-----------------------------------------------------------------------
UserTest: test: A given user should not be valid if first name is nil. 
-----------------------------------------------------------------------
  [1m[36mUser Load (1.1ms)[0m  [1mSELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35mUser Exists (0.8ms)[0m  SELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1
  [1m[36m (0.4ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
----------------------------------------------------------------------------
UserTest: test: A given user should not be valid if first name is too long. 
----------------------------------------------------------------------------
  [1m[36mUser Load (1.1ms)[0m  [1mSELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35mUser Exists (0.8ms)[0m  SELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1
  [1m[36m (0.5ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.4ms)[0m  BEGIN
-----------------------------------------------------------------------------
UserTest: test: A given user should not be valid if first name is too short. 
-----------------------------------------------------------------------------
  [1m[36mUser Load (1.1ms)[0m  [1mSELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35mUser Exists (1.0ms)[0m  SELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1
  [1m[36m (0.5ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.4ms)[0m  BEGIN
------------------------------------------------------------------------------------------------
UserTest: test: A given user should not be valid if first name starts with a lower case letter. 
------------------------------------------------------------------------------------------------
  [1m[36mUser Load (1.1ms)[0m  [1mSELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35mUser Exists (1.0ms)[0m  SELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1
  [1m[36m (0.5ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.5ms)[0m  BEGIN
----------------------------------------------------------------------
UserTest: test: A given user should not be valid if last name is nil. 
----------------------------------------------------------------------
  [1m[36mUser Load (1.1ms)[0m  [1mSELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35mUser Exists (0.8ms)[0m  SELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1
  [1m[36m (0.4ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
---------------------------------------------------------------------------
UserTest: test: A given user should not be valid if last name is too long. 
---------------------------------------------------------------------------
  [1m[36mUser Load (1.1ms)[0m  [1mSELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1
  [1m[36m (0.4ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
----------------------------------------------------------------------------
UserTest: test: A given user should not be valid if last name is too short. 
----------------------------------------------------------------------------
  [1m[36mUser Load (1.0ms)[0m  [1mSELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35mUser Exists (1.0ms)[0m  SELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1
  [1m[36m (0.4ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
---------------------------------------------------------------------------------------------
UserTest: test: A given user should not be valid if login name has non-alphanumeric letters. 
---------------------------------------------------------------------------------------------
  [1m[36mUser Load (1.1ms)[0m  [1mSELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35mUser Exists (0.9ms)[0m  SELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'johns-276' AND "users"."id" != 1) LIMIT 1
  [1m[36m (0.4ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.4ms)[0m  BEGIN
-------------------------------------------------------------------------------
UserTest: test: A given user should not be valid if login name is a duplicate. 
-------------------------------------------------------------------------------
  [1m[36mUser Load (1.1ms)[0m  [1mSELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1[0m
  [1m[35m (0.4ms)[0m  SAVEPOINT active_record_1
  [1m[36mUser Exists (0.9ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'orstedma' LIMIT 1[0m
  [1m[35m (0.5ms)[0m  ROLLBACK TO SAVEPOINT active_record_1
  [1m[36mUser Exists (1.0ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'orstedma' LIMIT 1[0m
  [1m[35m (0.5ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
-----------------------------------------------------------------------
UserTest: test: A given user should not be valid if login name is nil. 
-----------------------------------------------------------------------
  [1m[35mUser Load (1.1ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (1.0ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" IS NULL AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.4ms)[0m  ROLLBACK
  [1m[36m (0.5ms)[0m  [1mBEGIN[0m
----------------------------------------------------------------------------
UserTest: test: A given user should not be valid if login name is too long. 
----------------------------------------------------------------------------
  [1m[35mUser Load (1.1ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (1.0ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'abbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.5ms)[0m  ROLLBACK
  [1m[36m (0.4ms)[0m  [1mBEGIN[0m
-----------------------------------------------------------------------------
UserTest: test: A given user should not be valid if login name is too short. 
-----------------------------------------------------------------------------
  [1m[35mUser Load (1.1ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (1.0ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'aaaaa' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.5ms)[0m  ROLLBACK
  [1m[36m (0.4ms)[0m  [1mBEGIN[0m
---------------------------------------------------------------------------------------------
UserTest: test: A given user should not be valid if login name starts with a capital letter. 
---------------------------------------------------------------------------------------------
  [1m[35mUser Load (1.1ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (0.9ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'Johns276' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.4ms)[0m  ROLLBACK
  [1m[36m (0.4ms)[0m  [1mBEGIN[0m
------------------------------------------------------------------------------------
UserTest: test: A given user should require a start date if an end date is present. 
------------------------------------------------------------------------------------
  [1m[35mUser Load (0.9ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (0.9ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.5ms)[0m  ROLLBACK
  [1m[36m (0.4ms)[0m  [1mBEGIN[0m
--------------------------------------------------------------------------------
UserTest: test: A given user should require an end date on or after start date. 
--------------------------------------------------------------------------------
  [1m[35mUser Load (1.1ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (0.9ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE ("users"."login_name" = 'orstedma' AND "users"."id" != 1) LIMIT 1[0m
  [1m[35m (0.4ms)[0m  ROLLBACK
  [1m[36m (0.4ms)[0m  [1mBEGIN[0m
----------------------------------------------------------------
UserTest: test: A given user should retrieve only valid phones. 
----------------------------------------------------------------
  [1m[35mUser Load (1.1ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mPhone Load (1.6ms)[0m  [1mSELECT "phones".* FROM "phones" WHERE "phones"."user_id" = $1[0m  [["user_id", 1]]
  [1m[35m (0.5ms)[0m  ROLLBACK
  [1m[36m (0.5ms)[0m  [1mBEGIN[0m
--------------------------------------------------------
UserTest: test: A new user should allow adding a phone. 
--------------------------------------------------------
  [1m[35m (0.5ms)[0m  ROLLBACK
  [1m[36m (0.4ms)[0m  [1mBEGIN[0m
------------------------------------------------------
UserTest: test: A new user should be valid initially. 
------------------------------------------------------
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.5ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
---------------------------------------------------------------------
UserTest: test: A new user should not be valid if first name is nil. 
---------------------------------------------------------------------
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35m (0.3ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
--------------------------------------------------------------------------
UserTest: test: A new user should not be valid if first name is too long. 
--------------------------------------------------------------------------
  [1m[35mUser Exists (0.9ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
---------------------------------------------------------------------------
UserTest: test: A new user should not be valid if first name is too short. 
---------------------------------------------------------------------------
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35m (0.4ms)[0m  ROLLBACK
  [1m[36m (0.4ms)[0m  [1mBEGIN[0m
----------------------------------------------------------------------------------------------
UserTest: test: A new user should not be valid if first name starts with a lower case letter. 
----------------------------------------------------------------------------------------------
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.5ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
--------------------------------------------------------------------
UserTest: test: A new user should not be valid if last name is nil. 
--------------------------------------------------------------------
  [1m[36mUser Exists (0.5ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35m (0.4ms)[0m  ROLLBACK
  [1m[36m (0.4ms)[0m  [1mBEGIN[0m
-------------------------------------------------------------------------
UserTest: test: A new user should not be valid if last name is too long. 
-------------------------------------------------------------------------
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.4ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.4ms)[0m  BEGIN
--------------------------------------------------------------------------
UserTest: test: A new user should not be valid if last name is too short. 
--------------------------------------------------------------------------
  [1m[36mUser Exists (0.8ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35m (0.3ms)[0m  ROLLBACK
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
-------------------------------------------------------------------------------------------
UserTest: test: A new user should not be valid if login name has non-alphanumeric letters. 
-------------------------------------------------------------------------------------------
  [1m[35mUser Exists (0.6ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'johns-276' LIMIT 1
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
-----------------------------------------------------------------------------
UserTest: test: A new user should not be valid if login name is a duplicate. 
-----------------------------------------------------------------------------
  [1m[36m (0.2ms)[0m  [1mSAVEPOINT active_record_1[0m
  [1m[35mUser Exists (0.5ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'orstedma' LIMIT 1
  [1m[36m (0.3ms)[0m  [1mROLLBACK TO SAVEPOINT active_record_1[0m
  [1m[35mUser Exists (0.6ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'orstedma' LIMIT 1
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
---------------------------------------------------------------------
UserTest: test: A new user should not be valid if login name is nil. 
---------------------------------------------------------------------
  [1m[36mUser Exists (0.9ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35m (0.3ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
--------------------------------------------------------------------------
UserTest: test: A new user should not be valid if login name is too long. 
--------------------------------------------------------------------------
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'abbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb' LIMIT 1
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
---------------------------------------------------------------------------
UserTest: test: A new user should not be valid if login name is too short. 
---------------------------------------------------------------------------
  [1m[36mUser Exists (0.8ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'aaaaa' LIMIT 1[0m
  [1m[35m (0.4ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
-------------------------------------------------------------------------------------------
UserTest: test: A new user should not be valid if login name starts with a capital letter. 
-------------------------------------------------------------------------------------------
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'Johns276' LIMIT 1
  [1m[36m (0.5ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
----------------------------------------------------------------------------------
UserTest: test: A new user should require a start date if an end date is present. 
----------------------------------------------------------------------------------
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35m (0.3ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
------------------------------------------------------------------------------
UserTest: test: A new user should require an end date on or after start date. 
------------------------------------------------------------------------------
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.5ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
---------------------------------------------------------------------
UserTest: test: User should allow first_name to be set to "Charles". 
---------------------------------------------------------------------
  [1m[36mUser Exists (0.6ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.8ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.4ms)[0m  BEGIN
--------------------------------------------------------------------------
UserTest: test: User should ensure first_name has a length of at least 2. 
--------------------------------------------------------------------------
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.6ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35m (0.5ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
---------------------------------------------------------------------------
UserTest: test: User should ensure first_name has a length of at most 254. 
---------------------------------------------------------------------------
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.5ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
-------------------------------------------------------------------------
UserTest: test: User should ensure last_name has a length of at least 2. 
-------------------------------------------------------------------------
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (6.4ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35m (0.4ms)[0m  ROLLBACK
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
--------------------------------------------------------------------------
UserTest: test: User should ensure last_name has a length of at most 254. 
--------------------------------------------------------------------------
  [1m[35mUser Exists (0.6ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.5ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.4ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.2ms)[0m  BEGIN
--------------------------------------------------------------------------
UserTest: test: User should ensure login_name has a length of at least 6. 
--------------------------------------------------------------------------
  [1m[36mUser Exists (0.8ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxx' LIMIT 1[0m
  [1m[35mUser Exists (0.5ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxx' LIMIT 1
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxx' LIMIT 1[0m
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxx' LIMIT 1
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxx' LIMIT 1[0m
  [1m[35m (0.3ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
---------------------------------------------------------------------------
UserTest: test: User should ensure login_name has a length of at most 254. 
---------------------------------------------------------------------------
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' LIMIT 1
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' LIMIT 1[0m
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' LIMIT 1
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' LIMIT 1[0m
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx' LIMIT 1
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.5ms)[0m  BEGIN
--------------------------------------------------------------------------
UserTest: test: User should ensure nick_name has a length of at most 254. 
--------------------------------------------------------------------------
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.9ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.6ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.6ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (6.4ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35m (0.4ms)[0m  ROLLBACK
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
-------------------------------------------------
UserTest: test: User should have many locations. 
-------------------------------------------------
  [1m[35m (0.2ms)[0m  ROLLBACK
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
----------------------------------------------
UserTest: test: User should have many phones. 
----------------------------------------------
  [1m[35m (0.4ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
-------------------------------------------------------------------------
UserTest: test: User should not allow first_name to be set to "charles". 
-------------------------------------------------------------------------
  [1m[35mUser Exists (0.6ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35m (0.3ms)[0m  ROLLBACK
  [1m[36m (0.3ms)[0m  [1mBEGIN[0m
--------------------------------------------------------------------------------
UserTest: test: User should require case sensitive unique value for login_name. 
--------------------------------------------------------------------------------
  [1m[35mUser Load (0.6ms)[0m  SELECT "users".* FROM "users" ORDER BY "users"."id" ASC LIMIT 1
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'orstedma' LIMIT 1[0m
  [1m[35mUser Exists (0.8ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" = 'orstedma' LIMIT 1
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
----------------------------------------------------------
UserTest: test: User should require first_name to be set. 
----------------------------------------------------------
  [1m[36mUser Exists (0.6ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.7ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.4ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.4ms)[0m  BEGIN
---------------------------------------------------------
UserTest: test: User should require last_name to be set. 
---------------------------------------------------------
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.6ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.4ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
----------------------------------------------------------
UserTest: test: User should require login_name to be set. 
----------------------------------------------------------
  [1m[36mUser Exists (0.7ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.6ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.3ms)[0m  [1mROLLBACK[0m
  [1m[35m (0.3ms)[0m  BEGIN
----------------------------------------------------------
UserTest: test: User should require start_date to be set. 
----------------------------------------------------------
  [1m[36mUser Exists (0.6ms)[0m  [1mSELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1[0m
  [1m[35mUser Exists (0.6ms)[0m  SELECT 1 AS one FROM "users" WHERE "users"."login_name" IS NULL LIMIT 1
  [1m[36m (0.4ms)[0m  [1mROLLBACK[0m
